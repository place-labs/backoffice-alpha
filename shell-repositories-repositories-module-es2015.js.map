{"version":3,"sources":["./src/app/shell/repositories/about/repository-about.component.ts","./src/app/shell/repositories/about/repository-about.template.html","./src/app/shell/repositories/drivers/repository-drivers.component.ts","./src/app/shell/repositories/drivers/repository-drivers.template.html","./src/app/shell/repositories/repositories.component.ts","./src/app/shell/repositories/repositories.template.html","./src/app/shell/repositories/repositories.module.ts","./src/app/shell/repositories/repositories.routes.ts"],"names":[],"mappings":"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","file":"shell-repositories-repositories-module-es2015.js","sourcesContent":["\nimport { Component, Input, OnInit } from '@angular/core';\nimport { EngineRepository } from '@placeos/ts-client';\n\nimport { BaseDirective } from '../../../shared/globals/base.directive';\nimport { ApplicationService } from '../../../services/app.service';\n\n@Component({\n    selector: 'repository-about',\n    templateUrl: './repository-about.template.html',\n    styleUrls: ['./repository-about.styles.scss']\n})\nexport class RepositoryAboutComponent extends BaseDirective implements OnInit {\n    /** Repository to display details about */\n    @Input() public item: EngineRepository;\n    /** Whether the latest commit is being pulled on the server */\n    public pulling: boolean;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'item',\n            this._service.listen('BACKOFFICE.active_item').subscribe(item => {\n                this.item = item;\n            })\n        );\n    }\n\n    /**\n     * Send request to server to pull the latest commit for the active repository\n     */\n    public pullLatestCommit() {\n        this.pulling = true;\n        this._service.Repositories.pullCommit(this.item.id)\n            .then(\n                (resp: any) => {\n                    this.pulling = false;\n                    this._service.notifyInfo(`Pulled down commit ${resp.commit_hash} for ${this.item.name}`);\n                },\n                err => {\n                    this.pulling = false;\n                    this._service.notifyError(`Error pulling latest commit. Error: ${JSON.stringify(err.response || err.message || err)}`);\n                }\n            );\n    }\n\n}\n","<div class=\"container\" *ngIf=\"item\">\n    <section class=\"actions\">\n        <mat-card>\n            <mat-card-content  i18n=\"@@repoPullActionDetails\">\n                Pull the latest commit for<br>\n                this repository\n            </mat-card-content>\n            <mat-card-actions>\n                <button mat-button [disabled]=\"pulling\" (tapped)=\"pullLatestCommit()\">\n                    <ng-container *ngIf=\"!pulling; else spinner\" i18n=\"@@repoPullAction\">Pull</ng-container>\n                </button>\n            </mat-card-actions>\n        </mat-card>\n    </section>\n    <section class=\"details\">\n        <div class=\"field\">\n            <label i18n=\"@@repoTypeLabel\">Type:</label>\n            <div class=\"value\" i18n=\"@@driverListEmpty\">{ item.type, select, Interface { Interface Repository } Driver { Driver Repository } } </div>\n        </div>\n        <div class=\"field\">\n            <label i18n=\"@@repoFolderNameLabel\">Folder name:</label>\n            <div class=\"value\">{{ item.folder_name || 'No folder set' }}</div>\n        </div>\n        <div class=\"field\">\n            <label i18n=\"@@repoUriLabel\">Repository URI:</label>\n            <div class=\"value\"><a [href]=\"item.uri | safe:'url'\">{{ item.uri || 'No URI set' }}</a></div>\n        </div>\n        <div class=\"field\">\n            <label i18n=\"@@repoCommitHashLabel\">Commit hash:</label>\n            <div class=\"value\">{{ item.commit_hash || 'No Commit hash set' }}</div>\n        </div>\n        <div class=\"field\">\n            <label i18n=\"@@descriptionLabel\">Description:</label>\n            <div class=\"value\">{{ item.description || 'No description' }}</div>\n        </div>\n        <div class=\"field\">\n            <label i18n=\"@@repoCreatedAtLabel\">Created:</label>\n            <div class=\"value\">{{ item.created_at * 1000 | dateFrom }}</div>\n        </div>\n        <div class=\"field\">\n            <label i18n=\"@@repoUpdatedAtLabel\">Updated:</label>\n            <div class=\"value\">{{ item.updated_at * 1000 | dateFrom }}</div>\n        </div>\n    </section>\n</div>\n<ng-template #spinner>\n    <div class=\"spinner\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</ng-template>\n","import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { EngineRepository, EngineDriver } from '@placeos/ts-client';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from '../../../shared/globals/base.directive';\nimport { ApplicationService } from '../../../services/app.service';\nimport {\n    ItemCreateUpdateModalComponent,\n    CreateEditModalData\n} from 'src/app/overlays/item-modal/item-modal.component';\n\n@Component({\n    selector: 'repository-drivers',\n    templateUrl: './repository-drivers.template.html',\n    styleUrls: ['./repository-drivers.styles.scss']\n})\nexport class RepositoryDriversComponent extends BaseDirective implements OnChanges, OnInit {\n    /** Active repository */\n    @Input() public item: EngineRepository;\n    /** Whether driver list is loading */\n    public loading: boolean;\n    /** List of drivers available in the repository */\n    public driver_list: string[] = [];\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'item',\n            this._service.listen('BACKOFFICE.active_item').subscribe(item => {\n                this.item = item;\n                this.load();\n            })\n        );\n    }\n\n    public ngOnChanges(changes: any) {\n        if (changes.item) {\n            this.load();\n        }\n    }\n\n    public load(offset: number = 0) {\n        if (!this.item) {\n            return;\n        }\n        this.loading = true;\n        this._service.Repositories.listDrivers(this.item.id, { offset } as any).then(\n            list => {\n                this.loading = false;\n                this.driver_list = list || [];\n            },\n            () => this.loading = false\n        );\n    }\n\n    public newDriver(driver: string) {\n        if (this.item.id) {\n            this._dialog.open<ItemCreateUpdateModalComponent, CreateEditModalData>(\n                ItemCreateUpdateModalComponent,\n                {\n                    height: 'auto',\n                    width: 'auto',\n                    maxHeight: 'calc(100vh - 2em)',\n                    maxWidth: 'calc(100vw - 2em)',\n                    data: {\n                        item: new EngineDriver({\n                            name: '',\n                            module_name: '',\n                            repository_id: this.item.id,\n                            file_name: driver\n                        }),\n                        service: this._service.Drivers\n                    }\n                }\n            );\n        }\n    }\n}\n","<div class=\"container\" *ngIf=\"item\">\n    <h3 i18n=\"@@repoDriverHeader\">Available Drivers</h3>\n    <div class=\"settings\" *ngIf=\"!loading; else load_state\">\n        <table *ngIf=\"driver_list && driver_list.length > 0\">\n            <thead>\n                <td class=\"flex\" i18n=\"@@driverListname\">Name</td>\n                <td>\n\n                </td>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let item of driver_list\">\n                    <td [innerHTML]=\"item | driverFormat\">\n                    </td>\n                    <td class=\"small\">\n                        <button mat-icon-button (tapped)=\"newDriver(item)\">\n                            <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n                        </button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <div class=\"info-block\" *ngIf=\"!driver_list || driver_list.length <= 0\">\n            <div class=\"text\" i18n=\"@@driverListEmpty\">No drivers for repository</div>\n        </div>\n    </div>\n</div>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"48\"></mat-spinner>\n        </div>\n        <div class=\"text\" i18n=\"@@driverListLoading\">Loading driver list...</div>\n    </div>\n</ng-template>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EngineRepository, EngineRepositoryType } from '@placeos/ts-client';\n\nimport { ApplicationService } from '../../services/app.service';\nimport { BaseRootComponent } from '../../shared/components/base-root.component';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport {\n    ConfirmModalData,\n    ConfirmModalComponent,\n    CONFIRM_METADATA\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { ItemCreateUpdateModalComponent } from 'src/app/overlays/item-modal/item-modal.component';\n\n@Component({\n    selector: 'app-repositories',\n    templateUrl: './repositories.template.html',\n    styleUrls: ['./repositories.styles.scss']\n})\nexport class RepositoriesComponent extends BaseRootComponent<EngineRepository> {\n    /** Number of drivers in the repository */\n    public driver_count: number;\n\n    constructor(\n        protected _service: ApplicationService,\n        protected _route: ActivatedRoute,\n        protected _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super(_service, _route, _router);\n        this.service = this._service.Repositories;\n    }\n\n    public ngOnInit(): void {\n        super.ngOnInit();\n        this._service.title = 'Repositories';\n    }\n\n    protected loadValues() {\n        const query: any = { offset: 0 };\n        console.log('Type:', this.item.type);\n        if (this.item.type === EngineRepositoryType.Driver) {\n            // Get driver count for repository\n            this._service.Repositories.listDrivers(this.item.id, query).then(\n                list => (this.driver_count = list.length)\n            );\n        } else {\n            this.driver_count = -1;\n        }\n    }\n\n    /**\n     * Open the modal to create a new repository\n     */\n    protected newItem(copy: boolean = false) {\n        if (this.modal_ref) { return; }\n        this.modal_ref = this._dialog.open(ItemCreateUpdateModalComponent, {\n            height: 'auto',\n            width: 'auto',\n            maxHeight: 'calc(100vh - 2em)',\n            maxWidth: 'calc(100vw - 2em)',\n            data: {\n                item: copy ? new EngineRepository({ ...this.item, id: '', name: `${this.item.name} (1)` }) : new EngineRepository(),\n                service: this._service.Repositories\n            }\n        });\n        this.subscription('modal_event', this.modal_ref.componentInstance.event.subscribe(event => {\n            if (event.reason === 'done') {\n                this._router.navigate(['/repositories', event.metadata.item.id]);\n            }\n        }));\n        this.modal_ref.afterClosed().subscribe(() => {\n            this.unsub('modal_events');\n            this.modal_ref = null;\n        });\n    }\n\n    /**\n     * Open the modal to create edit the active repository\n     */\n    protected editItem() {\n        if (this.item && !this.modal_ref) {\n            this.modal_ref = this._dialog.open(ItemCreateUpdateModalComponent, {\n                height: 'auto',\n                width: 'auto',\n                maxHeight: 'calc(100vh - 2em)',\n                maxWidth: 'calc(100vw - 2em)',\n                data: {\n                    item: this.item,\n                    service: this._service.Repositories\n                }\n            });\n            this.modal_ref.afterClosed().subscribe(() => {\n                this.unsub('modal_events');\n                this.modal_ref = null;\n            });\n        }\n    }\n\n    /**\n     * Delete the active repository\n     */\n    protected deleteItem() {\n        if (this.item && !this.modal_ref) {\n            this.modal_ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n                ConfirmModalComponent,\n                {\n                    ...CONFIRM_METADATA,\n                    data: {\n                        title: `Delete repository`,\n                        content: `<p>Are you sure you want delete this repository?</p><p>Deleting this repository will <strong>immediately</strong> remove it from all associated systems and zones</p>`,\n                        icon: { type: 'icon', class: 'backoffice-trash' }\n                    }\n                }\n            );\n            this.subscription(\n                'modal_events',\n                this.modal_ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n                    if (event.reason === 'done') {\n                        this.modal_ref.componentInstance.loading = 'Deleting repository...';\n                        await this.item.delete().catch(err => {\n                            this.modal_ref.componentInstance.loading = null;\n                            this._service.notifyError(\n                                `Error deleting repository. Error: ${JSON.stringify(err.response || err.message || err)}`\n                            );\n                            throw err;\n                        });\n                        this._service.set('BACKOFFICE.removed', this.item.id);\n                        this._router.navigate(['/repositories']);\n                        this.modal_ref.close();\n                    }\n                })\n            );\n            this.modal_ref.afterClosed().subscribe(() => {\n                this.unsub('modal_events');\n                this.modal_ref = null;\n            });\n        }\n    }\n}\n","<div class=\"container\" [class.show]=\"show_sidebar\">\n    <div class=\"sidebar\">\n        <sidebar\n            heading=\"Repositories\"\n            [module]=\"module\"\n            [close]=\"show_sidebar\"\n            (event)=\"sidebarEvent($event)\"\n        ></sidebar>\n    </div>\n    <main (touchrelease)=\"show_sidebar = false\">\n        <item-display\n            name=\"repository\"\n            route=\"repositories\"\n            [item]=\"item\"\n            [loading]=\"loading_item\"\n            [tabs]=\"driver_count < 0 ?\n                [\n                    { id: 'about', name: 'About', icon: { class: 'backoffice-info-with-circle' } }\n                ] : [\n                    { id: 'about', name: 'About', icon: { class: 'backoffice-info-with-circle' } },\n                    { id: 'drivers', name: 'Drivers', count: driver_count, icon: { class: 'backoffice-documents' } }\n                ]\n            \"\n            (event)=\"itemEvent($event)\"\n        >\n        </item-display>\n    </main>\n</div>\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { ROUTES } from './repositories.routes';\n\nimport { RepositoriesComponent } from './repositories.component';\nimport { RepositoryAboutComponent } from './about/repository-about.component';\nimport { RepositoryDriversComponent } from './drivers/repository-drivers.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n    declarations: [\n        RepositoriesComponent,\n        RepositoryAboutComponent,\n        RepositoryDriversComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule\n    ]\n})\nexport class AppRepositoriesModule { }\n","import { Routes } from '@angular/router';\n\nimport { RepositoriesComponent } from './repositories.component';\nimport { RepositoryAboutComponent } from './about/repository-about.component';\nimport { RepositoryDriversComponent } from './drivers/repository-drivers.component';\n\nexport const ROUTES: Routes = [\n    {\n        path: ':id',\n        component: RepositoriesComponent,\n        children: [\n            { path: 'about', component: RepositoryAboutComponent },\n            { path: 'drivers', component: RepositoryDriversComponent },\n            { path: '**', redirectTo: 'about' }\n        ]\n    },\n    { path: '**', redirectTo: '-' }\n];\n"],"sourceRoot":"webpack:///"}