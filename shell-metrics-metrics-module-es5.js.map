{"version":3,"sources":["webpack:///src/app/shell/metrics/metrics.component.ts","webpack:///src/app/shell/metrics/metrics.template.html","webpack:///src/app/shell/metrics/metrics.module.ts","webpack:///src/app/shell/metrics/metrics.routes.ts"],"names":["MetricsComponent","_composer","_service","updateTime","interval","title","now","time","format","date","hour_angle","hour","minute","minute_angle","second","second_angle","authority","auth","metrics","selector","templateUrl","styleUrls","AppMetricsModule","forChild","declarations","imports","ROUTES","path","component","children","redirectTo"],"mappings":"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","file":"shell-metrics-metrics-module-es5.js","sourcesContent":["\nimport { Component, OnInit } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseDirective } from '../../shared/globals/base.directive';\n\nimport * as dayjs from 'dayjs';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'app-metrics',\n    templateUrl: './metrics.template.html',\n    styleUrls: ['./metrics.styles.scss']\n})\nexport class MetricsComponent extends BaseDirective implements OnInit {\n    /** Whether to only render the metrics view */\n    public fullscreen: boolean;\n    /** Current time of the day */\n    public time: string;\n    /** Display string for the current day */\n    public date: string;\n    /** Angle to display the hour hand of the clock at */\n    public hour_angle: number;\n    /** Angle to display the minute hand of the clock at */\n    public minute_angle: number;\n    /** Angle to display the seconds hand of the clock at */\n    public second_angle: number;\n\n    /** URL for the metrics interface */\n    public get metrics_url(): string {\n        const authority = this._composer.auth.authority;\n        return authority ? authority.metrics : '';\n    }\n\n    constructor(private _composer: ComposerService, private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.updateTime();\n        this.interval('time', () => this.updateTime(), 1000);\n        this._service.title = 'Metrics';\n    }\n\n    public updateTime() {\n        const now = dayjs();\n        this.time = now.format('hh:mm A');\n        this.date = now.format('ddd, MMM D');\n        this.hour_angle = (now.hour() % 12 + now.minute() / 60) / 12 * 360;\n        this.minute_angle = (now.minute() + now.second() / 60) / 60 * 360;\n        this.second_angle = now.second() / 60 * 360;\n    }\n}\n","<div class=\"container\" [class.fullscreen]=\"fullscreen\">\n    <div class=\"header\">\n        <div class=\"heading\"  i18n=\"@@metricsHeader\">Metrics</div>\n        <div class=\"time-display\">\n            <div class=\"clock\">\n                <div class=\"hand hour\" [style.transform]=\"'translateX(-50%) rotate(' + hour_angle + 'deg)'\"></div>\n                <div class=\"hand minute\" [style.transform]=\"'translateX(-50%) rotate(' + minute_angle + 'deg)'\"></div>\n                <div class=\"hand second\" [style.transform]=\"'translateX(-50%) rotate(' + second_angle + 'deg)'\"></div>\n                <div class=\"center\"></div>\n            </div>\n            <div class=\"display\">\n                <div class=\"time\">{{time}}</div>\n                <div class=\"day\">{{date}}</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\">\n        <iframe [src]=\"metrics_url | safe:'resource'\"></iframe>\n    </div>\n</div>\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { ROUTES } from './metrics.routes';\n\nimport { MetricsComponent } from './metrics.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n    declarations: [\n        MetricsComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule\n    ]\n})\nexport class AppMetricsModule { }\n","\nimport { Routes } from '@angular/router';\nimport { MetricsComponent } from './metrics.component';\n\nexport const ROUTES: Routes = [\n    { path: '', component: MetricsComponent, children: [] },\n    { path: 'dashboard', component: MetricsComponent, children: [] },\n    { path: 'dashboard/:period', component: MetricsComponent, children: [] },\n    { path: ':period', component: MetricsComponent, children: [] },\n    { path: '**',      redirectTo: '' },\n];\n"]}