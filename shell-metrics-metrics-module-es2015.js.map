{"version":3,"sources":["./src/app/shell/metrics/metrics.component.ts","./src/app/shell/metrics/metrics.template.html","./src/app/shell/metrics/metrics.module.ts","./src/app/shell/metrics/metrics.routes.ts"],"names":[],"mappings":"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","file":"shell-metrics-metrics-module-es2015.js","sourcesContent":["\nimport { Component, OnInit } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseDirective } from '../../shared/globals/base.directive';\n\nimport * as dayjs from 'dayjs';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'app-metrics',\n    templateUrl: './metrics.template.html',\n    styleUrls: ['./metrics.styles.scss']\n})\nexport class MetricsComponent extends BaseDirective implements OnInit {\n    /** Whether to only render the metrics view */\n    public fullscreen: boolean;\n    /** Current time of the day */\n    public time: string;\n    /** Display string for the current day */\n    public date: string;\n    /** Angle to display the hour hand of the clock at */\n    public hour_angle: number;\n    /** Angle to display the minute hand of the clock at */\n    public minute_angle: number;\n    /** Angle to display the seconds hand of the clock at */\n    public second_angle: number;\n\n    /** URL for the metrics interface */\n    public get metrics_url(): string {\n        const authority = this._composer.auth.authority;\n        return authority ? authority.metrics : '';\n    }\n\n    constructor(private _composer: ComposerService, private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.updateTime();\n        this.interval('time', () => this.updateTime(), 1000);\n        this._service.title = 'Metrics';\n    }\n\n    public updateTime() {\n        const now = dayjs();\n        this.time = now.format('hh:mm A');\n        this.date = now.format('ddd, MMM D');\n        this.hour_angle = (now.hour() % 12 + now.minute() / 60) / 12 * 360;\n        this.minute_angle = (now.minute() + now.second() / 60) / 60 * 360;\n        this.second_angle = now.second() / 60 * 360;\n    }\n}\n","<div class=\"container\" [class.fullscreen]=\"fullscreen\">\n    <div class=\"header\">\n        <div class=\"heading\"  i18n=\"@@metricsHeader\">Metrics</div>\n        <div class=\"time-display\">\n            <div class=\"clock\">\n                <div class=\"hand hour\" [style.transform]=\"'translateX(-50%) rotate(' + hour_angle + 'deg)'\"></div>\n                <div class=\"hand minute\" [style.transform]=\"'translateX(-50%) rotate(' + minute_angle + 'deg)'\"></div>\n                <div class=\"hand second\" [style.transform]=\"'translateX(-50%) rotate(' + second_angle + 'deg)'\"></div>\n                <div class=\"center\"></div>\n            </div>\n            <div class=\"display\">\n                <div class=\"time\">{{time}}</div>\n                <div class=\"day\">{{date}}</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\">\n        <iframe [src]=\"metrics_url | safe:'resource'\"></iframe>\n    </div>\n</div>\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { ROUTES } from './metrics.routes';\n\nimport { MetricsComponent } from './metrics.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n    declarations: [\n        MetricsComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule\n    ]\n})\nexport class AppMetricsModule { }\n","\nimport { Routes } from '@angular/router';\nimport { MetricsComponent } from './metrics.component';\n\nexport const ROUTES: Routes = [\n    { path: '', component: MetricsComponent, children: [] },\n    { path: 'dashboard', component: MetricsComponent, children: [] },\n    { path: 'dashboard/:period', component: MetricsComponent, children: [] },\n    { path: ':period', component: MetricsComponent, children: [] },\n    { path: '**',      redirectTo: '' },\n];\n"],"sourceRoot":"webpack:///"}