{"version":3,"sources":["webpack:///src/app/shell/modules/module-about/module-about.template.html","webpack:///src/app/shell/modules/module-about/module-about.component.ts","webpack:///src/app/shell/modules/module-systems/module-systems.component.ts","webpack:///src/app/shell/modules/module-systems/module-systems.template.html","webpack:///src/app/shell/modules/modules.component.ts","webpack:///src/app/shell/modules/modules.template.html","webpack:///src/app/shell/modules/modules.module.ts","webpack:///src/app/shell/modules/modules.routes.ts"],"names":["ModuleAboutComponent","_service","_dialog","other_settings","subscription","listen","subscribe","item","loadDriver","loadSystem","loadSettings","changes","driver_id","Drivers","show","then","driver","system_id","Systems","system","Modules","settings","id","stopping","stop","notifySuccess","connected","err","length","notifyError","viewDetails","start","content","open","data","get","user","Users","getValue","levels","NeverDisplay","name","None","support","sys_admin","push","Support","Admin","selector","templateUrl","styleUrls","ModuleSystemsComponent","search$","loadSystems","search_results$","pipe","query","loading","q","module_id","offset","console","error","list","search","search_str","toLowerCase","filter","indexOf","email","system_list","ModulesComponent","_route","_router","service","title","limit","system_count","last_total","modal_ref","height","width","maxHeight","maxWidth","componentInstance","event","reason","navigate","metadata","afterClosed","unsub","icon","type","set","close","JSON","stringify","response","message","sidebarEvent","itemEvent","AppModulesModule","forChild","declarations","imports","ROUTES","path","component","children","redirectTo"],"mappings":"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","file":"shell-modules-modules-module-es5.js","sourcesContent":["<div class=\"container\" *ngIf=\"item\">\n    <div class=\"settings\">\n        <header *ngIf=\"item.driver\"  i18n=\"@@moduleDetailsDriver\">\n            Driver:&nbsp;<span>\n                <a [routerLink]=\"['/drivers', item.driver_id]\"\n                    >{{item.driver.name || '&lt;Unnamed&gt;'}}</a\n                >\n            </span>\n        </header>\n        <header i18n=\"@@moduleDetailsSystem\">\n            Logic for system:&nbsp;<span *ngIf=\"system\">\n                <a [routerLink]=\"['/systems', system.id]\">{{system?.name}}</a>\n            </span>\n        </header>\n        <section>\n            <button\n                mat-button\n                [disabled]=\"stopping\"\n                (tapped)=\"item.connected ? stopModule(): startModule()\"\n            >\n                <div class=\"text\" *ngIf=\"!stopping\"  i18n=\"@@moduleStateToggle\">\n                    { item.connected, select, true { Stop Module } false { Start Module } }\n                </div>\n                <mat-spinner diameter=\"32\" *ngIf=\"stopping\"></mat-spinner>\n            </button>\n        </section>\n        <hr />\n        <header class=\"settings\" i18n=\"@@settingsLabel\">Settings</header>\n        <section *ngIf=\"!loading_settings; else load_state\">\n            <a-settings-form\n                [id]=\"item.id\"\n                [merge]=\"true\"\n                [settings]=\"item.settings\"\n                [merge_settings]=\"other_settings || []\"\n            ></a-settings-form>\n        </section>\n    </div>\n</div>\n<ng-template #load_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"48\"></mat-spinner>\n        </div>\n        <div class=\"text\" i18n=\"@@moduleDetailsLoading\">Loading module settings...</div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges, OnInit } from '@angular/core';\nimport { EngineModule, EngineDriver, EngineSystem, EngineSettings, EncryptionLevel } from '@placeos/ts-client';\n\nimport { BaseDirective } from '../../../shared/globals/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { mergeYAMLSettings } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { ViewResponseModalComponent } from 'src/app/overlays/view-response-modal/view-response-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n    selector: 'module-about',\n    templateUrl: './module-about.template.html',\n    styleUrls: ['./module-about.styles.scss']\n})\nexport class ModuleAboutComponent extends BaseDirective implements OnChanges, OnInit {\n    /** Item to render */\n    @Input() public item: EngineModule;\n    /** Driver for the active item */\n    public driver: EngineDriver;\n    /** Control System for the active item */\n    public system: EngineSystem;\n    /** List of settings for associated modules, drivers and zones */\n    public other_settings: EngineSettings[] = [];\n    /** Whether module is being stopped */\n    public stopping: boolean;\n\n    /** Whether application is loading settings for item */\n    public get loading_settings(): boolean {\n        return this._service.get('loading_settings');\n    }\n\n    /** Displayable encryption levels for settings */\n    public get levels(): Identity[] {\n        const user = this._service.Users.user.getValue();\n        const levels = [\n            { id: EncryptionLevel.NeverDisplay, name: 'Merged' },\n            { id: EncryptionLevel.None, name: 'Unencrypted' }\n        ];\n        if (user.support || user.sys_admin) {\n            levels.push({ id: EncryptionLevel.Support, name: 'Support' });\n        }\n        if (user.sys_admin) {\n            levels.push({ id: EncryptionLevel.Admin, name: 'Admin' });\n        }\n        return levels;\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'item',\n            this._service.listen('BACKOFFICE.active_item').subscribe(item => {\n                this.item = item;\n                this.loadDriver();\n                this.loadSystem();\n                this.loadSettings();\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.item) {\n            this.loadDriver();\n            this.loadSystem();\n            this.loadSettings();\n        }\n    }\n\n    public loadDriver() {\n        if (this.item && this.item.driver_id) {\n            this._service.Drivers.show(this.item.driver_id).then(driver => {\n                this.driver = driver;\n            });\n        }\n    }\n\n    public loadSystem() {\n        if (this.item && this.item.system_id) {\n            this._service.Systems.show(this.item.system_id).then(system => {\n                this.system = system;\n            });\n        }\n    }\n\n    public async loadSettings() {\n        if (!this.item) {\n            return;\n        }\n        this.other_settings = await this._service.Modules.settings(this.item.id);\n    }\n\n    public stopModule() {\n        this.stopping = true;\n        this.item.stop().then(\n            () => {\n                this.stopping = false;\n                this._service.notifySuccess('Module successfully stopped');\n                (this.item as any).connected = false;\n            },\n            err => {\n                this.stopping = false;\n                if (typeof err === 'string' && err.length < 64) {\n                    this._service.notifyError(err);\n                } else {\n                    this._service.notifyError(\n                        `Failed to stop device '${this.item.id}'.\\nView Error?`,\n                        'View',\n                        () => this.viewDetails(err)\n                    );\n                }\n            }\n        );\n    }\n\n    public startModule() {\n        this.stopping = true;\n        this.item.start().then(\n            () => {\n                this.stopping = false;\n                this._service.notifySuccess('Module successfully started');\n                (this.item as any).connected = true;\n            },\n            err => {\n                this.stopping = false;\n                if (typeof err === 'string' && err.length < 64) {\n                    this._service.notifyError(err);\n                } else {\n                    this._service.notifyError(\n                        `Failed to start device '${this.item.id}'.\\nView Error?`,\n                        'View',\n                        () => this.viewDetails(err)\n                    );\n                }\n            }\n        );\n    }\n\n    /** View Results of the execute */\n    private viewDetails(content: any) {\n        this._dialog.open<ViewResponseModalComponent>(ViewResponseModalComponent, {\n            data: { content }\n        });\n    }\n}\n","import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { EngineModule, EngineSystem } from '@placeos/ts-client';\n\nimport { BaseDirective } from '../../../shared/globals/base.directive';\nimport { ApplicationService } from '../../../services/app.service';\nimport { Subject, Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map } from 'rxjs/operators';\n\n@Component({\n    selector: 'module-systems',\n    templateUrl: './module-systems.template.html',\n    styleUrls: ['./module-systems.styles.scss']\n})\nexport class ModuleSystemsComponent extends BaseDirective implements OnChanges, OnInit {\n    @Input() public item: EngineModule;\n    /** Filter string for the system list */\n    public search_str: string;\n    /** List of systems associated with the module */\n    public system_list: EngineSystem[];\n    /** List of items from an API search */\n    public search_results$: Observable<EngineSystem[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** Whether systems are being loaded */\n    public loading: boolean;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'item',\n            this._service.listen('BACKOFFICE.active_item').subscribe(item => {\n                this.item = item;\n                this.loadSystems();\n            })\n        );\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.loading = true;\n                return this._service.Systems.query({\n                    q: query,\n                    module_id: this.item.id,\n                    offset: 0\n                });\n            }),\n            catchError(err => {\n                console.error(err);\n                return of([]);\n            }),\n            map((list: EngineSystem[]) => {\n                this.loading = false;\n                const search = this.search_str.toLowerCase();\n                return list.filter(\n                    (item: any) =>\n                        item.name.toLowerCase().indexOf(search) >= 0 ||\n                        (item.email || '').toLowerCase().indexOf(search) >= 0\n                );\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => (this.system_list = list))\n        );\n    }\n\n    public ngOnChanges(changes: any) {\n        if (changes.item) {\n            this.loadSystems();\n        }\n    }\n\n    public loadSystems(offset: number = 0) {\n        if (!this.item) { return; }\n        this._service.Systems.query({ module_id: this.item.id, offset }).then(\n            list => {\n                this.system_list = list;\n            },\n            () => null\n        );\n    }\n}\n","<div class=\"container\">\n    <div class=\"btn\">\n        <mat-form-field appearance=\"outline\">\n            <div class=\"prefix\" matPrefix>\n                <app-icon [icon]=\"{ class: 'backoffice-magnifying-glass' }\"></app-icon>\n            </div>\n            <input\n                matInput\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"search$.next($event)\"\n                name=\"search-filter\"\n                placeholder=\"Filter Systems\"\n                i18n-placeholder=\"@@systemTableFilter\"\n            />\n        </mat-form-field>\n    </div>\n    <div class=\"list\" *ngIf=\"system_list && system_list.length > 0; else empty_state\">\n        <table>\n            <thead>\n                <td class=\"flex\"  i18n=\"@@systemTableName\">Name</td>\n                <td class=\"devices\" i18n=\"@@systemTablePanelCount\">No. Modules</td>\n                <td class=\"created\" i18n=\"@@systemTableCreated\">Created</td>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let item of system_list\">\n                    <td class=\"flex\">\n                        <a\n                            [routerLink]=\"['/systems', item.id]\"\n                            routerLinkActive=\"router-link-active\"\n                            [matTooltip]=\"item.id\"\n                        >\n                            {{item.name}}\n                        </a>\n                    </td>\n                    <td class=\"devices\">{{item.modules?.length}}</td>\n                    <td class=\"created\">{{item.display?.created}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"text\" i18n=\"@@systemTableEmpty\">No matching systems found</div>\n    </div>\n</ng-template>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EngineModule } from '@placeos/ts-client';\n\nimport { ApplicationService } from '../../services/app.service';\nimport { BaseRootComponent } from '../../shared/components/base-root.component';\nimport { ItemCreateUpdateModalComponent } from 'src/app/overlays/item-modal/item-modal.component';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'app-modules',\n    templateUrl: './modules.template.html',\n    styleUrls: ['./modules.styles.scss']\n})\nexport class ModulesComponent extends BaseRootComponent<EngineModule> {\n    /** Number of systems for the active device */\n    public system_count: number;\n    /** Whether the list of devices should show only the disconnected devices */\n    public only_disconnected: boolean;\n\n    constructor(\n        protected _service: ApplicationService,\n        protected _route: ActivatedRoute,\n        protected _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super(_service, _route, _router);\n        this.service = this._service.Modules;\n    }\n\n    public ngOnInit(): void {\n        super.ngOnInit();\n        this._service.title = 'Modules';\n    }\n\n    protected loadValues() {\n        const query: any = { offset: 0, limit: 1, module_id: this.item.id };\n        // Get system count\n        this._service.Systems.query(query).then((list) => {\n            this.system_count = this._service.Systems.last_total || list.length || 0;\n        });\n    }\n\n    /**\n     * Open the modal to create a new system\n     */\n    protected newItem() {\n        if (this.modal_ref) { return }\n        this.modal_ref = this._dialog.open(ItemCreateUpdateModalComponent, {\n            height: 'auto',\n            width: 'auto',\n            maxHeight: 'calc(100vh - 2em)',\n            maxWidth: 'calc(100vw - 2em)',\n            data: {\n                item: new EngineModule(),\n                service: this._service.Modules\n            }\n        });\n        this.subscription('modal_events', this.modal_ref.componentInstance.event.subscribe((event) => {\n            if (event.reason === 'done') {\n                this._router.navigate(['/modules', event.metadata.item.id]);\n            }\n        }));\n        this.modal_ref.afterClosed().subscribe(() => {\n            this.unsub('modal_events');\n            this.modal_ref = null;\n        });\n    }\n\n    /**\n     * Open the modal to create a new system\n     */\n    protected editItem() {\n        if (this.item && !this.modal_ref) {\n            this.modal_ref = this._dialog.open(ItemCreateUpdateModalComponent, {\n                height: 'auto',\n                width: 'auto',\n                maxHeight: 'calc(100vh - 2em)',\n                maxWidth: 'calc(100vw - 2em)',\n                data: {\n                    item: this.item,\n                    service: this._service.Modules\n                }\n            });\n            this.modal_ref.afterClosed().subscribe(() => {\n                this.unsub('modal_events');\n                this.modal_ref = null;\n            });\n        }\n    }\n\n    protected deleteItem() {\n        if (this.item && !this.modal_ref) {\n            this.modal_ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n                ConfirmModalComponent,\n                {\n                    ...CONFIRM_METADATA,\n                    data: {\n                        title: `Delete module`,\n                        content: `<p>Are you sure you want delete this module?</p><p>Deleting this will module <strong>immediately</strong> remove it from any system associated with it</p>`,\n                        icon: { type: 'icon', class: 'backoffice-trash' }\n                    }\n                }\n            );\n            this.subscription(\n                'delete_confirm',\n                this.modal_ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    if (event.reason === 'done') {\n                        this.modal_ref.componentInstance.loading = 'Deleting module...';\n                        this.item.delete().then(\n                            () => {\n                                this._service.notifySuccess(\n                                    `Successfully deleted module \"${this.item.name}\".`\n                                );\n                                this._router.navigate(['/modules']);\n                                this._service.set('BACKOFFICE.removed', this.item.id);\n                                this.modal_ref.close();\n                            },\n                            err => {\n                                this.modal_ref.componentInstance.loading = null;\n                                this._service.notifyError(`Error deleting module. Error: ${JSON.stringify(err.response || err.message || err)}`);\n                            }\n                        );\n                    }\n                })\n            );\n            this.modal_ref.afterClosed().subscribe(() => {\n                this.unsub('modal_events');\n                this.modal_ref = null;\n            });\n        }\n    }\n}\n","<div class=\"container\" [class.show]=\"show_sidebar\">\n    <div class=\"sidebar\">\n        <sidebar\n            heading=\"Modules\"\n            [module]=\"module\"\n            [close]=\"show_sidebar\"\n            [queryParams]=\"only_disconnected ? { connected: false, running: true } : {}\"\n            (event)=\"sidebarEvent($event)\"\n        >\n            <div class=\"toggle\">\n                <mat-slide-toggle [(ngModel)]=\"only_disconnected\" labelPosition=\"before\"  i18n=\"@@moduleDisconnectedFilterToggle\">\n                    Only Disconnected\n                </mat-slide-toggle>\n            </div>\n        </sidebar>\n    </div>\n    <main (touchrelease)=\"show_sidebar = false\">\n        <item-display\n            name=\"module\"\n            route=\"modules\"\n            [item]=\"item\"\n            [tabs]=\"[\n                { id: 'about', name: 'About', icon: { class: 'backoffice-info-with-circle' } },\n                {\n                    id: 'systems',\n                    name: 'Systems',\n                    count: system_count,\n                    icon: { class: 'backoffice-documents' }\n                }\n            ]\"\n            (event)=\"itemEvent($event)\"\n        >\n        </item-display>\n    </main>\n</div>\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { ROUTES } from './modules.routes';\n\nimport { ModulesComponent } from './modules.component';\nimport { ModuleAboutComponent } from './module-about/module-about.component';\nimport { ModuleSystemsComponent } from './module-systems/module-systems.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n    declarations: [\n        ModulesComponent,\n        ModuleAboutComponent,\n        ModuleSystemsComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule\n    ]\n})\nexport class AppModulesModule { }\n","\nimport { Routes } from '@angular/router';\n\nimport { ModulesComponent } from './modules.component';\nimport { ModuleAboutComponent } from './module-about/module-about.component';\nimport { ModuleSystemsComponent } from './module-systems/module-systems.component';\n\nexport const ROUTES: Routes = [\n    {\n        path: ':id', component: ModulesComponent, children: [\n            { path: 'about', component: ModuleAboutComponent },\n            { path: 'systems', component: ModuleSystemsComponent },\n            { path: '**',      redirectTo: 'about' }\n        ]\n    },\n    { path: '**',      redirectTo: '-' }\n];\n"]}