{"version":3,"sources":["webpack:///src/app/shell/domains/domain-applications/domain-applications.component.ts","webpack:///src/app/shell/domains/domain-applications/domain-applications.template.html","webpack:///src/app/shell/domains/domain-authentication/domain-authentication.component.ts","webpack:///src/app/shell/domains/domain-authentication/domain-authentication.template.html","webpack:///src/app/shell/domains/domain-users/domain-users.component.ts","webpack:///src/app/shell/domains/domain-users/domain-users.template.html","webpack:///src/app/shell/domains/domains.component.ts","webpack:///src/app/shell/domains/domains.template.html","webpack:///src/app/shell/domains/domains.module.ts","webpack:///src/app/shell/domains/domains.routes.ts"],"names":["DomainApplicationsComponent","_service","_dialog","show_secret","subscription","listen","subscribe","item","loadApplications","changes","id","secret","notifyInfo","offset","Applications","query","owner_id","then","list","application_list","found","i","push","ref","open","height","width","maxHeight","maxWidth","data","service","componentInstance","event","reason","set","valueOf","title","content","name","icon","type","loading","notifySuccess","close","unsub","err","notifyError","JSON","stringify","response","message","selector","templateUrl","styleUrls","DomainAuthenticationComponent","auth_sources","source_types","loadAuthSources","Promise","all","OAuthSources","authority_id","SAMLAuthSources","LDAPAuthSources","responses","forEach","auth_source","addAuthSourceToList","domain","afterClosed","source","index","findIndex","a_source","splice","newAuthSource","DomainUsersComponent","model","loadUsers","Users","DomainsComponent","_route","_router","Domains","loadValues","limit","owner","applications","last_total","length","user_count","copy","modal_ref","navigate","metadata","sidebarEvent","itemEvent","AppDomainsModule","forChild","declarations","imports","ROUTES","path","component","children","redirectTo"],"mappings":"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","file":"shell-domains-domains-module-es5.js","sourcesContent":["import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { EngineDomain, EngineApplication } from '@placeos/ts-client';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from '../../../shared/globals/base.directive';\nimport { ApplicationService } from '../../../services/app.service';\nimport { ItemCreateUpdateModalComponent } from 'src/app/overlays/item-modal/item-modal.component';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { copyToClipboard } from 'src/app/shared/utilities/general.utilities';\n\n@Component({\n    selector: 'domain-applications',\n    templateUrl: './domain-applications.template.html',\n    styleUrls: ['./domain-applications.styles.scss']\n})\nexport class DomainApplicationsComponent extends BaseDirective implements OnChanges, OnInit {\n    /** Active domain */\n    @Input() public item: EngineDomain;\n    /** List of applications associated with the active domain */\n    public application_list: EngineApplication[];\n\n    public show_secret: HashMap<boolean> = {};\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'item',\n            this._service.listen('BACKOFFICE.active_item').subscribe(item => {\n                this.item = item;\n                this.loadApplications();\n            })\n        );\n    }\n\n    public ngOnChanges(changes: any) {\n        if (changes.item) {\n            this.loadApplications();\n        }\n    }\n\n    public copySecret(item: EngineApplication) {\n        this.show_secret[item.id] = false;\n        copyToClipboard(item.secret);\n        this._service.notifyInfo('Copied client secret to clipboard');\n    }\n\n    public loadApplications(offset: number = 0) {\n        if (!this.item) { return; }\n        this._service.Applications.query({ owner_id: this.item.id, offset } as any).then(\n            list => {\n                if (!offset) {\n                    this.application_list = [];\n                }\n                for (const item of list || []) {\n                    let found = false;\n                    for (const i of this.application_list) {\n                        if (i.id === item.id) {\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) {\n                        this.application_list.push(item);\n                    }\n                }\n            },\n            () => null\n        );\n    }\n    /**\n     * Open the modal to create a new system\n     */\n    public newApplication() {\n        const ref = this._dialog.open(ItemCreateUpdateModalComponent, {\n            height: 'auto',\n            width: 'auto',\n            maxHeight: 'calc(100vh - 2em)',\n            maxWidth: 'calc(100vw - 2em)',\n            data: {\n                item: new EngineApplication(),\n                service: this._service.Applications\n            }\n        });\n        this.subscription('item-form', ref.componentInstance.event.subscribe((event) => {\n            if (event.reason === 'done') {\n                this.loadApplications();\n                this._service.set('APP_LIST_CHANGE', dayjs().valueOf());\n            }\n        }));\n    }\n\n    /**\n     * Open the modal to create a new system\n     */\n    public editApplication(item: EngineApplication) {\n        if (this.item) {\n            const ref = this._dialog.open(ItemCreateUpdateModalComponent, {\n                height: 'auto',\n                width: 'auto',\n                maxHeight: 'calc(100vh - 2em)',\n                maxWidth: 'calc(100vw - 2em)',\n                data: {\n                    item,\n                    service: this._service.Applications\n                }\n            });\n            this.subscription('item-form', ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done') {\n                    this.loadApplications();\n                }\n            }));\n        }\n    }\n\n    public deleteApplication(item: EngineApplication) {\n        if (item) {\n            const ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n                ConfirmModalComponent,\n                {\n                    ...CONFIRM_METADATA,\n                    data: {\n                        title: `Delete application`,\n                        content: `<p>Are you sure you want delete the application ${item.name}?</p><p>Configuration will be <strong>immediately</strong> updated</p>`,\n                        icon: { type: 'icon', class: 'backoffice-trash' }\n                    }\n                }\n            );\n            this.subscription(\n                'delete_confirm',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    if (event.reason === 'done') {\n                        ref.componentInstance.loading = 'Deleting application...';\n                        item.delete().then(\n                            () => {\n                                this._service.notifySuccess(\n                                    `Successfully deleted application \"${item.name}\".`\n                                );\n                                this.loadApplications();\n                                ref.close();\n                                this.unsub('delete_confirm');\n                            },\n                            err => {\n                                ref.componentInstance.loading = null;\n                                this._service.notifyError(\n                                    `Error deleting application. Error: ${JSON.stringify(err.response || err.message || err)}`\n                                );\n                            }\n                        );\n                    }\n                })\n            );\n        }\n    }\n}\n","<div class=\"container\" *ngIf=\"item\">\n    <section class=\"select\">\n        <button mat-button (tapped)=\"newApplication()\" i18n=\"@@newAction\">Add new</button>\n    </section>\n    <section>\n        <div class=\"list\" *ngIf=\"application_list && application_list.length > 0\">\n            <table>\n                <thead>\n                    <td class=\"name\" i18n=\"@@applicationTableName\">Name</td>\n                    <td class=\"flex\" i18n=\"@@applicationTableRedirect\">Redirect</td>\n                    <td class=\"flex\" i18n=\"@@applicationTableClientId\">Client ID</td>\n                    <td class=\"flex\" i18n=\"@@applicationTableClientSecret\">Secret</td>\n                    <td class=\"scope\" i18n=\"@@applicationTableScope\">Scope</td>\n                    <td class=\"duo\"></td>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let item of application_list\">\n                        <td class=\"name\" [matTooltip]=\"item.id\">{{item.name}}</td>\n                        <td class=\"flex\">\n                            <a [href]=\"item.redirect_uri\">{{item.redirect_uri}}</a>\n                        </td>\n                        <td class=\"id\">{{item.id}}</td>\n                        <td\n                            class=\"secret\"\n                            (click)=\"!show_secret[item.id] ? show_secret[item.id] = true : copySecret(item)\"\n                        >\n                            {{show_secret[item.id] ? item.secret : 'Show'}}\n                        </td>\n                        <td class=\"scope\">{{item.scopes}}</td>\n                        <td class=\"duo\">\n                            <button mat-icon-button (tapped)=\"editApplication(item)\">\n                                <app-icon [icon]=\"{ class: 'backoffice-edit' }\"></app-icon>\n                            </button>\n                            <button mat-icon-button (tapped)=\"deleteApplication(item)\">\n                                <app-icon [icon]=\"{ class: 'backoffice-trash' }\"></app-icon>\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"info-block\" *ngIf=\"!application_list || application_list.length <= 0\">\n            <div class=\"text\" i18n=\"@@applicationTableEmpty\">No applications found</div>\n        </div>\n    </section>\n</div>\n","import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { EngineDomain, EngineSAMLSource, EngineLDAPSource } from '@placeos/ts-client';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from '../../../shared/globals/base.directive';\nimport { ApplicationService } from '../../../services/app.service';\nimport { Identity, HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { AuthSourceModalComponent, AuthSourceModalData } from 'src/app/overlays/auth-source-modal/auth-source-modal.component';\n\nexport interface EngineAuthSourceLike extends Identity {\n    authority_id: string;\n    save: () => Promise<EngineAuthSourceLike>;\n    delete: () => Promise<void>;\n}\n\n@Component({\n    selector: 'domain-authentication',\n    templateUrl: './domain-authentication.template.html',\n    styleUrls: ['./domain-authentication.styles.scss']\n})\nexport class DomainAuthenticationComponent extends BaseDirective implements OnChanges, OnInit {\n    /** Active domain item */\n    @Input() public item: EngineDomain;\n    /** List of auth sources associated with the active domain */\n    public auth_sources: EngineAuthSourceLike[] = [];\n    /** Mapping of auth sources to their type */\n    public source_types: HashMap<'oauth' | 'saml' | 'ldap'> = {};\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'item',\n            this._service.listen('BACKOFFICE.active_item').subscribe(item => {\n                this.item = item;\n                this.loadAuthSources();\n            })\n        );\n    }\n\n    public ngOnChanges(changes: any) {\n        if (changes.item) {\n            this.loadAuthSources();\n        }\n    }\n\n    /**\n     * Load auth sources of all types for domain\n     * @param offset Request page offset\n     */\n    public loadAuthSources(offset: number = 0) {\n        if (!this.item) { return; }\n        Promise.all([\n            this._service.OAuthSources.query({ authority_id: this.item.id, offset } as any),\n            this._service.SAMLAuthSources.query({ authority_id: this.item.id, offset } as any),\n            this._service.LDAPAuthSources.query({ authority_id: this.item.id, offset } as any)\n        ]).then(\n            responses => {\n                if (!offset) {\n                    this.auth_sources = [];\n                }\n                for (const list of responses) {\n                    list.forEach(auth_source => this.addAuthSourceToList(auth_source));\n                }\n            },\n            () => null\n        );\n    }\n\n\n    /**\n     * Open modal to create a new  auth source for the domain\n     * @param item Auth source to delete\n     */\n    public newAuthSource(): void {\n        const ref = this._dialog.open<AuthSourceModalComponent, AuthSourceModalData>(\n            AuthSourceModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: {\n                    domain: this.item\n                }\n            }\n        );\n        ref.afterClosed().subscribe(() => this.loadAuthSources());\n    }\n\n    /**\n     * Open modal to edit auth source\n     * @param item Auth source to edit\n     */\n    public editAuthSource(item: EngineAuthSourceLike): void {\n        const ref = this._dialog.open<AuthSourceModalComponent, AuthSourceModalData>(\n            AuthSourceModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: {\n                    domain: this.item,\n                    auth_source: item as any\n                }\n            }\n        );\n        ref.afterClosed().subscribe(() => this.loadAuthSources());\n    }\n\n    /**\n     * Delete the auth source from the domain\n     * @param item Auth source to delete\n     */\n    public deleteAuthSource(item: EngineAuthSourceLike): void {\n        if (item) {\n            const ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n                ConfirmModalComponent,\n                {\n                    ...CONFIRM_METADATA,\n                    data: {\n                        title: `Delete auth source`,\n                        content: `<p>Are you sure you want delete this auth source?</p><p>Deleting this will remove this auth source <strong>immediately</strong></p>`,\n                        icon: { type: 'icon', class: 'backoffice-trash' }\n                    }\n                }\n            );\n            this.subscription(\n                'delete_confirm',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    if (event.reason === 'done') {\n                        ref.componentInstance.loading = 'Deleting auth source...';\n                        item.delete().then(\n                            () => {\n                                this._service.notifySuccess('Successfully deleted auth source.');\n                                ref.close();\n                                this.unsub('delete_confirm');\n                                this.loadAuthSources();\n                            },\n                            err => {\n                                this._service.notifyError(\n                                    `Error deleting auth source. Error ${JSON.stringify(err.response || err.message || err)}`\n                                );\n                                ref.componentInstance.loading = null;\n                            }\n                        );\n                    }\n                })\n            );\n        }\n    }\n\n    /**\n     * Add source the the auth source list. Updated item if it already exists\n     * @param source Source to add the the list\n     */\n    private addAuthSourceToList(source: EngineAuthSourceLike) {\n        this.source_types[source.id] =\n            source instanceof EngineSAMLSource\n                ? 'saml'\n                : source instanceof EngineLDAPSource\n                ? 'ldap'\n                : 'oauth';\n        const index = this.auth_sources.findIndex(a_source => a_source.id === source.id);\n        if (index < 0) {\n            this.auth_sources.push(source);\n        } else {\n            this.auth_sources.splice(index, 1, source);\n        }\n    }\n}\n","<div class=\"container\">\n    <section class=\"select\">\n        <button mat-button (tapped)=\"newAuthSource()\" i18n=\"@@newAction\">Add new</button>\n    </section>\n    <section>\n        <div class=\"list\" *ngIf=\"auth_sources && auth_sources.length > 0; else no_auth_sources\">\n            <table>\n                <thead>\n                    <td class=\"name\" i18n=\"@@authTableName\">Name</td>\n                    <td class=\"flex\" i18n=\"@@authTableType\">Type</td>\n                    <td class=\"duo\"></td>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let item of auth_sources\">\n                        <td class=\"name\" [matTooltip]=\"item.id\">{{item.name}}</td>\n                        <td class=\"flex\">{{source_types[item.id]}}</td>\n                        <td class=\"duo\">\n                            <button mat-icon-button (tapped)=\"editAuthSource(item)\">\n                                <app-icon [icon]=\"{ class: 'backoffice-edit' }\"></app-icon>\n                            </button>\n                            <button mat-icon-button (tapped)=\"deleteAuthSource(item)\">\n                                <app-icon [icon]=\"{ class: 'backoffice-trash' }\"></app-icon>\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </section>\n</div>\n<ng-template #no_auth_sources>\n    <div class=\"info-block\">\n        <div class=\"text\" i18n=\"@@authTableEmpty\">No authentication sources found</div>\n    </div>\n</ng-template>\n","\nimport { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { EngineDomain } from '@placeos/ts-client';\n\nimport { BaseDirective } from '../../../shared/globals/base.directive';\nimport { ApplicationService } from '../../../services/app.service';\n\n@Component({\n    selector: 'domain-users',\n    templateUrl: './domain-users.template.html',\n    styleUrls: ['./domain-users.styles.scss']\n})\nexport class DomainUsersComponent extends BaseDirective implements OnInit, OnChanges {\n    @Input() public item: EngineDomain;\n\n    public model: any = {};\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'item',\n            this._service.listen('BACKOFFICE.active_item').subscribe(item => {\n                this.item = item;\n                this.loadUsers();\n            })\n        );\n        this.loadUsers();\n    }\n\n    public ngOnChanges(changes: any) {\n        if (changes.item) {\n            this.loadUsers();\n        }\n    }\n\n    public loadUsers(offset: number = 0) {\n        if (!this.item) { return; }\n        this._service.Users.query({ authority_id: this.item.id, offset }).then((list) => {\n            if (!offset) { this.model.list = []; }\n            for (const item of (list || [])) {\n                let found = false;\n                for (const i of this.model.list) {\n                    if (i.id === item.id) {\n                        found = true;\n                        break;\n                    }\n                }\n                if (!found) { this.model.list.push(item); }\n            }\n        }, () => null);\n    }\n}\n","<div class=\"container\">\n    <section>\n        <div class=\"list\" *ngIf=\"model.list && model.list.length > 0\">\n            <table>\n                <thead>\n                    <td class=\"name\" i18n=\"@@userTableName\">Name</td>\n                    <td class=\"flex\" i18n=\"@@userTableEmail\">Email</td>\n                    <td class=\"role\" i18n=\"@@userTableRole\">Role</td>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let item of model.list\">\n                        <td class=\"name\" [matTooltip]=\"item.id\">{{item.name}}</td>\n                        <td class=\"flex\">{{item.email}}</td>\n                        <td class=\"role\">{{item.role}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"info-block\" *ngIf=\"!model.list || model.list.length <= 0\">\n            <div class=\"text\" i18n=\"@@userTableEmpty\">No users found</div>\n        </div>\n    </section>\n</div>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EngineDomain } from '@placeos/ts-client';\n\nimport { ApplicationService } from '../../services/app.service';\nimport { BaseRootComponent } from '../../shared/components/base-root.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ItemCreateUpdateModalComponent } from 'src/app/overlays/item-modal/item-modal.component';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'app-domains',\n    templateUrl: './domains.template.html',\n    styleUrls: ['./domains.styles.scss']\n})\nexport class DomainsComponent extends BaseRootComponent<EngineDomain> {\n    /** Number of triggers for the active system */\n    public applications: number;\n    /** Number of triggers for the active system */\n    public auth_sources: number;\n    /** Number of triggers for the active system */\n    public user_count: number;\n\n    constructor(\n        protected _service: ApplicationService,\n        protected _route: ActivatedRoute,\n        protected _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super(_service, _route, _router);\n        this.service = this._service.Domains;\n    }\n\n    public ngOnInit(): void {\n        super.ngOnInit();\n        this._service.set('APP_LIST_CHANGE', dayjs().valueOf());\n        this.subscription('changes',\n        this._service.listen('APP_LIST_CHANGE').subscribe(() => {\n            this.loadValues();\n        }))\n        this._service.title = 'Domains';\n    }\n\n    protected loadValues() {\n        if(!this.item){ return; }\n        let query: any = { offset: 0, limit: 1, owner: this.item.id };\n        // Get application count\n        this._service.Applications.query(query).then(\n            list => (this.applications = this._service.Applications.last_total || list.length || 0)\n        );\n        query = { offset: 0, limit: 1, authority_id: this.item.id };\n        // Get auth source count\n        // this._service.AuthSources.query(query).then(\n        //     () => (this.auth_sources = this._service.AuthSources.last_total)\n        // );\n        // Get users count\n        this._service.Users.query(query).then(\n            list => (this.user_count = this._service.Users.last_total || list.length || 0)\n        );\n    }\n    /**\n     * Open the modal to create a new system\n     */\n    protected newItem(copy: boolean = false) {\n        if (this.modal_ref) { return; }\n        this.modal_ref = this._dialog.open(ItemCreateUpdateModalComponent, {\n            height: 'auto',\n            width: 'auto',\n            maxHeight: 'calc(100vh - 2em)',\n            maxWidth: 'calc(100vw - 2em)',\n            data: {\n                item: copy ? new EngineDomain({ ...this.item, id: '', name: `${this.item.name} (1)` }) : new EngineDomain(),\n                service: this._service.Domains\n            }\n        });\n        this.subscription('modal_events', this.modal_ref.componentInstance.event.subscribe(event => {\n            if (event.reason === 'done') {\n                this._router.navigate(['/domains', event.metadata.item.id]);\n            }\n        }));\n        this.modal_ref.afterClosed().subscribe(() => {\n            this.unsub('modal_events');\n            this.modal_ref = null;\n        });\n    }\n\n    /**\n     * Open the modal to create a new system\n     */\n    protected editItem() {\n        if (this.item && !this.modal_ref) {\n            this.modal_ref = this._dialog.open(ItemCreateUpdateModalComponent, {\n                height: 'auto',\n                width: 'auto',\n                maxHeight: 'calc(100vh - 2em)',\n                maxWidth: 'calc(100vw - 2em)',\n                data: {\n                    item: this.item,\n                    service: this._service.Domains\n                }\n            });\n            this.modal_ref.afterClosed().subscribe(() => {\n                this.unsub('modal_events');\n                this.modal_ref = null;\n            });\n        }\n    }\n\n    protected deleteItem() {\n        if (this.item && !this.modal_ref) {\n            this.modal_ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n                ConfirmModalComponent,\n                {\n                    ...CONFIRM_METADATA,\n                    data: {\n                        title: `Delete domain`,\n                        content: `<p>Are you sure you want delete this domain?</p><p>The domain will be deleted <strong>immediately.</strong></p>`,\n                        icon: { type: 'icon', class: 'backoffice-trash' }\n                    }\n                }\n            );\n            this.subscription(\n                'delete_confirm',\n                this.modal_ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    if (event.reason === 'done') {\n                        this.modal_ref.componentInstance.loading = 'Deleting domain...';\n                        this.item.delete().then(\n                            () => {\n                                this._service.notifySuccess(\n                                    `Successfully deleted domain \"${this.item.name}\".`\n                                );\n                                this._router.navigate(['/users']);\n                                this._service.set('BACKOFFICE.removed', this.item.id);\n                                this.modal_ref.close();\n                            },\n                            err => {\n                                this.modal_ref.componentInstance.loading = null;\n                                this._service.notifyError(`Error deleting domain. Error: ${JSON.stringify(err.response || err.message || err)}`);\n                            }\n                        );\n                    }\n                })\n            );\n            this.modal_ref.afterClosed().subscribe(() => {\n                this.unsub('modal_events');\n                this.modal_ref = null;\n            });\n        }\n    }\n}\n","<div class=\"container\" [class.show]=\"show_sidebar\">\n    <div class=\"sidebar\">\n        <sidebar\n            heading=\"Domains\"\n            [module]=\"module\"\n            [close]=\"show_sidebar\"\n            (event)=\"sidebarEvent($event)\"\n        ></sidebar>\n    </div>\n    <main (touchrelease)=\"show_sidebar = false\">\n        <item-display\n            name=\"domain\"\n            route=\"domains\"\n            [item]=\"item\"\n            [tabs]=\"[\n                {\n                    id: 'applications',\n                    name: 'Applications',\n                    count: applications || 0,\n                    icon: { class: 'backoffice-publish' }\n                },\n                {\n                    id: 'authentication',\n                    name: 'Authentication',\n                    count: auth_sources || 0,\n                    icon: { class: 'backoffice-lock-open' }\n                },\n                { id: 'users', name: 'Users', count: user_count || 0, icon: { class: 'backoffice-users' } }\n            ]\"\n            (event)=\"itemEvent($event)\"\n        >\n        </item-display>\n    </main>\n</div>\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { ROUTES } from './domains.routes';\n\nimport { DomainsComponent } from './domains.component';\nimport { DomainApplicationsComponent } from './domain-applications/domain-applications.component';\nimport { DomainAuthenticationComponent } from './domain-authentication/domain-authentication.component';\nimport { DomainUsersComponent } from './domain-users/domain-users.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n    declarations: [\n        DomainsComponent,\n        DomainApplicationsComponent,\n        DomainAuthenticationComponent,\n        DomainUsersComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule\n    ]\n})\nexport class AppDomainsModule { }\n","\nimport { Routes } from '@angular/router';\nimport { DomainsComponent } from './domains.component';\nimport { DomainApplicationsComponent } from './domain-applications/domain-applications.component';\nimport { DomainAuthenticationComponent } from './domain-authentication/domain-authentication.component';\nimport { DomainUsersComponent } from './domain-users/domain-users.component';\n\nexport const ROUTES: Routes = [\n    {\n        path: ':id', component: DomainsComponent, children: [\n            { path: 'applications', component: DomainApplicationsComponent },\n            { path: 'authentication', component: DomainAuthenticationComponent },\n            { path: 'users', component: DomainUsersComponent },\n            { path: '**', redirectTo: 'applications' },\n        ]\n    },\n    { path: '**',      redirectTo: '-' },\n];\n"]}