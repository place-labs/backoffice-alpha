{"version":3,"sources":["./src/app/shell/modules/module-about/module-about.component.ts","./src/app/shell/modules/module-about/module-about.template.html","./src/app/shell/modules/module-systems/module-systems.component.ts","./src/app/shell/modules/module-systems/module-systems.template.html","./src/app/shell/modules/modules.component.ts","./src/app/shell/modules/modules.template.html","./src/app/shell/modules/modules.module.ts","./src/app/shell/modules/modules.routes.ts"],"names":[],"mappings":"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","file":"shell-modules-modules-module-es2015.js","sourcesContent":["import { Component, Input, SimpleChanges, OnChanges, OnInit } from '@angular/core';\nimport { EngineModule, EngineDriver, EngineSystem, EngineSettings, EncryptionLevel } from '@placeos/ts-client';\n\nimport { BaseDirective } from '../../../shared/globals/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { mergeYAMLSettings } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { ViewResponseModalComponent } from 'src/app/overlays/view-response-modal/view-response-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n    selector: 'module-about',\n    templateUrl: './module-about.template.html',\n    styleUrls: ['./module-about.styles.scss']\n})\nexport class ModuleAboutComponent extends BaseDirective implements OnChanges, OnInit {\n    /** Item to render */\n    @Input() public item: EngineModule;\n    /** Driver for the active item */\n    public driver: EngineDriver;\n    /** Control System for the active item */\n    public system: EngineSystem;\n    /** List of settings for associated modules, drivers and zones */\n    public other_settings: EngineSettings[] = [];\n    /** Whether module is being stopped */\n    public stopping: boolean;\n\n    /** Whether application is loading settings for item */\n    public get loading_settings(): boolean {\n        return this._service.get('loading_settings');\n    }\n\n    /** Displayable encryption levels for settings */\n    public get levels(): Identity[] {\n        const user = this._service.Users.user.getValue();\n        const levels = [\n            { id: EncryptionLevel.NeverDisplay, name: 'Merged' },\n            { id: EncryptionLevel.None, name: 'Unencrypted' }\n        ];\n        if (user.support || user.sys_admin) {\n            levels.push({ id: EncryptionLevel.Support, name: 'Support' });\n        }\n        if (user.sys_admin) {\n            levels.push({ id: EncryptionLevel.Admin, name: 'Admin' });\n        }\n        return levels;\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'item',\n            this._service.listen('BACKOFFICE.active_item').subscribe(item => {\n                this.item = item;\n                this.loadDriver();\n                this.loadSystem();\n                this.loadSettings();\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.item) {\n            this.loadDriver();\n            this.loadSystem();\n            this.loadSettings();\n        }\n    }\n\n    public loadDriver() {\n        if (this.item && this.item.driver_id) {\n            this._service.Drivers.show(this.item.driver_id).then(driver => {\n                this.driver = driver;\n            });\n        }\n    }\n\n    public loadSystem() {\n        if (this.item && this.item.system_id) {\n            this._service.Systems.show(this.item.system_id).then(system => {\n                this.system = system;\n            });\n        }\n    }\n\n    public async loadSettings() {\n        if (!this.item) {\n            return;\n        }\n        this.other_settings = await this._service.Modules.settings(this.item.id);\n    }\n\n    public stopModule() {\n        this.stopping = true;\n        this.item.stop().then(\n            () => {\n                this.stopping = false;\n                this._service.notifySuccess('Module successfully stopped');\n                (this.item as any).connected = false;\n            },\n            err => {\n                this.stopping = false;\n                if (typeof err === 'string' && err.length < 64) {\n                    this._service.notifyError(err);\n                } else {\n                    this._service.notifyError(\n                        `Failed to stop device '${this.item.id}'.\\nView Error?`,\n                        'View',\n                        () => this.viewDetails(err)\n                    );\n                }\n            }\n        );\n    }\n\n    public startModule() {\n        this.stopping = true;\n        this.item.start().then(\n            () => {\n                this.stopping = false;\n                this._service.notifySuccess('Module successfully started');\n                (this.item as any).connected = true;\n            },\n            err => {\n                this.stopping = false;\n                if (typeof err === 'string' && err.length < 64) {\n                    this._service.notifyError(err);\n                } else {\n                    this._service.notifyError(\n                        `Failed to start device '${this.item.id}'.\\nView Error?`,\n                        'View',\n                        () => this.viewDetails(err)\n                    );\n                }\n            }\n        );\n    }\n\n    /** View Results of the execute */\n    private viewDetails(content: any) {\n        this._dialog.open<ViewResponseModalComponent>(ViewResponseModalComponent, {\n            data: { content }\n        });\n    }\n}\n","<div class=\"container\" *ngIf=\"item\">\n    <div class=\"settings\">\n        <header *ngIf=\"item.driver\"  i18n=\"@@moduleDetailsDriver\">\n            Driver:&nbsp;<span>\n                <a [routerLink]=\"['/drivers', item.driver_id]\"\n                    >{{item.driver.name || '&lt;Unnamed&gt;'}}</a\n                >\n            </span>\n        </header>\n        <header i18n=\"@@moduleDetailsSystem\">\n            Logic for system:&nbsp;<span *ngIf=\"system\">\n                <a [routerLink]=\"['/systems', system.id]\">{{system?.name}}</a>\n            </span>\n        </header>\n        <section>\n            <button\n                mat-button\n                [disabled]=\"stopping\"\n                (tapped)=\"item.connected ? stopModule(): startModule()\"\n            >\n                <div class=\"text\" *ngIf=\"!stopping\"  i18n=\"@@moduleStateToggle\">\n                    { item.connected, select, true { Stop Module } false { Start Module } }\n                </div>\n                <mat-spinner diameter=\"32\" *ngIf=\"stopping\"></mat-spinner>\n            </button>\n        </section>\n        <hr />\n        <header class=\"settings\" i18n=\"@@settingsLabel\">Settings</header>\n        <section *ngIf=\"!loading_settings; else load_state\">\n            <a-settings-form\n                [id]=\"item.id\"\n                [merge]=\"true\"\n                [settings]=\"item.settings\"\n                [merge_settings]=\"other_settings || []\"\n            ></a-settings-form>\n        </section>\n    </div>\n</div>\n<ng-template #load_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"48\"></mat-spinner>\n        </div>\n        <div class=\"text\" i18n=\"@@moduleDetailsLoading\">Loading module settings...</div>\n    </div>\n</ng-template>\n","import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { EngineModule, EngineSystem } from '@placeos/ts-client';\n\nimport { BaseDirective } from '../../../shared/globals/base.directive';\nimport { ApplicationService } from '../../../services/app.service';\nimport { Subject, Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map } from 'rxjs/operators';\n\n@Component({\n    selector: 'module-systems',\n    templateUrl: './module-systems.template.html',\n    styleUrls: ['./module-systems.styles.scss']\n})\nexport class ModuleSystemsComponent extends BaseDirective implements OnChanges, OnInit {\n    @Input() public item: EngineModule;\n    /** Filter string for the system list */\n    public search_str: string;\n    /** List of systems associated with the module */\n    public system_list: EngineSystem[];\n    /** List of items from an API search */\n    public search_results$: Observable<EngineSystem[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** Whether systems are being loaded */\n    public loading: boolean;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'item',\n            this._service.listen('BACKOFFICE.active_item').subscribe(item => {\n                this.item = item;\n                this.loadSystems();\n            })\n        );\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.loading = true;\n                return this._service.Systems.query({\n                    q: query,\n                    module_id: this.item.id,\n                    offset: 0\n                });\n            }),\n            catchError(err => {\n                console.error(err);\n                return of([]);\n            }),\n            map((list: EngineSystem[]) => {\n                this.loading = false;\n                const search = this.search_str.toLowerCase();\n                return list.filter(\n                    (item: any) =>\n                        item.name.toLowerCase().indexOf(search) >= 0 ||\n                        (item.email || '').toLowerCase().indexOf(search) >= 0\n                );\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => (this.system_list = list))\n        );\n    }\n\n    public ngOnChanges(changes: any) {\n        if (changes.item) {\n            this.loadSystems();\n        }\n    }\n\n    public loadSystems(offset: number = 0) {\n        if (!this.item) { return; }\n        this._service.Systems.query({ module_id: this.item.id, offset }).then(\n            list => {\n                this.system_list = list;\n            },\n            () => null\n        );\n    }\n}\n","<div class=\"container\">\n    <div class=\"btn\">\n        <mat-form-field appearance=\"outline\">\n            <div class=\"prefix\" matPrefix>\n                <app-icon [icon]=\"{ class: 'backoffice-magnifying-glass' }\"></app-icon>\n            </div>\n            <input\n                matInput\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"search$.next($event)\"\n                name=\"search-filter\"\n                placeholder=\"Filter Systems\"\n                i18n-placeholder=\"@@systemTableFilter\"\n            />\n        </mat-form-field>\n    </div>\n    <div class=\"list\" *ngIf=\"system_list && system_list.length > 0; else empty_state\">\n        <table>\n            <thead>\n                <td class=\"flex\"  i18n=\"@@systemTableName\">Name</td>\n                <td class=\"devices\" i18n=\"@@systemTablePanelCount\">No. Modules</td>\n                <td class=\"created\" i18n=\"@@systemTableCreated\">Created</td>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let item of system_list\">\n                    <td class=\"flex\">\n                        <a\n                            [routerLink]=\"['/systems', item.id]\"\n                            routerLinkActive=\"router-link-active\"\n                            [matTooltip]=\"item.id\"\n                        >\n                            {{item.name}}\n                        </a>\n                    </td>\n                    <td class=\"devices\">{{item.modules?.length}}</td>\n                    <td class=\"created\">{{item.display?.created}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"text\" i18n=\"@@systemTableEmpty\">No matching systems found</div>\n    </div>\n</ng-template>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EngineModule } from '@placeos/ts-client';\n\nimport { ApplicationService } from '../../services/app.service';\nimport { BaseRootComponent } from '../../shared/components/base-root.component';\nimport { ItemCreateUpdateModalComponent } from 'src/app/overlays/item-modal/item-modal.component';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'app-modules',\n    templateUrl: './modules.template.html',\n    styleUrls: ['./modules.styles.scss']\n})\nexport class ModulesComponent extends BaseRootComponent<EngineModule> {\n    /** Number of systems for the active device */\n    public system_count: number;\n    /** Whether the list of devices should show only the disconnected devices */\n    public only_disconnected: boolean;\n\n    constructor(\n        protected _service: ApplicationService,\n        protected _route: ActivatedRoute,\n        protected _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super(_service, _route, _router);\n        this.service = this._service.Modules;\n    }\n\n    public ngOnInit(): void {\n        super.ngOnInit();\n        this._service.title = 'Modules';\n    }\n\n    protected loadValues() {\n        const query: any = { offset: 0, limit: 1, module_id: this.item.id };\n        // Get system count\n        this._service.Systems.query(query).then((list) => {\n            this.system_count = this._service.Systems.last_total || list.length || 0;\n        });\n    }\n\n    /**\n     * Open the modal to create a new system\n     */\n    protected newItem(copy: boolean = false) {\n        if (this.modal_ref) { return; }\n        this.modal_ref = this._dialog.open(ItemCreateUpdateModalComponent, {\n            height: 'auto',\n            width: 'auto',\n            maxHeight: 'calc(100vh - 2em)',\n            maxWidth: 'calc(100vw - 2em)',\n            data: {\n                item: copy ? new EngineModule({ ...this.item, id: '', name: `${this.item.name} (1)` }) : new EngineModule(),\n                service: this._service.Domains\n            }\n        });\n        this.subscription('modal_events', this.modal_ref.componentInstance.event.subscribe((event) => {\n            if (event.reason === 'done') {\n                this._router.navigate(['/modules', event.metadata.item.id]);\n            }\n        }));\n        this.modal_ref.afterClosed().subscribe(() => {\n            this.unsub('modal_events');\n            this.modal_ref = null;\n        });\n    }\n\n    /**\n     * Open the modal to create a new system\n     */\n    protected editItem() {\n        if (this.item && !this.modal_ref) {\n            this.modal_ref = this._dialog.open(ItemCreateUpdateModalComponent, {\n                height: 'auto',\n                width: 'auto',\n                maxHeight: 'calc(100vh - 2em)',\n                maxWidth: 'calc(100vw - 2em)',\n                data: {\n                    item: this.item,\n                    service: this._service.Modules\n                }\n            });\n            this.modal_ref.afterClosed().subscribe(() => {\n                this.unsub('modal_events');\n                this.modal_ref = null;\n            });\n        }\n    }\n\n    protected deleteItem() {\n        if (this.item && !this.modal_ref) {\n            this.modal_ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n                ConfirmModalComponent,\n                {\n                    ...CONFIRM_METADATA,\n                    data: {\n                        title: `Delete module`,\n                        content: `<p>Are you sure you want delete this module?</p><p>Deleting this will module <strong>immediately</strong> remove it from any system associated with it</p>`,\n                        icon: { type: 'icon', class: 'backoffice-trash' }\n                    }\n                }\n            );\n            this.subscription(\n                'delete_confirm',\n                this.modal_ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    if (event.reason === 'done') {\n                        this.modal_ref.componentInstance.loading = 'Deleting module...';\n                        this.item.delete().then(\n                            () => {\n                                this._service.notifySuccess(\n                                    `Successfully deleted module \"${this.item.name}\".`\n                                );\n                                this._router.navigate(['/modules']);\n                                this._service.set('BACKOFFICE.removed', this.item.id);\n                                this.modal_ref.close();\n                            },\n                            err => {\n                                this.modal_ref.componentInstance.loading = null;\n                                this._service.notifyError(`Error deleting module. Error: ${JSON.stringify(err.response || err.message || err)}`);\n                            }\n                        );\n                    }\n                })\n            );\n            this.modal_ref.afterClosed().subscribe(() => {\n                this.unsub('modal_events');\n                this.modal_ref = null;\n            });\n        }\n    }\n}\n","<div class=\"container\" [class.show]=\"show_sidebar\">\n    <div class=\"sidebar\">\n        <sidebar\n            heading=\"Modules\"\n            [module]=\"module\"\n            [close]=\"show_sidebar\"\n            [queryParams]=\"only_disconnected ? { connected: false, running: true } : {}\"\n            (event)=\"sidebarEvent($event)\"\n        >\n            <div class=\"toggle\">\n                <mat-slide-toggle [(ngModel)]=\"only_disconnected\" labelPosition=\"before\"  i18n=\"@@moduleDisconnectedFilterToggle\">\n                    Only Disconnected\n                </mat-slide-toggle>\n            </div>\n        </sidebar>\n    </div>\n    <main (touchrelease)=\"show_sidebar = false\">\n        <item-display\n            name=\"module\"\n            route=\"modules\"\n            [item]=\"item\"\n            [tabs]=\"[\n                { id: 'about', name: 'About', icon: { class: 'backoffice-info-with-circle' } },\n                {\n                    id: 'systems',\n                    name: 'Systems',\n                    count: system_count,\n                    icon: { class: 'backoffice-documents' }\n                }\n            ]\"\n            (event)=\"itemEvent($event)\"\n        >\n        </item-display>\n    </main>\n</div>\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { ROUTES } from './modules.routes';\n\nimport { ModulesComponent } from './modules.component';\nimport { ModuleAboutComponent } from './module-about/module-about.component';\nimport { ModuleSystemsComponent } from './module-systems/module-systems.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n    declarations: [\n        ModulesComponent,\n        ModuleAboutComponent,\n        ModuleSystemsComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule\n    ]\n})\nexport class AppModulesModule { }\n","\nimport { Routes } from '@angular/router';\n\nimport { ModulesComponent } from './modules.component';\nimport { ModuleAboutComponent } from './module-about/module-about.component';\nimport { ModuleSystemsComponent } from './module-systems/module-systems.component';\n\nexport const ROUTES: Routes = [\n    {\n        path: ':id', component: ModulesComponent, children: [\n            { path: 'about', component: ModuleAboutComponent },\n            { path: 'systems', component: ModuleSystemsComponent },\n            { path: '**',      redirectTo: 'about' }\n        ]\n    },\n    { path: '**',      redirectTo: '-' }\n];\n"],"sourceRoot":"webpack:///"}