{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/overlays/auth-source-modal/auth-source-modal.component.ts","./src/app/overlays/auth-source-modal/auth-source-modal.component.html","./src/app/overlays/bulk-item-modal/bulk-item-modal.component.ts","./src/app/overlays/bulk-item-modal/bulk-item-modal.component.html","./src/app/overlays/bulk-item-modal/csv-upload/csv-upload.component.ts","./src/app/overlays/bulk-item-modal/csv-upload/csv-upload.component.html","./src/app/overlays/bulk-item-modal/list/list.component.ts","./src/app/overlays/bulk-item-modal/list/list.component.html","./src/app/overlays/bulk-item-modal/match-fields/match-fields.component.ts","./src/app/overlays/bulk-item-modal/match-fields/match-fields.component.html","./src/app/overlays/bulk-item-modal/status-list/status-list.component.ts","./src/app/overlays/bulk-item-modal/status-list/status-list.component.html","./src/app/overlays/bulk-item-modal/template-data.ts","./src/app/overlays/changelog-modal/changelog-modal.component.ts","./src/app/overlays/changelog-modal/changelog-modal.template.html","./src/app/overlays/confirm-modal/confirm-modal.component.ts","./src/app/overlays/confirm-modal/confirm-modal.component.html","./src/app/overlays/duplicate-modal/duplicate-modal.component.ts","./src/app/overlays/duplicate-modal/duplicate-modal.component.html","./src/app/overlays/item-modal/item-modal.component.ts","./src/app/overlays/item-modal/item-modal.component.html","./src/app/overlays/metadata-details-modal/metadata-details-modal.component.ts","./src/app/overlays/metadata-details-modal/metadata-details-modal.component.html","./src/app/overlays/overlays.module.ts","./src/app/overlays/select-item-modal/select-item-modal.component.ts","./src/app/overlays/select-item-modal/select-item-modal.component.html","./src/app/overlays/system-log-modal/system-log-modal.component.ts","./src/app/overlays/system-log-modal/system-log-modal.component.html","./src/app/overlays/trigger-action-modal/trigger-action-modal.component.ts","./src/app/overlays/trigger-action-modal/trigger-action-modal.template.html","./src/app/overlays/trigger-condition-modal/trigger-condition-modal.component.ts","./src/app/overlays/trigger-condition-modal/trigger-condition-modal.template.html","./src/app/overlays/view-module-state/view-module-state.component.ts","./src/app/overlays/view-module-state/view-module-state.template.html","./src/app/overlays/view-response-modal/view-response-modal.component.ts","./src/app/overlays/view-response-modal/view-response-modal.component.html","./src/app/services/app.service.ts","./src/app/services/data/base.service.ts","./src/app/services/data/comments.service.ts","./src/app/services/data/logs.service.ts","./src/app/services/data/search.service.ts","./src/app/services/data/stats.service.ts","./src/app/services/data/system_logs.service.ts","./src/app/services/data/users.service.ts","./src/app/services/debug.service.ts","./src/app/services/hotkeys.service.ts","./src/app/services/sentry.service.ts","./src/app/services/settings.service.ts","./src/app/shared/components/base-root.component.ts","./src/app/shared/components/context-menu/context-menu.component.ts","./src/app/shared/components/context-menu/context-menu.template.html","./src/app/shared/components/custom-fields/date-field/date-field.component.ts","./src/app/shared/components/custom-fields/date-field/date-field.component.html","./src/app/shared/components/custom-fields/item-search-field/item-search-field.component.ts","./src/app/shared/components/custom-fields/item-search-field/item-search-field.component.html","./src/app/shared/components/custom-fields/object-list-field/object-list-field.component.ts","./src/app/shared/components/custom-fields/object-list-field/object-list-field.component.html","./src/app/shared/components/custom-fields/settings-field/settings-field.component.ts","./src/app/shared/components/custom-fields/settings-field/settings-field.component.html","./src/app/shared/components/custom-fields/system-exec-field/system-exec-field.component.ts","./src/app/shared/components/custom-fields/system-exec-field/system-exec-field.template.html","./src/app/shared/components/custom-fields/time-field/time-field.component.ts","./src/app/shared/components/custom-fields/time-field/time-field.component.html","./src/app/shared/components/debug-output/debug-output.component.ts","./src/app/shared/components/debug-output/debug-output.component.html","./src/app/shared/components/forms/application-form/application-form.component.ts","./src/app/shared/components/forms/application-form/application-form.component.html","./src/app/shared/components/forms/broker-form/broker-form.component.ts","./src/app/shared/components/forms/broker-form/broker-form.component.html","./src/app/shared/components/forms/domain-form/domain-form.component.ts","./src/app/shared/components/forms/domain-form/domain-form.component.html","./src/app/shared/components/forms/driver-form/driver-form.component.ts","./src/app/shared/components/forms/driver-form/driver-form.component.html","./src/app/shared/components/forms/ldap-source-form/ldap-source-form.component.ts","./src/app/shared/components/forms/ldap-source-form/ldap-source-form.component.html","./src/app/shared/components/forms/module-form/module-form.component.ts","./src/app/shared/components/forms/module-form/module-form.component.html","./src/app/shared/components/forms/oauth-source-form/oauth-source-form.component.ts","./src/app/shared/components/forms/oauth-source-form/oauth-source-form.component.html","./src/app/shared/components/forms/repository-form/repository-form.component.ts","./src/app/shared/components/forms/repository-form/repository-form.component.html","./src/app/shared/components/forms/saml-source-form/saml-source-form.component.ts","./src/app/shared/components/forms/saml-source-form/saml-source-form.component.html","./src/app/shared/components/forms/settings-form/settings-form.component.ts","./src/app/shared/components/forms/settings-form/settings-form.component.html","./src/app/shared/components/forms/system-form/system-form.component.ts","./src/app/shared/components/forms/system-form/system-form.component.html","./src/app/shared/components/forms/system-trigger-form/system-trigger-form.component.ts","./src/app/shared/components/forms/system-trigger-form/system-trigger-form.component.html","./src/app/shared/components/forms/trigger-action-form/trigger-action-form.component.ts","./src/app/shared/components/forms/trigger-action-form/trigger-action-form.component.html","./src/app/shared/components/forms/trigger-condition-form/comparison-form/comparison-form.component.ts","./src/app/shared/components/forms/trigger-condition-form/comparison-form/comparison-form.component.html","./src/app/shared/components/forms/trigger-condition-form/time-form/time-form.component.ts","./src/app/shared/components/forms/trigger-condition-form/time-form/time-form.component.html","./src/app/shared/components/forms/trigger-condition-form/trigger-condition-form.component.ts","./src/app/shared/components/forms/trigger-condition-form/trigger-condition-form.component.html","./src/app/shared/components/forms/trigger-form/trigger-form.component.ts","./src/app/shared/components/forms/trigger-form/trigger-form.component.html","./src/app/shared/components/forms/user-form/user-form.component.ts","./src/app/shared/components/forms/user-form/user-form.component.html","./src/app/shared/components/forms/zone-form/zone-form.component.ts","./src/app/shared/components/forms/zone-form/zone-form.component.html","./src/app/shared/components/icon/icon.component.ts","./src/app/shared/components/icon/icon.component.html","./src/app/shared/components/item-display/item-display.component.ts","./src/app/shared/components/item-display/item-display.template.html","./src/app/shared/components/login/forgot-pass-form/forgot-pass-form.component.ts","./src/app/shared/components/login/index.ts","./src/app/shared/components/login/login-form/login-form.component.ts","./src/app/shared/components/login/login-form/login-form.template.html","./src/app/shared/components/login/login.component.ts","./src/app/shared/components/login/login.template.html","./src/app/shared/components/login/register-form/register-form.component.ts","./src/app/shared/components/searchbar/searchbar.component.ts","./src/app/shared/components/searchbar/searchbar.template.html","./src/app/shared/components/sidebar/sidebar.component.ts","./src/app/shared/components/sidebar/sidebar.template.html","./src/app/shared/components/terminal/terminal.component.ts","./src/app/shared/components/terminal/terminal.component.html","./src/app/shared/globals/angular-animations.ts","./src/app/shared/globals/base.class.ts","./src/app/shared/globals/base.directive.ts","./src/app/shared/guards/authorised-admin.guard.ts","./src/app/shared/mocks/backend/domains.mock.ts","./src/app/shared/mocks/backend/drivers.mock.ts","./src/app/shared/mocks/backend/index.ts","./src/app/shared/mocks/backend/modules.mock.ts","./src/app/shared/mocks/backend/repositories.mock.ts","./src/app/shared/mocks/backend/settings.mock.ts","./src/app/shared/mocks/backend/systems.mock.ts","./src/app/shared/mocks/backend/triggers.mock.ts","./src/app/shared/mocks/backend/users.mock.ts","./src/app/shared/mocks/backend/zones.mock.ts","./src/app/shared/mocks/common.mock.ts","./src/app/shared/mocks/index.ts","./src/app/shared/mocks/system.mockup.ts","./src/app/shared/pipes/date-from.pipe.ts","./src/app/shared/pipes/driver-format.pipe.ts","./src/app/shared/pipes/format-list.pipe.ts","./src/app/shared/shared.module.ts","./src/app/shared/utilities/api.utilities.ts","./src/app/shared/utilities/data/applications.utilities.ts","./src/app/shared/utilities/data/auth-sources.utilities.ts","./src/app/shared/utilities/data/brokers.utilities.ts","./src/app/shared/utilities/data/domains.utilities.ts","./src/app/shared/utilities/data/drivers.utilities.ts","./src/app/shared/utilities/data/modules.utilities.ts","./src/app/shared/utilities/data/repositories.utilities.ts","./src/app/shared/utilities/data/systems.utilities.ts","./src/app/shared/utilities/data/triggers.utilities.ts","./src/app/shared/utilities/data/users.utilities.ts","./src/app/shared/utilities/data/zones.utilites.ts","./src/app/shared/utilities/general.utilities.ts","./src/app/shared/utilities/validation.utilities.ts","./src/app/shell/components/global-search/global-search.component.ts","./src/app/shell/components/global-search/global-search.template.html","./src/app/shell/components/index.ts","./src/app/shell/components/sidebar-menu/sidebar-menu.component.ts","./src/app/shell/components/sidebar-menu/sidebar-menu.template.html","./src/app/shell/components/topbar-header/topbar-header.component.ts","./src/app/shell/components/topbar-header/topbar-header.template.html","./src/app/shell/index.ts","./src/app/shell/shell.component.ts","./src/app/shell/shell.template.html","./src/environments/environment.ts","./src/environments/version.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AppShellComponent } from './shell/shell.component';\nimport { AuthorisedAdminGuard } from './shared/guards/authorised-admin.guard';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AppShellComponent,\n        children: [\n            {\n                path: 'modules',\n                loadChildren: () =>\n                    import('./shell/modules/modules.module').then(m => m.AppModulesModule)\n            },\n            {\n                path: 'domains',\n                loadChildren: () =>\n                    import('./shell/domains/domains.module').then(m => m.AppDomainsModule)\n            },\n            {\n                path: 'drivers',\n                loadChildren: () =>\n                    import('./shell/drivers/drivers.module').then(m => m.AppDriversModule)\n            },\n            {\n                path: 'metrics',\n                loadChildren: () =>\n                    import('./shell/metrics/metrics.module').then(m => m.AppMetricsModule)\n            },\n            {\n                path: 'systems',\n                loadChildren: () =>\n                    import('./shell/systems/systems.module').then(m => m.AppSystemsModule)\n            },\n            {\n                path: 'repositories',\n                loadChildren: () =>\n                    import('./shell/repositories/repositories.module').then(\n                        m => m.AppRepositoriesModule\n                    )\n            },\n            {\n                path: 'triggers',\n                loadChildren: () =>\n                    import('./shell/triggers/triggers.module').then(m => m.AppTriggersModule)\n            },\n            {\n                path: 'users',\n                loadChildren: () => import('./shell/users/users.module').then(m => m.AppUsersModule)\n            },\n            {\n                path: 'zones',\n                loadChildren: () => import('./shell/zones/zones.module').then(m => m.AppZonesModule)\n            },\n            {\n                path: 'admin',\n                loadChildren: () =>\n                    import('./shell/engine/engine.module').then(m => m.AppEngineModule),\n                canLoad: [AuthorisedAdminGuard]\n            },\n            { path: '**', redirectTo: 'systems' }\n        ]\n    },\n    { path: '**', redirectTo: 'systems' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { ApplicationService } from './services/app.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./styles/app.component.scss', './styles/custom-element.styles.scss', './styles/native-element.styles.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent implements OnInit {\n\n    constructor(private _service: ApplicationService) {\n\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Loading...';\n    }\n}\n","<div class=\"app\">\n    <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { FormsModule } from '@angular/forms';\n\nimport { AGoogleAnalyticsModule } from '@acaprojects/ngx-google-analytics';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { environment } from '../environments/environment';\n\nimport { SharedOverlaysModule } from './overlays/overlays.module';\nimport { SharedContentModule } from './shared/shared.module';\nimport { SentryService } from './services/sentry.service';\n\nimport { APP_COMPONENTS } from './shell';\n\nimport './shared/mocks';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ...APP_COMPONENTS\n\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n        HttpClientModule,\n        FormsModule,\n        AGoogleAnalyticsModule,\n        SharedOverlaysModule,\n        SharedContentModule\n    ],\n    providers: [{ provide: ErrorHandler, useClass: SentryService }],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\nimport {\n    EngineDomain,\n    EngineOAuthSource,\n    EngineLDAPSource,\n    EngineSAMLSource\n} from '@placeos/ts-client';\n\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\nimport {\n    generateOAuthSourceForm,\n    generateLDAPSourceForm,\n    generateSAMLSourceForm\n} from 'src/app/shared/utilities/data/auth-sources.utilities';\n\nexport interface AuthSourceModalData {\n    /** Domain the auth source is associated with */\n    domain: EngineDomain;\n    /** Item to add/update the trigger on */\n    auth_source?: EngineOAuthSource | EngineLDAPSource | EngineSAMLSource;\n}\n\nexport type AuthSourceTypes = 'oauth' | 'saml' | 'ldap';\n\n@Component({\n    selector: 'app-auth-source-modal',\n    templateUrl: './auth-source-modal.component.html',\n    styleUrls: ['./auth-source-modal.component.scss']\n})\nexport class AuthSourceModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether actions are loading */\n    public loading: boolean;\n    /** Form fields for trigger condition */\n    public form: FormGroup;\n    /** Item */\n    public item: EngineOAuthSource | EngineLDAPSource | EngineSAMLSource;\n    /** List of available authentication sources */\n    public source_types: Identity[] = [\n        { id: 'oauth', name: 'OAuth' },\n        { id: 'ldap', name: 'LDAP' },\n        { id: 'saml', name: 'SAML2' }\n    ];\n\n    public active_type: AuthSourceTypes;\n\n    /** Whether the triggers is new or not */\n    public get is_new(): boolean {\n        return !this._data.auth_source;\n    }\n\n    public get type(): AuthSourceTypes {\n        return this.item instanceof EngineSAMLSource\n            ? 'saml'\n            : this.item instanceof EngineLDAPSource\n            ? 'ldap'\n            : 'oauth';\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<AuthSourceModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: AuthSourceModalData,\n        private _service: ApplicationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        if (this._data.auth_source) {\n            this.item = this._data.auth_source;\n            this.active_type = this.type;\n        }\n        this.initialiseForm();\n    }\n\n    /**\n     * Set the type of auth source to create\n     * @param type Type of auth source\n     */\n    public setType(type: AuthSourceTypes) {\n        const data = { authority_id: this._data.domain.id };\n        switch (type) {\n            case 'saml':\n                this.item = new EngineSAMLSource(data);\n                break;\n            case 'ldap':\n                this.item = new EngineLDAPSource(data);\n                break;\n            default:\n                this.item = new EngineOAuthSource(data);\n                break;\n        }\n        this.initialiseForm();\n    }\n\n    /**\n     * Create item if new or update if exsiting\n     */\n    public save() {\n        this.form.markAllAsTouched();\n        if (!this.form.valid) {\n            return;\n        }\n        this.loading = true;\n        (this.item as any).save().then(\n            item => {\n                this.event.emit({ reason: 'done', metadata: { trigger: item } });\n                this._service.notifySuccess(\n                    `Successfully ${this.is_new ? 'added' : 'updated'} auth source`\n                );\n                this._dialog.close();\n            },\n            err => {\n                this.loading = false;\n                this._service.notifyError(\n                    `Error ${\n                        this.is_new ? 'adding' : 'updating'\n                    } auth source. Error: ${JSON.stringify(err.response || err.message || err)}`\n                );\n            }\n        );\n    }\n\n    /**\n     * Generate the form fields for the active item type\n     */\n    private initialiseForm() {\n        if (!this.item) {\n            return;\n        }\n        if (this.item instanceof EngineOAuthSource) {\n            this.form = generateOAuthSourceForm(this.item).form;\n        } else if (this.item instanceof EngineSAMLSource) {\n            this.form = generateSAMLSourceForm(this.item).form;\n        } else if (this.item instanceof EngineLDAPSource) {\n            this.form = generateLDAPSourceForm(this.item).form;\n        }\n    }\n}\n","<header>\n    <h3 mat-dialog-title>{{!is_new ? 'Edit' : 'New'}} Auth Source</h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'backoffice-cross' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <div class=\"field type\" *ngIf=\"is_new\">\n            <label for=\"type\">Auth Source Type: </label>\n            <mat-form-field appearance=\"outline\">\n                <mat-select name=\"type\" [(ngModel)]=\"active_type\" (ngModelChange)=\"setType($event)\" placeholder=\"Select auth type\">\n                    <mat-option *ngFor=\"let type of source_types\" [value]=\"type.id\">\n                        {{ type.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <ng-container *ngIf=\"item\">\n            <ng-container [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'saml'\">\n                    <saml-source-form [form]=\"form\"></saml-source-form>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'ldap'\">\n                    <ldap-source-form [form]=\"form\"></ldap-source-form>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <oauth-source-form [form]=\"form\"></oauth-source-form>\n                </ng-container>\n            </ng-container>\n        </ng-container>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n    <button mat-button type=\"button\" [disabled]=\"!active_type\" (tapped)=\"save()\">\n        {{ is_new ? 'Save' : 'Add' }}\n    </button>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <a-spinner circle-ring color=\"#000\"></a-spinner>\n            </div>\n            <div class=\"text\">Processing request...</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Inject, Type } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport {\n    EngineResource,\n    SYSTEM_MUTABLE_FIELDS,\n    EngineSystem,\n    MODULE_MUTABLE_FIELDS,\n    EngineModule,\n    DRIVER_MUTABLE_FIELDS,\n    EngineDriver,\n    USER_MUTABLE_FIELDS,\n    EngineUser,\n    ZONE_MUTABLE_FIELDS,\n    EngineZone\n} from '@placeos/ts-client';\nimport { HashMap, EngineServiceLike, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { SYSTEM_TEMPLATE, MODULE_TEMPLATE, DRIVER_TEMPLATE, USER_TEMPLATE, ZONE_TEMPLATE } from './template-data';\n\nexport interface BulkItemModalData<T = EngineResource<any>> {\n    constr: Type<T>;\n    service: EngineServiceLike;\n}\n\n@Component({\n    selector: 'app-bulk-item-modal',\n    templateUrl: './bulk-item-modal.component.html',\n    styleUrls: ['./bulk-item-modal.component.scss'],\n})\nexport class BulkItemModalComponent<T = EngineResource<any>> {\n    /** Current step in the bulk add flow */\n    public flow_step: '' | 'match-fields' | 'list' | 'status' = '';\n    /** List of items to bulk add */\n    public item_list: T[] = [];\n    /** List of raw data to use for bulk add */\n    public data_list: HashMap[] = [];\n    /** Whether requests are being processed */\n    public loading: boolean;\n    /** Template data for use */\n    public template: HashMap[] = [];\n\n    public available_fields: Identity[] = [];\n\n    public get type(): string {\n        return this._data.service._name;\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<BulkItemModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: BulkItemModalData<T>\n    ) {\n        this.available_fields = this.getAvailableFields();\n        this.template = this.generateTemplate();\n    }\n\n    /**\n     * Handle list data\n     * @param data List of data to process\n     */\n    public handleList(data: HashMap[], is_mapped: boolean = false): void {\n        if (data.length) {\n            if (is_mapped) {\n                console.log('To list:', data);\n                const Resource = this._data.constr;\n                this.item_list = data.map((item) => new Resource(item));\n                this.flow_step = 'list';\n            } else {\n                this.data_list = data;\n                this.flow_step = 'match-fields';\n            }\n        }\n    }\n\n    public showStatus() {\n        this.flow_step = 'status';\n    }\n\n    public done() {\n        setTimeout(() => this._dialog_ref.close(), 3000);\n    }\n\n    private getAvailableFields(): Identity[] {\n        let list: readonly string[] = [];\n        switch (this._data.constr as any) {\n            case EngineSystem:\n                list = SYSTEM_MUTABLE_FIELDS;\n                break;\n            case EngineModule:\n                list = MODULE_MUTABLE_FIELDS;\n                break;\n            case EngineDriver:\n                list = DRIVER_MUTABLE_FIELDS;\n                break;\n            case EngineUser:\n                list = USER_MUTABLE_FIELDS;\n                break;\n            case EngineZone:\n                list = ZONE_MUTABLE_FIELDS;\n                break;\n        }\n        return unique(\n            list.map((i) => ({ id: i, name: i.split('_').join(' ') })),\n            'id'\n        );\n    }\n\n    private generateTemplate(): HashMap[] {\n        switch (this._data.constr as any) {\n            case EngineSystem:\n                return [new EngineSystem(SYSTEM_TEMPLATE).toJSON()];\n            case EngineModule:\n                return [new EngineModule(MODULE_TEMPLATE).toJSON()];\n            case EngineDriver:\n                return [new EngineDriver(DRIVER_TEMPLATE).toJSON()];\n            case EngineUser:\n                return [new EngineUser(USER_TEMPLATE)];\n            case EngineZone:\n                return [new EngineZone(ZONE_TEMPLATE)];\n        }\n    }\n}\n","<header>\n    <h3 mat-dialog-title>Bulk Add {{ type }}</h3>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'backoffice-cross' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div [ngSwitch]=\"flow_step\">\n            <div *ngSwitchCase=\"'status'\">\n                <bulk-item-status-list [list]=\"item_list\" (done)=\"done()\"></bulk-item-status-list>\n            </div>\n            <div *ngSwitchCase=\"'list'\">\n                <bulk-item-list\n                    [(list)]=\"item_list\"\n                    [fields]=\"available_fields\"\n                    (next)=\"showStatus()\"\n                    (previous)=\"flow_step = 'match-fields'\"\n                ></bulk-item-list>\n            </div>\n            <div *ngSwitchCase=\"'match-fields'\">\n                <bulk-item-match-fields\n                    [list]=\"data_list\"\n                    [field_list]=\"available_fields\"\n                    (mapping_done)=\"handleList($event, true)\"\n                    (previous)=\"flow_step = ''\"\n                ></bulk-item-match-fields>\n            </div>\n            <div *ngSwitchDefault>\n                <bulk-item-csv-upload\n                    [template]=\"template\"\n                    (list)=\"handleList($event)\"\n                ></bulk-item-csv-upload>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n","import { Component, EventEmitter, Output, Input } from '@angular/core';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { csvToJson, jsonToCsv, downloadFile } from 'src/app/shared/utilities/general.utilities';\n\n@Component({\n    selector: 'bulk-item-csv-upload',\n    templateUrl: './csv-upload.component.html',\n    styleUrls: ['./csv-upload.component.scss'],\n})\nexport class CsvUploadComponent {\n    /** Data for the template CSV */\n    @Input() template: HashMap[] = [];\n    /** Emitter for changes to the data displayed */\n    @Output() public list = new EventEmitter<HashMap[]>();\n    /** Whether user has dragged item */\n    public dragging: boolean;\n    /** Whether CSV data is being processed */\n    public loading: boolean;\n\n    constructor(private _service: ApplicationService) {}\n\n    public loadCSVData(event: InputEvent) {\n        this.loading = true;\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCSVData((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = false;\n                    this._service.notifyError('Error reading file.');\n                });\n            }\n        }\n    }\n\n    public downloadTemplateCSV() {\n        const ignore_keys = ['module_list', 'settings', '_type', 'version'];\n        const csv_data = jsonToCsv(\n            this.template,\n            Object.keys(this.template[0]).filter((key) => ignore_keys.indexOf(key) < 0),\n            '\\t'\n        );\n        downloadFile('bulk-upload.tsv', csv_data);\n    }\n\n    private processCSVData(data: string) {\n        try {\n            const list = csvToJson(data, '\\t') || [];\n            console.log('List:', list);\n            this.loading = false;\n            this.list.emit(list);\n        } catch (e) {\n            console.error(e);\n        }\n    }\n}\n","<div\n    class=\"upload-box\"\n    *ngIf=\"!loading; else load_state\"\n    [class.hover]=\"dragging\"\n    (dragenter)=\"dragging = true\"\n    (dragleave)=\"dragging = false\"\n    (dragend)=\"dragging = false\"\n>\n    <app-icon [icon]=\"{ class: 'backoffice-upload' }\"></app-icon>\n    <div class=\"text\" i18n=\"uploadCSVAction\">Select or drop CSV file to begin</div>\n    <input type=\"file\" (change)=\"loadCSVData($event)\"/>\n</div>\n<div class=\"template\" *ngIf=\"template\">\n    <button mat-button (click)=\"downloadTemplateCSV()\">Download Template</button>\n</div>\n<ng-template #load_state>\n    <div class=\"load-state\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\" i81n=\"@@loadingCSV\">Process CSV data...</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges, Output, EventEmitter } from '@angular/core';\n\nimport { EngineResource } from '@placeos/ts-client';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'bulk-item-list',\n    templateUrl: './list.component.html',\n    styleUrls: ['./list.component.scss'],\n})\nexport class ListComponent implements OnChanges {\n    /** List of bulk items to add */\n    @Input() public list: EngineResource<any>;\n    /** List of fields available for building new item */\n    @Input() public fields: Identity[] = [];\n    /** Emitter user want to return to next step in flow */\n    @Output() public next = new EventEmitter<void>();\n    /** Emitter user want to return to previous step in flow */\n    @Output() public previous = new EventEmitter<void>();\n    /** List of column ids to show on table */\n    public field_ids: string[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.fields && this.fields) {\n            this.field_ids = this.fields.map(i => `${i.id}`);\n        }\n    }\n}\n","<div class=\"info\"></div>\n<table cdk-table [dataSource]=\"list\">\n    <ng-container *ngFor=\"let field of fields\">\n        <ng-container [cdkColumnDef]=\"field.id\">\n            <th cdk-header-cell *cdkHeaderCellDef>{{ field.name }}</th>\n            <td cdk-cell *cdkCellDef=\"let row\">\n                <input matInput [(ngModel)]=\"row[field.id]\" />\n            </td>\n        </ng-container>\n    </ng-container>\n\n    <tr cdk-header-row *cdkHeaderRowDef=\"field_ids\"></tr>\n    <tr cdk-row *cdkRowDef=\"let row; columns: field_ids\"></tr>\n</table>\n<div class=\"actions\">\n    <button mat-button class=\"inverse\" (tapped)=\"previous.emit()\">Back</button>\n    <button mat-button (click)=\"next.emit()\">Create items</button>\n</div>\n\n","import { Component, Input, SimpleChanges, EventEmitter, Output } from '@angular/core';\n\nimport { HashMap, Identity } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'bulk-item-match-fields',\n    templateUrl: './match-fields.component.html',\n    styleUrls: ['./match-fields.component.scss'],\n})\nexport class MatchFieldsComponent {\n    /** List of bulk items to add */\n    @Input() public list: HashMap<any>[];\n    /** List of fields available for building new item */\n    @Input() public field_list: Identity[] = [];\n    /** Emitter for mapped changes to list */\n    @Output() public mapping_done = new EventEmitter<HashMap<any>[]>();\n    /** Emitter user want to return to previous step in flow */\n    @Output() public previous = new EventEmitter<void>();\n    /** List of fields available to be selected */\n    public source_fields: Identity[] = [];\n    /** Mapping of raw data fields ids to item fields ids */\n    public field_mapping: HashMap<string> = {};\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.list && this.list && this.list.length) {\n            this.source_fields = Object.keys(this.list[0]).map((i) => ({\n                id: i.toLowerCase().split(' ').join('_'),\n                name: i.split('_').join(' '),\n            }));\n            this.source_fields.forEach(field => {\n                if (this.field_list.find(i => i.id === field.id)) {\n                    this.field_mapping[`${field.id}`] = `${field.id}`;\n                }\n            });\n        }\n    }\n\n    /** Generated the mapped list of items and emit them */\n    public saveMapping(): void {\n        console.log('Mapping:', this.field_mapping);\n        const mapped_list = this.list.map(item => {\n            const mapped_item: any = {};\n            for (const field of this.field_list) {\n                const id = `${field.id}`;\n                mapped_item[id] = item[this.field_mapping[id]];\n            }\n            return mapped_item;\n        });\n        this.mapping_done.emit(mapped_list);\n    }\n}\n","<div class=\"field-list\">\n    <div class=\"field\" *ngFor=\"let field of field_list\">\n        <label [for]=\"field.id\">{{ field.id }}</label>\n        <div class=\"value\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select [name]=\"field.id\" [(ngModel)]=\"field_mapping[field.id]\" placeholder=\"Select field\">\n                    <mat-option *ngFor=\"let type of source_fields\" [value]=\"type.id\">\n                        {{ type.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    </div>\n</div>\n<div class=\"actions\">\n    <button mat-button class=\"inverse\" (tapped)=\"previous.emit()\">Back</button>\n    <button mat-button (click)=\"saveMapping()\">Continue</button>\n</div>\n","import { Component, Input, Output, EventEmitter, SimpleChanges, OnChanges } from '@angular/core';\n\nimport { EngineResource } from '@placeos/ts-client';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'bulk-item-status-list',\n    templateUrl: './status-list.component.html',\n    styleUrls: ['./status-list.component.scss'],\n})\nexport class StatusListComponent implements OnChanges {\n    /** List of bulk items to add */\n    @Input() public list: EngineResource<any>[] = [];\n    /** Emitter for completion status of the item upload */\n    @Output() public done = new EventEmitter<EngineResource<any>[]>();\n    /** Status of each of the items to be created */\n    public status: HashMap<string> = {};\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.list && this.list) {\n            this.saveItems();\n        }\n    }\n\n    public async saveItems() {\n        try {\n        const list = [];\n        let index = 0;\n        for (const item of this.list) {\n            item.storePendingChange('id', '');\n            this.status[index] = 'loading';\n            const saved_item = await item.save().catch((err) => {\n                this.status[index] = `Error: ${err.message || err}`;\n                console.error(this.status[index])\n                // this._service.notifyError(this.status[index]);\n            });\n            list.push(saved_item);\n            if (this.status[index] === 'loading') {\n                this.status[index] = 'done';\n            }\n            index++;\n        }\n        const clean_list = list.filter((item) => !!item);\n        if (clean_list.length > 0) {\n            this.done.emit(clean_list);\n        }\n        } catch (e) { console.error(e); }\n    }\n}\n","<div class=\"info\" *ngIf=\"!done\">Uploading items...</div>\n<div *ngFor=\"let item of list; let i = index\" class=\"item\">\n    <div class=\"name\">{{ item.name }}</div>\n    <div class=\"status\">\n        <app-icon\n            *ngIf=\"status[i] !== 'loading'\"\n            [class]=\"status[i]\"\n            [icon]=\"{ class: status[i] === 'done' ? 'backoffice-check' : 'backoffice-cross' }\"\n        ></app-icon>\n        <mat-spinner *ngIf=\"status[i] === 'loading'\" diameter=\"24\"></mat-spinner>\n    </div>\n</div>\n","\nimport { EngineDriverRole } from '@placeos/ts-client';\n\nexport const SYSTEM_TEMPLATE = {\n    name: 'A System',\n    description: 'A description',\n    email: 'system@place.tech',\n    capacity: 10,\n    features: 'vidConf',\n    bookable: true,\n    installed_ui_devices: 4,\n    support_url: 'https://place.tech/support/test',\n    modules: ['mod-123'],\n    zones: ['zone-123'],\n    map_id: 'area-123',\n    module_data: [{ id: 'mod-001', name: 'A Module' }],\n};\n\nexport const MODULE_TEMPLATE = {\n    name: 'A Module',\n    driver_id: 'dep-001',\n    control_system_id: 'sys-001',\n    ip: '1.1.1.1',\n    tls: false,\n    udp: false,\n    port: 32000,\n    makebreak: false,\n    uri: 'test.com',\n    custom_name: 'mi-name',\n    role: EngineDriverRole.Device,\n    notes: 'Clone wars',\n    ignore_connected: false,\n};\n\nexport const DRIVER_TEMPLATE = {\n    name: 'A Driver',\n    description: 'In a galaxy far far away...',\n    module_name: 'SteamShip',\n    role: EngineDriverRole.Logic,\n    default_uri: 'Sometimes we default',\n    default_port: 1234,\n    ignore_connected: false,\n    settings: { settings_string: '{ today: false, future: \\'Yeah!\\' }' },\n    class_name: '::ACA::SolveProblem',\n    repository_id: 'my-repo',\n    file_name: 'fancy-driver.cr',\n    commit: 'some-hash'\n};\n\nexport const USER_TEMPLATE = {\n    name: 'A User',\n    authority_id: 'On who\\'s authority',\n    email: 'jon@place.tech',\n    phone: '+612000000000',\n    country: 'Australia',\n    image: '',\n    metadata: 'there be none',\n    login_name: 'elitedarklord',\n    staff_id: 'PERSON_12345',\n    first_name: 'Bob',\n    last_name: 'Marley'\n};\n\nexport const ZONE_TEMPLATE = {\n    name: 'A Zone',\n    description: 'In a galaxy far far away...',\n    triggers: ['trig-001'],\n    parent_id: 'zone-123',\n    display_name: 'The Zone',\n    tags: 'building,level,org',\n    code: 'BLD-123',\n    type: 'Client',\n    count: 32,\n    capacity: 2345,\n    location: 'Somewhere close',\n    map_id: 'a/url/to/my/map.svg'\n};\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    templateUrl: './changelog-modal.template.html',\n    styleUrls: ['./changelog-modal.styles.scss']\n})\nexport class ChangelogModalComponent extends BaseDirective {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n    /** Changelog Markdown */\n    public item: string;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {\n        super();\n    }\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return this._data.changelog || '';\n    }\n}\n","<header>\n    <h3 mat-dialog-title>Changelog</h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'backoffice-cross' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <div\n        class=\"body markdown\"\n        *ngIf=\"changelog; else empty_state\"\n        [innerHTML]=\"changelog | safe:'html'\"\n    ></div>\n    <ng-template #empty_state>\n        <div class=\"body\">\n            <div class=\"info-block\">\n                <div class=\"icon\">\n                    <i class=\"backoffice-cross\"></i>\n                </div>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </div>\n    </ng-template>\n</mat-dialog-content>\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon } from '../../shared/utilities/settings.interfaces';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    action?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss']\n})\nexport class ConfirmModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public title: string;\n    /** Body of the confirm modal */\n    public content: string;\n    /** Display text on the confirm button */\n    public action: string;\n    /** Display icon properties */\n    public icon: ApplicationIcon;\n    /** Loading state */\n    public loading: string;\n\n    constructor(\n        private _dialog: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const data = this._data;\n        if (data) {\n            this.title = data.title || 'Confirm';\n            this.content = data.content || 'Confirm';\n            this.action = data.action || 'Ok';\n            this.icon = data.icon;\n        }\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public accept() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","<header>\n    <h3 mat-dialog-title>{{ title || 'Confirm' }}</h3>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <app-icon [icon]=\"icon\"></app-icon>\n        <div class=\"content\">\n            <p [innerHTML]=\"content || 'Are you sure?'\"></p>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n    <button mat-button name=\"accept\" (tapped)=\"accept()\">{{ action || 'Ok' }}</button>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <a-spinner circle-ring></a-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nexport interface DuplicateModalData {\n    item: HashMap;\n}\n\n@Component({\n    selector: 'app-duplicate-modal',\n    templateUrl: './duplicate-modal.component.html',\n    styleUrls: ['./duplicate-modal.component.scss'],\n})\nexport class DuplicateModalComponent {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Number of times to duplicate the given item */\n    public times: number = 1;\n    /** Number of times to duplicate the given item */\n    public status: HashMap<string> = {};\n    /** Whether request is loading */\n    public loading: boolean = false;\n    /** Temporary array for generating UI elements */\n    public temp: any[];\n    /** Whether duplication has completed */\n    public done: boolean = false;\n\n    /** Item selected to be duplicated */\n    public get item() {\n        return this._data.item;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DuplicateModalData,\n        private _dialog_ref: MatDialogRef<DuplicateModalComponent>,\n        private _service: ApplicationService\n    ) {}\n\n    /**\n     * Create the specified number of duplicate items\n     */\n    public async duplicate() {\n        this.loading = true;\n        const ItemConstructor: any = this.item.constructor;\n        const item = this._data.item;\n        const list = [];\n        this.temp = new Array(this.times).fill(0);\n        for (let i = 0; i < this.times; i++) {\n            const new_item = new ItemConstructor({\n                ...item,\n                id: '',\n                name: `${item.name} (${i + 1})`,\n            });\n            new_item.storePendingChange('id', '');\n            this.status[i] = 'loading';\n            const saved_item = await new_item.save().catch((err) => {\n                this.status[i] = `Error: ${err.message || err}`;\n                this._service.notifyError(this.status[i]);\n            });\n            list.push(saved_item);\n            if (this.status[i] === 'loading') {\n                this.status[i] = 'done';\n            }\n        }\n        const clean_list = list.filter((item) => !!item);\n        this.event.emit({ reason: 'done', metadata: clean_list } as DialogEvent);\n        this.done = true;\n        setTimeout(() => this._dialog_ref.close(), 5000);\n    }\n}\n","<header>\n    <h3 mat-dialog-title i18n=\"@@duplicateHeader\">Duplicate Item</h3>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <div class=\"content\">\n            <p>How many times would you like to duplicate this item?</p>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"times\"\n                    type=\"number\"\n                    [(ngModel)]=\"times\"\n                    placeholder=\"Number of duplications\"\n                    i18n-placeholder=\"@@duplcateTimesPlaceholder\"\n                    required\n                />\n            </mat-form-field>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <button mat-button class=\"inverse\" mat-dialog-close i18n=\"@@cancelAction\">Cancel</button>\n    <button\n        mat-button\n        name=\"accept\"\n        [disabled]=\"!times || times <= 0\"\n        (tapped)=\"duplicate()\"\n        i18n=\"@@duplicateAction\"\n    >\n        Duplicate\n    </button>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info\" *ngIf=\"!done\">Creating item duplicates...</div>\n        <div *ngFor=\"let itm of temp; let i = index\" class=\"item\">\n            <div class=\"name\">{{ item.name }} ({{ i + 1 }})</div>\n            <div class=\"status\">\n                <app-icon *ngIf=\"status[i] !== 'loading'\" [class]=\"status[i]\" [icon]=\"{ class: status[i] === 'done' ? 'backoffice-check' : 'backoffice-cross' }\"></app-icon>\n                <mat-spinner *ngIf=\"status[i] === 'loading'\" diameter=\"24\"></mat-spinner>\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Inject, EventEmitter, Output, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    EngineResource,\n    EngineSystem,\n    EngineModule,\n    EngineZone,\n    EngineDriver,\n    EngineUser,\n    EngineDomain,\n    EngineApplication,\n    EngineSettings,\n    EngineTrigger,\n    EngineRepository,\n    PlaceMQTTBroker,\n    EncryptionLevel\n} from '@placeos/ts-client';\nimport { FormGroup } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\nimport { DialogEvent, EngineServiceLike, Identity } from 'src/app/shared/utilities/types.utilities';\nimport {\n    generateSystemsFormFields,\n    FormDetails\n} from 'src/app/shared/utilities/data/systems.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { generateModuleFormFields } from 'src/app/shared/utilities/data/modules.utilities';\nimport { generateZoneFormFields } from 'src/app/shared/utilities/data/zones.utilites';\nimport { generateDriverFormFields } from 'src/app/shared/utilities/data/drivers.utilities';\nimport { generateUserFormFields } from 'src/app/shared/utilities/data/users.utilities';\nimport { generateDomainFormFields } from 'src/app/shared/utilities/data/domains.utilities';\nimport { generateApplicationFormFields } from 'src/app/shared/utilities/data/applications.utilities';\nimport {\n    generateTriggerFormFields,\n    generateTriggerSettingsFormFields\n} from 'src/app/shared/utilities/data/triggers.utilities';\nimport { generateRepositoryFormFields } from 'src/app/shared/utilities/data/repositories.utilities';\nimport { generateBrokerFormFields } from 'src/app/shared/utilities/data/brokers.utilities';\n\nexport interface CreateEditModalData<T extends Identity = any> {\n    /** Service associated with the item being created/edited */\n    service: EngineServiceLike;\n    /** Item being worked on */\n    item: T;\n    /** Form fields for item */\n    form?: any[];\n    /** Name of the type of item being worked on */\n    name?: string;\n    /** Whether parts of the form are readonly */\n    readonly?: string;\n    /** Whether saving the form details will be handled outside the modal */\n    external_save?: boolean;\n}\n\n@Component({\n    selector: 'item-modal',\n    templateUrl: './item-modal.component.html',\n    styleUrls: ['./item-modal.component.scss']\n})\nexport class ItemCreateUpdateModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether the item is being editing */\n    public edit: boolean;\n    /** Item to edit */\n    public item: EngineResource<any>;\n    /** Saved version of the item */\n    public result: any;\n    /** List of the form fields needed for the item */\n    public form: FormGroup;\n    /** Loading status for the item request is being processed */\n    public loading: string;\n\n    public get name(): string {\n        return this._data.service.name || this._data.service._name;\n    }\n\n    public get readonly(): boolean {\n        return !!this._data.readonly;\n    }\n\n    public get item_type(): string {\n        if (this.item instanceof EngineSystem) {\n            return 'system';\n        } else if (this.item instanceof EngineModule) {\n            return 'module';\n        } else if (this.item instanceof EngineZone) {\n            return 'zone';\n        } else if (this.item instanceof EngineDriver) {\n            return 'driver';\n        } else if (this.item instanceof EngineUser) {\n            return 'user';\n        } else if (this.item instanceof EngineDomain) {\n            return 'domain';\n        } else if (this.item instanceof EngineApplication) {\n            return 'application';\n        } else if (this.item instanceof EngineTrigger && this._data.external_save) {\n            return 'system-trigger';\n        } else if (this.item instanceof EngineTrigger) {\n            return 'trigger';\n        } else if (this.item instanceof EngineRepository) {\n            return 'repository';\n        } else if (this.item instanceof PlaceMQTTBroker) {\n            return 'broker';\n        }\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ItemCreateUpdateModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CreateEditModalData,\n        private _service: ApplicationService\n    ) {\n        super();\n    }\n\n    /**\n     * Generate the form fields for the item being handled\n     */\n    public generateFormData(): FormGroup {\n        let details: FormDetails = null;\n        if (this.item instanceof EngineSystem) {\n            details = generateSystemsFormFields(this.item);\n        } else if (this.item instanceof EngineModule) {\n            details = generateModuleFormFields(this.item);\n        } else if (this.item instanceof EngineZone) {\n            details = generateZoneFormFields(this.item);\n        } else if (this.item instanceof EngineDriver) {\n            details = generateDriverFormFields(this.item);\n        } else if (this.item instanceof EngineUser) {\n            details = generateUserFormFields(this.item);\n        } else if (this.item instanceof EngineDomain) {\n            details = generateDomainFormFields(this.item);\n        } else if (this.item instanceof EngineApplication) {\n            details = generateApplicationFormFields(this.item);\n        } else if (this.item instanceof EngineTrigger && this._data.external_save) {\n            details = generateTriggerSettingsFormFields(this.item);\n        } else if (this.item instanceof EngineTrigger) {\n            details = generateTriggerFormFields(this.item);\n        } else if (this.item instanceof EngineRepository) {\n            details = generateRepositoryFormFields(this.item);\n        } else if (this.item instanceof PlaceMQTTBroker) {\n            details = generateBrokerFormFields(this.item);\n        }\n        if (details) {\n            details.subscriptions.forEach((sub, index) =>\n                this.subscription(`form_field_${index}`, sub)\n            );\n            return details.form;\n        }\n        return new FormGroup({});\n    }\n\n    public ngOnInit(): void {\n        this.item = this._data.item;\n        this.edit = !!this._data.item.id;\n        this.form = this.generateFormData();\n        this.subscription(\n            'delete_item',\n            this._service.Hotkeys.listen(['KeyS'], () => this.submit())\n        );\n    }\n\n    /**\n     * Save changes and create item if it does not exist\n     */\n    public submit() {\n        this.form.markAllAsTouched();\n        if (this.item && this.form.valid) {\n            this.loading = `${this.item.id ? 'Updating' : 'Creating'} ${this.name}...`;\n            this._dialog_ref.disableClose = true;\n            if (this._data.external_save) {\n                this.event.emit({ reason: 'action', metadata: this.form.value });\n                return;\n            }\n            this.item.save().then(\n                item => {\n                    this.result = item;\n                    this._dialog_ref.disableClose = false;\n                    this.event.emit({ reason: 'done', metadata: { item } });\n                    this._service.notifySuccess(\n                        `Successfully ${this.item.id ? 'updated' : 'added'} ${this.name}`\n                    );\n                    if (!this.form.value.id && this.form.controls.settings) {\n                        this.newSettings(item, this.form.controls.settings.value).then(() =>\n                            this._dialog_ref.close()\n                        );\n                    } else {\n                        this._dialog_ref.close();\n                    }\n                },\n                err => {\n                    this.loading = null;\n                    this._dialog_ref.disableClose = false;\n                    this._service.notifyError(\n                        `Error ${this.item.id ? 'editing' : 'adding new'} ${\n                            this.name\n                        }. Error: ${JSON.stringify(err.response || err.message || err)}`\n                    );\n                }\n            );\n        }\n    }\n\n    /**\n     * Save initial settings for resources\n     */\n    private async newSettings(item: EngineResource<any>, setting_string: string) {\n        const new_settings = new EngineSettings({\n            parent_id: item.id,\n            setting_string: '',\n            encryption_level: EncryptionLevel.None\n        });\n        new_settings.storePendingChange('settings_string', setting_string);\n        const settings = await new_settings.save().catch(err => {\n            this.loading = null;\n            this._service.notifyError(\n                `Error saving settings for ${item.name || item.id}. Error: ${JSON.stringify(err.response || err.message || err)}`\n            );\n        });\n        (item as any).settings[EncryptionLevel.None] = settings;\n    }\n\n    /**\n     * Close the modal\n     */\n    public close() {\n        this._dialog_ref.close();\n    }\n}\n","<header>\n    <h3 mat-dialog-title>{{ item && edit ? 'Edit' : 'New' }} {{ name }}</h3>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'backoffice-cross' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <ng-container [ngSwitch]=\"item_type\">\n            <ng-container *ngSwitchCase=\"'repository'\">\n                <repository-form [form]=\"form\"></repository-form>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"'trigger'\">\n                <trigger-form [form]=\"form\"></trigger-form>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"'system-trigger'\">\n                <system-trigger-form [form]=\"form\"></system-trigger-form>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"'application'\">\n                <application-form [form]=\"form\"></application-form>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"'domain'\">\n                <domain-form [form]=\"form\"></domain-form>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"'user'\">\n                <user-form [form]=\"form\"></user-form>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"'driver'\">\n                <driver-form [form]=\"form\"></driver-form>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"'zone'\">\n                <zone-form [form]=\"form\"></zone-form>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"'module'\">\n                <module-form [form]=\"form\" [readonly]=\"readonly\"></module-form>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"'broker'\">\n                <broker-form [form]=\"form\"></broker-form>\n            </ng-container>\n            <ng-container *ngSwitchDefault>\n                <system-form [form]=\"form\"></system-form>\n            </ng-container>\n        </ng-container>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n    <button mat-button type=\"submit\" (tapped)=\"submit()\">{{ item ? 'Save' : 'Add' }} [S]</button>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <a-spinner circle-ring color=\"#000\"></a-spinner>\n            </div>\n            <div class=\"text\">Processing request...</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nexport interface MetadataDetailsModalData {\n    form: FormGroup;\n}\n\n@Component({\n    selector: 'app-metadata-details-modal',\n    templateUrl: './metadata-details-modal.component.html',\n    styleUrls: ['./metadata-details-modal.component.scss']\n})\nexport class MetadataDetailsModalComponent implements OnInit {\n    public form: FormGroup;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<MetadataDetailsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: MetadataDetailsModalData\n    ) {}\n\n    ngOnInit() {\n        this.form = new FormGroup({\n            name: new FormControl(\n                this._data.form.controls.name.value,\n                this._data.form.controls.name.validator\n            ),\n            description: new FormControl(this._data.form.controls.description.value)\n        });\n    }\n\n    public updateDetails() {\n        this._data.form.controls.name.setValue(this.form.controls.name.value);\n        this._data.form.controls.description.setValue(this.form.controls.description.value);\n        this._dialog_ref.close();\n    }\n}\n","<header>\n    <div class=\"heading\">Update metadata details</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'backoffice-cross' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"property-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                >Name<span>*</span>:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"property-name\"\n                    placeholder=\"Property Name\"\n                    formControlName=\"name\"\n                    required\n                />\n                <mat-error *ngIf=\"form.controls.name.invalid\">{{\n                    form.controls.name.errors.name\n                        ? 'Property name must be unique'\n                        : 'Property name is required'\n                }}</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.description\">\n            <label for=\"description\">Description:</label>\n            <mat-form-field appearance=\"outline\">\n                <textarea\n                    matInput\n                    name=\"description\"\n                    placeholder=\"Description\"\n                    formControlName=\"description\"\n                ></textarea>\n            </mat-form-field>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button [disabled]=\"!form.controls.name.valid\" mat-button (tapped)=\"updateDetails()\">\n            Update\n        </button>\n    </footer>\n</mat-dialog-actions>\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedContentModule } from '../shared/shared.module';\n\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\nimport { ChangelogModalComponent } from './changelog-modal/changelog-modal.component';\nimport { ItemCreateUpdateModalComponent } from './item-modal/item-modal.component';\nimport { SelectItemModalComponent } from './select-item-modal/select-item-modal.component';\nimport { SystemLogModalComponent } from './system-log-modal/system-log-modal.component';\nimport { TriggerActionModalComponent } from './trigger-action-modal/trigger-action-modal.component';\nimport { TriggerConditionModalComponent } from './trigger-condition-modal/trigger-condition-modal.component';\nimport { ViewModuleStateModalComponent } from './view-module-state/view-module-state.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AuthSourceModalComponent } from './auth-source-modal/auth-source-modal.component';\nimport { ViewResponseModalComponent } from './view-response-modal/view-response-modal.component';\nimport { MetadataDetailsModalComponent } from './metadata-details-modal/metadata-details-modal.component';\nimport { BulkItemModalComponent } from './bulk-item-modal/bulk-item-modal.component';\nimport { CsvUploadComponent } from './bulk-item-modal/csv-upload/csv-upload.component';\nimport { MatchFieldsComponent } from './bulk-item-modal/match-fields/match-fields.component';\nimport { ListComponent } from './bulk-item-modal/list/list.component';\nimport { StatusListComponent } from './bulk-item-modal/status-list/status-list.component';\nimport { DuplicateModalComponent } from './duplicate-modal/duplicate-modal.component';\n\n\nconst OVERLAYS: Type<any>[] = [\n    ConfirmModalComponent,\n    ChangelogModalComponent,\n    ItemCreateUpdateModalComponent,\n    SelectItemModalComponent,\n    SystemLogModalComponent,\n    TriggerActionModalComponent,\n    TriggerConditionModalComponent,\n    ViewModuleStateModalComponent,\n    AuthSourceModalComponent,\n    ViewResponseModalComponent,\n    MetadataDetailsModalComponent,\n    BulkItemModalComponent,\n];\n\n@NgModule({\n    declarations: [\n        ...OVERLAYS,\n        CsvUploadComponent,\n        MatchFieldsComponent,\n        ListComponent,\n        StatusListComponent,\n        DuplicateModalComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SharedContentModule\n    ],\n    exports: [\n        ...OVERLAYS\n    ]\n})\nexport class SharedOverlaysModule {}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nexport interface SelectItemModalData {\n    service_name: string;\n}\n\n@Component({\n    selector: 'select-item-modal',\n    templateUrl: './select-item-modal.component.html',\n    styleUrls: ['./select-item-modal.component.scss']\n})\nexport class SelectItemModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether the item is being editing */\n    public edit: boolean;\n    /** Item to edit */\n    public item: any;\n    /** Whether the item request is being processed */\n    public loading: boolean;\n\n    constructor(\n        private _dialog: MatDialogRef<SelectItemModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: SelectItemModalData,\n        private _service: ApplicationService\n    ) {\n        super();\n    }\n\n    public get name(): string {\n        return this.service.name || this.service._name;\n    }\n\n    public get service() {\n        return this._service[this._data.service_name];\n    }\n\n    public ngOnInit(): void {\n        if (!this.service) {\n            this._dialog.close();\n        }\n    }\n\n    public submit() {\n        this.loading = true;\n        this.event.emit({ reason: 'action', metadata: this.item });\n    }\n}\n","<header>\n    <h3 mat-dialog-title>Add {{ name }}</h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'backoffice-cross' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <div class=\"content\">\n            <item-search-field [service]=\"service\" [(ngModel)]=\"item\"></item-search-field>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n    <button mat-button type=\"submit\" (tapped)=\"submit()\" [disabled]=\"!item\">Add</button>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <a-spinner circle-ring color=\"rgba(0,0,0, .54)\"></a-spinner>\n        </div>\n        <div class=\"text\">Processing request...</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { IEngineLogEntry } from 'src/app/services/data/logs.service';\n\nexport interface SystemLogModalData {\n    /** ID of the system to show the logs for */\n    sys_id: string;\n}\n\n@Component({\n    selector: 'system-log-modal',\n    templateUrl: './system-log-modal.component.html',\n    styleUrls: ['./system-log-modal.component.scss']\n})\nexport class SystemLogModalComponent extends BaseDirective implements OnInit {\n    /** ID of the system to get logs for */\n    public id: string;\n    /** List of the available log entries for the set system */\n    public logs: IEngineLogEntry[];\n    /** Whether the system's logs are loading */\n    public loading: boolean;\n    /**  */\n    public name: string;\n    /** Whether the modal is closing */\n    public closing: boolean;\n\n    constructor(\n        private _dialog: MatDialogRef<SystemLogModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: SystemLogModalData,\n        private _service: ApplicationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.id = this._data.sys_id;\n        if (this.id) {\n            this.loading = true;\n            this._service.SystemLogs.query({ limit: 500, id: this.id }).then(\n                (list: IEngineLogEntry[]) => {\n                    this.logs = list.sort((a, b) => b.created - a.created);\n                },\n                () => {\n                    this._dialog.close();\n                    this._service.notifyError('Error loading logs for system');\n                }\n            );\n        } else {\n            this._dialog.close();\n        }\n    }\n}\n","<header>\n    <h3 mat-dialog-title>System Logs</h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'backoffice-cross' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <table>\n            <thead>\n                <td>User</td>\n                <td>Date/Time</td>\n                <td></td>\n            </thead>\n            <tbody>\n                <tr class=\"item\" *ngFor=\"let item of logs\">\n                    <td>{{ item?.user?.name }}</td>\n                    <td>{{ item?.created_at | date }}</td>\n                    <td>{{ item?.installed_device }}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</mat-dialog-content>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <a-spinner circle-ring color=\"#000\"></a-spinner>\n            </div>\n            <div class=\"text\">Processing request...</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { generateTriggerActionForm } from 'src/app/shared/utilities/data/triggers.utilities';\nimport { EngineTrigger, EngineSystem, TriggerMailer, TriggerFunction } from '@placeos/ts-client';\nimport { FormGroup } from '@angular/forms';\n\nexport interface TriggerActionModalData {\n    /** Item to add/update the trigger on */\n    system: EngineSystem;\n    /** Trigger to add/update */\n    trigger: EngineTrigger;\n    /** Trigger Condition to edit */\n    action?: TriggerMailer | TriggerFunction;\n}\n\n@Component({\n    selector: 'trigger-action-modal',\n    templateUrl: './trigger-action-modal.template.html',\n    styleUrls: ['./trigger-action-modal.styles.scss']\n})\nexport class TriggerActionModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether actions are loading */\n    public loading: boolean;\n    /** Form fields for trigger condition */\n    public form: FormGroup;\n\n    /** Whether the triggers is new or not */\n    public get is_new(): boolean {\n        return !!this._data.action;\n    }\n\n    /** Template system to use for status variable bindings */\n    public get system(): EngineSystem {\n        return this._data.system;\n    }\n\n    /** Template system to use for status variable bindings */\n    public get trigger(): EngineTrigger {\n        return this._data.trigger;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<TriggerActionModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: TriggerActionModalData,\n        private _service: ApplicationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.form = generateTriggerActionForm(this._data.action).form;\n    }\n\n    public save() {\n        this.form.markAllAsTouched();\n        if (\n            (this.form.controls.action_type.value === 'emails' && !this.form.valid) ||\n            (this.form.controls.action_type.value === 'function' && !this.form.value.method_call)\n        ) {\n            return;\n        }\n        this.loading = true;\n        if (this.form.controls.action_type.value === 'emails') {\n            this.updateMailers();\n        } else {\n            this.updateFunctions();\n        }\n        this.trigger.save().then(\n            item => {\n                this.event.emit({ reason: 'done', metadata: { trigger: item } });\n                this._service.notifySuccess(`Successfully ${this.is_new ? 'added' : 'updated'} condition to trigger`);\n                this._dialog.close();\n            },\n            err => {\n                this.trigger.clearPendingChanges();\n                this.loading = false;\n                this._service.notifyError(\n                    `Error ${this.is_new ? 'adding' : 'updating'} condition to trigger. Error: ${JSON.stringify(err.response || err.message || err)}`\n                );\n            }\n        );\n    }\n\n    private updateMailers() {\n        const mailers = this.trigger.actions.mailers;\n        const new_mailer = {\n            emails: this.form.value.emails,\n            content: this.form.value.content\n        };\n        if (this._data.action) {\n            const old_mailer = JSON.stringify(this._data.action);\n            const index = mailers.findIndex(\n                a_mailer => JSON.stringify(a_mailer) === old_mailer\n            );\n            mailers.splice(index, 1, new_mailer);\n        } else {\n            mailers.push(new_mailer);\n        }\n        this.trigger.storePendingChange('actions', { ...this.trigger.actions, mailers });\n    }\n\n    private updateFunctions() {\n        const functions = this.trigger.actions.functions;\n        if (this._data.action) {\n            const old_function = JSON.stringify(this._data.action);\n            const index = functions.findIndex(fn => JSON.stringify(fn) === old_function);\n            functions.splice(index, 1, this.form.value.method_call);\n        } else {\n            functions.push(this.form.value.method_call);\n        }\n        this.trigger.storePendingChange('actions', { ...this.trigger.actions, functions });\n    }\n}\n","<header>\n    <h3 mat-dialog-title>{{is_new ? 'Edit' : 'New'}} Trigger Action</h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'backoffice-cross' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <trigger-action-form [form]=\"form\" [system]=\"system\"></trigger-action-form>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n    <button mat-button type=\"submit\" (tapped)=\"save()\">\n        {{ is_new ? 'Save' : 'Add' }}\n    </button>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <a-spinner circle-ring color=\"#000\"></a-spinner>\n            </div>\n            <div class=\"text\">Processing request...</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport {\n    EngineSystem,\n    EngineTrigger,\n    TriggerComparison,\n    TriggerTimeCondition\n} from '@placeos/ts-client';\n\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nimport { generateTriggerConditionForm } from 'src/app/shared/utilities/data/triggers.utilities';\n\nexport interface TriggerConditionData {\n    /** Item to add/update the trigger on */\n    system: EngineSystem;\n    /** Trigger to add/update */\n    trigger: EngineTrigger;\n    /** Trigger Condition to edit */\n    condition?: TriggerComparison | TriggerTimeCondition;\n}\n\n@Component({\n    selector: 'trigger-condition-modal',\n    templateUrl: './trigger-condition-modal.template.html',\n    styleUrls: ['./trigger-condition-modal.styles.scss']\n})\nexport class TriggerConditionModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether actions are loading */\n    public loading: boolean;\n    /** Form fields for trigger condition */\n    public form: FormGroup;\n\n    /** Whether the triggers is new or not */\n    public get is_new(): boolean {\n        return !!this._data.condition;\n    }\n\n    /** Template system to use for status variable bindings */\n    public get system(): EngineSystem {\n        return this._data.system;\n    }\n\n    /** Template system to use for status variable bindings */\n    public get trigger(): EngineTrigger {\n        return this._data.trigger;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<TriggerConditionModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: TriggerConditionData,\n        private _service: ApplicationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.form = generateTriggerConditionForm(this._data.condition).form;\n    }\n\n    public save() {\n        this.form.markAllAsTouched();\n        if (!this.form.valid) {\n            return;\n        }\n        this.loading = true;\n        if (this.form.controls.condition_type.value === 'compare') {\n            this.updateComparisons();\n        } else {\n            this.updateTimeDependents();\n        }\n        this.trigger.save().then(\n            item => {\n                this.event.emit({ reason: 'done', metadata: { trigger: item } });\n                this._service.notifySuccess(`Successfully ${this.is_new ? 'added' : 'updated'} condition to trigger`);\n                this._dialog.close();\n            },\n            err => {\n                this.trigger.clearPendingChanges();\n                this.loading = false;\n                this._service.notifyError(`Error ${this.is_new ? 'adding' : 'updating'} condition to trigger. Error: ${JSON.stringify(err.response || err.message || err)}`);\n            }\n        );\n    }\n\n    /**\n     * Update the comparison list by replace an exisiting item or add a new item\n     */\n    private updateComparisons() {\n        const old_values = [...this.trigger.conditions.comparisons];\n        const new_value: TriggerComparison = {\n            left: this.form.controls.left.value,\n            operator: this.form.controls.operator.value,\n            right: this.form.controls.right.value\n        };\n        if (this._data.condition) {\n            const old_value = JSON.stringify(this._data.condition);\n            const index = old_values.findIndex(cmp => JSON.stringify(cmp) === old_value);\n            if (index >= 0) {\n                old_values.splice(index, 1, new_value);\n            }\n        } else {\n            old_values.push(new_value);\n        }\n        const updated_conditions = {\n            ...this.trigger.conditions,\n            comparisons: old_values\n        };\n        this.trigger.storePendingChange('conditions', updated_conditions);\n    }\n\n\n    /**\n     * Update the time dependent list by replace an exisiting item or add a new item\n     */\n    private updateTimeDependents() {\n        const old_values = [...this.trigger.conditions.time_dependents] || [];\n        const new_value = {\n            type: this.form.controls.time_type.value,\n            time: +(this.form.controls.time.value / 1000).toFixed(0),\n            cron: this.form.controls.cron.value\n        };\n        new_value.cron ? delete new_value.time : delete new_value.cron;\n        if (this._data.condition) {\n            const old_value = JSON.stringify(this._data.condition);\n            const index = old_values.findIndex(time => JSON.stringify(time) === old_value);\n            if (index >= 0) {\n                old_values.splice(index, 1, new_value);\n            }\n        } else {\n            old_values.push(new_value);\n        }\n        const updated_conditions = {\n            ...this.trigger.conditions,\n            time_dependents: old_values\n        };\n        this.trigger.storePendingChange('conditions', updated_conditions);\n    }\n}\n","<header>\n    <h3 mat-dialog-title>{{is_new ? 'Edit' : 'New'}} Trigger Condition</h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'backoffice-cross' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <trigger-condition-form [form]=\"form\" [system]=\"system\"></trigger-condition-form>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n    <button mat-button type=\"submit\" (tapped)=\"save()\">\n        {{ is_new ? 'Save' : 'Add' }}\n    </button>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <a-spinner circle-ring color=\"#000\"></a-spinner>\n            </div>\n            <div class=\"text\">Processing request...</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { HashMap, EngineModule, EngineSystem } from '@placeos/ts-client';\n\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nexport interface ModuleStateModalData {\n    /** System Data to show the details for */\n    system: EngineSystem;\n    /** Module to expose the state of */\n    module: EngineModule;\n    /** Modules associated with the system */\n    devices: EngineModule[];\n}\n\n@Component({\n    selector: 'view-module-state-modal',\n    templateUrl: './view-module-state.template.html',\n    styleUrls: ['./view-module-state.styles.scss'],\n})\nexport class ViewModuleStateModalComponent extends BaseDirective implements OnInit {\n    /** Current state of the selected module */\n    public state: string;\n    /** Whether the module state is being loaded */\n    public loading: boolean;\n    /** Whether the modal is closing */\n    public closing: boolean;\n    /** Mapping of devices to the module bindings */\n    public device_classes: HashMap<string> = {};\n\n    /** System of the selected module */\n    public get system(): EngineSystem {\n        return this._data.system;\n    }\n\n    /** Module to view the state of */\n    public get module(): EngineModule {\n        return this._data.module;\n    }\n\n    /** Modules associated with the system */\n    public get devices(): EngineModule[] {\n        return this._data.devices || [];\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<ViewModuleStateModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ModuleStateModalData,\n        private _service: ApplicationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.generateModuleBindings();\n        this.updateState();\n    }\n\n    /**\n     * Generate the binding modules for each device\n     */\n    private generateModuleBindings() {\n        const counter: HashMap<number> = {};\n        for (const device of this.devices) {\n            const name = device.custom_name || device.name || 'Blank';\n            if (!counter[name]) {\n                counter[name] = 0;\n            }\n            this.device_classes[device.id] = `${name}_${++counter[name]}`;\n        }\n    }\n\n    /** Update the state of the module */\n    public updateState() {\n        if (!this.system || !this.module) {\n            return;\n        }\n        const class_name = this.device_classes[this.module.id];\n        if (!class_name) {\n            return;\n        }\n        this.loading = true;\n        const class_parts = class_name.split('_');\n        this._service.Systems.state(this.system.id, class_parts[0], +class_parts[1]).then(\n            (state) => {\n                const pre_state =\n                typeof state === 'string'\n                    ? JSON.parse(state)\n                    : state;\n                Object.keys(pre_state).forEach(key => {\n                    pre_state[key] = JSON.parse(pre_state[key]);\n                });\n                this.state = JSON.stringify(pre_state, undefined, 4);\n                this.loading = false;\n            },\n            (err) => {\n                this._service.notifyError(JSON.stringify(err.response || err.message || err));\n                this.loading = false;\n            }\n        );\n    }\n\n    /**\n     * Close the modal\n     */\n    public close() {\n        this._dialog.close();\n    }\n}\n","<header>\n    <h3 mat-dialog-title>\n        Module State - {{module?.custom_name || module?.name}}</h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'backoffice-cross' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <div class=\"field\">\n            <label>System:</label>\n            <div class=\"value\">{{system?.name}}</div>\n        </div>\n        <div class=\"field\">\n            <label>Module:</label>\n            <div class=\"value\">\n                {{ device_classes[module?.id] }}\n            </div>\n        </div>\n        <button mat-button (tapped)=\"updateState()\">Update state</button>\n        <div class=\"settings\">\n            <settings-form-field [ngModel]=\"state\" [readonly]=\"true\"></settings-form-field>\n        </div>\n    </div>\n</mat-dialog-content>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <a-spinner circle-ring color=\"#000\"></a-spinner>\n            </div>\n            <div class=\"text\">Loading state...</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nexport interface ViewResponseModalData {\n    content: any;\n}\n\n@Component({\n    selector: 'app-view-response-modal',\n    templateUrl: './view-response-modal.component.html',\n    styleUrls: ['./view-response-modal.component.scss']\n})\nexport class ViewResponseModalComponent {\n\n    public get content_string(): string {\n        return typeof this._data.content === 'object'\n            ? JSON.stringify(this._data.content, undefined, 4)\n            : this._data.content;\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ViewResponseModalData) {}\n}\n","<header>\n    <div class=\"text\">Exec Request Results</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <settings-form-field [ngModel]=\"content_string\" [readonly]=\"true\"></settings-form-field>\n</mat-dialog-content>\n","import { Injectable, ApplicationRef, NgZone } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { SwUpdate } from '@angular/service-worker';\nimport { first } from 'rxjs/operators';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { ComposerService } from '@placeos/composer';\nimport { PlaceOSOptions } from '@placeos/ts-client';\nimport { GoogleAnalyticsService } from '@acaprojects/ngx-google-analytics';\n\nimport { Observable, BehaviorSubject, Subject, Subscription } from 'rxjs';\n\nimport { BaseClass } from '../shared/globals/base.class';\nimport { SettingsService, ConsoleStream } from './settings.service';\nimport { HashMap } from '../shared/utilities/types.utilities';\n\nimport { HotkeysService } from './hotkeys.service';\nimport { BackofficeCommentsService } from './data/comments.service';\nimport { BackofficeLogsService } from './data/logs.service';\nimport { BackofficeSearchService } from './data/search.service';\nimport { BackofficeStatsService } from './data/stats.service';\nimport { BackofficeSystemLogsService } from './data/system_logs.service';\nimport { BackofficeUsersService } from './data/users.service';\nimport { ApplicationIcon, ComposerOptions } from '../shared/utilities/settings.interfaces';\n\nimport * as Sentry from '@sentry/browser';\n\ndeclare global {\n    interface Window {\n        application: ApplicationService;\n        mock: {\n            enabled: boolean;\n            backend: any;\n        };\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApplicationService extends BaseClass {\n    /** List of previous routes for return navigation */\n    private _route_trail: string[] = [];\n    /** Map of state variables for Service */\n    protected _subjects: HashMap<BehaviorSubject<any> | Subject<any>> = {};\n    /** Map of observables for state variables */\n    protected _observers: HashMap<Observable<any>> = {};\n    /** Whether the application has stablised */\n    private _stable: boolean;\n\n    /** Whether the application has stablised */\n    public get is_stable(): boolean {\n        return this._stable || false;\n    }\n\n    constructor(\n        private _app_ref: ApplicationRef,\n        private _zone: NgZone,\n        private _title: Title,\n        private _router: Router,\n        private _cache: SwUpdate,\n        private _settings: SettingsService,\n        private _composer: ComposerService,\n        private _analytics: GoogleAnalyticsService,\n        private _hotkeys: HotkeysService,\n        private _engine_comments: BackofficeCommentsService,\n        private _engine_logs: BackofficeLogsService,\n        private _engine_search: BackofficeSearchService,\n        private _engine_stats: BackofficeStatsService,\n        private _engine_system_logs: BackofficeSystemLogsService,\n        private _users: BackofficeUsersService,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n        this._engine_comments.parent = this._engine_logs.parent = this._engine_search.parent =\n            this._engine_stats.parent = this._engine_system_logs.parent = this._users.parent = this;\n        this.set('system', null);\n        this._app_ref.isStable.pipe(first(_ => _)).subscribe(() => {\n            this._zone.run(() => {\n                this._stable = true;\n                this.log('APP', `Application has stablised.`);\n                this.setupCache();\n                this.waitForSettings();\n            });\n        });\n    }\n\n    /** Analytics service */\n    public get Analytics() {\n        return this._analytics;\n    }\n\n    /** Hotkeys service */\n    public get Hotkeys() {\n        return this._hotkeys;\n    }\n\n    /** Users service */\n    public get Users() {\n        return this._users;\n    }\n\n    /** Engine Applications service */\n    public get Applications() {\n        return this._composer.applications;\n    }\n\n    /** Engine Auth Sources service */\n    public get OAuthSources() {\n        return this._composer.oauth_sources;\n    }\n\n    /** Engine Auth Sources service */\n    public get SAMLAuthSources() {\n        return this._composer.saml_sources;\n    }\n\n    /** Engine Auth Sources service */\n    public get LDAPAuthSources() {\n        return this._composer.ldap_sources;\n    }\n\n    /** Comments service */\n    public get Comments() {\n        return this._engine_comments;\n    }\n\n    /** Engine Domains service */\n    public get Domains() {\n        return this._composer.domains;\n    }\n\n    /** Engine Cluster service */\n    public get Clusters() {\n        return this._composer.clusters;\n    }\n\n    /** Drivers service */\n    public get Drivers() {\n        return this._composer.drivers;\n    }\n\n    /** Engine Logs service */\n    public get Logs() {\n        return this._engine_logs;\n    }\n\n    /** Modules service */\n    public get Modules() {\n        return this._composer.modules;\n    }\n\n    /** Engine Search service */\n    public get Search() {\n        return this._engine_search;\n    }\n\n    public get Repositories() {\n        return this._composer.repositories;\n    }\n\n    /** Stats service */\n    public get Stats() {\n        return this._engine_stats;\n    }\n\n    /** Engien System Logs service */\n    public get SystemLogs() {\n        return this._engine_system_logs;\n    }\n\n    /** Systems service */\n    public get Systems() {\n        return this._composer.systems;\n    }\n\n    /** Triggers service */\n    public get Triggers() {\n        return this._composer.triggers;\n    }\n\n    /** Zones service */\n    public get Zones() {\n        return this._composer.zones;\n    }\n\n    public get EngineSettings() {\n        return this._composer.settings;\n    }\n\n    /**\n     * Get a setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        return this._settings.get(key);\n    }\n\n    /** Name of the application */\n    public get name() {\n        return this._settings.app_name;\n    }\n\n    /**\n     * Title of the page\n     */\n    public set title(value: string) {\n        const title_suffix = this.setting('app.title');\n        this._title.setTitle(`${value ? value + ' | ' : ''}${title_suffix || 'PlaceOS'}`);\n    }\n\n    /**\n     * Title of the page\n     */\n    public get title(): string {\n        return this._title.getTitle();\n    }\n\n    /** Root API Endpoint */\n    public get endpoint() {\n        return this._composer.auth.api_endpoint;\n    }\n\n    /** Root API Endpoint for engine */\n    public get engine_endpoint() {\n        return this._composer.auth.api_endpoint;\n    }\n\n    /**\n     * Create notification popup\n     * @param type CSS Class to add to the notification\n     * @param message Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     * @param icon Icon to render to the left of the notification message\n     */\n    public notify(\n        type: string,\n        message: string,\n        action: string = 'OK',\n        on_action?: () => void,\n        icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'info'\n        },\n        duration: number = 8000\n    ): void {\n        const snackbar_ref = this._snackbar.open(message, action, {\n            panelClass: [type],\n            duration\n        });\n        this.subscription(\n            'snackbar_close',\n            snackbar_ref.afterDismissed().subscribe(() => {\n                this.unsub('snackbar_close');\n                this.unsub('notify');\n            })\n        );\n        if (action) {\n            on_action = on_action || (() => snackbar_ref.dismiss());\n            this.subscription(\n                'notify',\n                snackbar_ref.onAction().subscribe(() => on_action())\n            );\n        }\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifySuccess(\n        msg: string,\n        action?: string,\n        on_action?: () => void,\n        duration: number = 8000\n    ): void {\n        const icon: ApplicationIcon = { type: 'icon', class: 'material-icons', content: 'done' };\n        console.debug('[APP][USER_ACTION]', msg);\n        this.notify('success', msg, action, on_action, icon, duration);\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyError(\n        msg: string,\n        action?: string,\n        on_action?: () => void,\n        duration: number = 8000\n    ): void {\n        const icon: ApplicationIcon = { type: 'icon', class: 'material-icons', content: 'error' };\n        console.error('[APP][USER_ACTION]', msg);\n        this.notify('error', msg, action, on_action, icon, duration);\n    }\n\n    /**\n     * Create info notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyWarn(\n        msg: string,\n        action?: string,\n        on_action?: () => void,\n        duration: number = 8000\n    ): void {\n        const icon: ApplicationIcon = { type: 'icon', class: 'material-icons', content: 'warning' };\n        console.warn('[APP][USER_ACTION]', msg);\n        this.notify('warn', msg, action, on_action, icon, duration);\n    }\n\n    /**\n     * Create info notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyInfo(\n        msg: string,\n        action?: string,\n        on_action?: () => void,\n        duration: number = 8000\n    ): void {\n        const icon: ApplicationIcon = { type: 'icon', class: 'material-icons', content: 'info' };\n        console.info('[APP][USER_ACTION]', msg);\n        this.notify('info', msg, action, on_action, icon, duration);\n    }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(\n        type: string,\n        msg: string,\n        args?: any,\n        stream: ConsoleStream = 'debug',\n        force: boolean = false\n    ): void {\n        this._settings.log(type, msg, args, stream, force);\n    }\n\n    /**\n     * Navigate to the given path\n     * @param path Path or array of path parts\n     * @param query Key value pairs to add to the URL as query parameters\n     */\n    public navigate(path: string | string[], query?: HashMap): void {\n        const route = path instanceof Array ? [...path] : [path];\n        this._route_trail.push(this._router.url);\n        this._router.navigate(route, { queryParams: query });\n    }\n\n    /**\n     * Navigate to the previous location in the route trail\n     */\n    public navigateBack(): void {\n        if (this._route_trail && this._route_trail.length > 0) {\n            const path = this._route_trail.pop();\n            this._router.navigate([path]);\n        } else {\n            this._router.navigate(['']);\n        }\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        return this._observers[name] ? this._observers[name] : null;\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    public set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /** Wait for settings to be initialised before setting up the application */\n    private waitForSettings() {\n        // Wait until the settings have loaded before initialising\n        this._settings.initialised.pipe(first(_ => _)).subscribe((setup) => {\n            if (setup) {\n                this.init();\n            }\n        });\n    }\n\n    /**\n     * Initialise application services\n     */\n    private init(): void {\n        this.setupComposer();\n        // Setup analytics\n        this._analytics.enabled = !!this.setting('app.analytics.enabled');\n        if (this._analytics.enabled) {\n            this._analytics.load(this.setting('app.analytics.tracking_id'));\n        }\n        this._composer.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.set('ready', true);\n            const dsn =\n                this._composer.auth.authority.sentry_dsn || this.setting('app.sentry_dsn');\n            if (dsn) {\n                Sentry.init({ dsn });\n            }\n            this.loadActiveUser();\n            this._initialised.next(true);\n        });\n        // Add service to window if in debug mode\n        if (window.debug) {\n            window.application = this;\n        }\n    }\n\n    /**\n     * Initialise the composer library comms\n     */\n    private setupComposer(): void {\n        this.log('SYSTEM', 'Setup up composer...');\n        // Get application settings\n        const settings: ComposerOptions = this.setting('composer') || {};\n        const protocol = settings.protocol || location.protocol;\n        const host = settings.domain || location.hostname;\n        const port = settings.port || location.port;\n        const url = settings.use_domain ? `${protocol}//${host}:${port}` : location.origin;\n        const route = settings.route || '';\n        const mock = this.setting('mock');\n        const login_locally = location.search.indexOf('login=true') >= 0;\n        // Generate configuration object\n        const config: PlaceOSOptions = {\n            scope: 'public',\n            host: `${host}:${port}`,\n            auth_uri: `${url}/auth/oauth/authorize`,\n            token_uri: `${url}/auth/token`,\n            redirect_uri: `${location.origin}${route}/oauth-resp.html`,\n            handle_login: !settings.local_login && !login_locally,\n            mock\n        };\n        this._composer.setup(config);\n    }\n\n    private loadActiveUser() {\n        this.Users.load();\n    }\n\n    /**\n     * Setup handler for cache change events\n     */\n    private setupCache() {\n        this.unsub('app_stable');\n        this.log('CACHE', `Initialising cache...`);\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Listening to cache events...`);\n            this._cache.activateUpdate();\n            this.subscription('cache_update', this._cache.available.subscribe((event) => {\n                const current = `current version is ${event.current.hash}`;\n                const available = `available version is ${event.available.hash}`;\n                this.log('CACHE', `Update available: ${current} ${available}`);\n                this.activateUpdate()\n            }));\n            setInterval(() => {\n                this.log('CACHE', `Checking for updates...`);\n                this._cache.checkForUpdate();\n            }, 5 * 60 * 1000);\n        }\n    }\n\n    /**\n     * Update the cache and reload the page\n     */\n    private activateUpdate() {\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Activating changes to the cache...`);\n            this._cache.activateUpdate().then(() => {\n                this.notifyInfo('Newer version of the application is available', 'Refresh', () =>\n                    location.reload(true)\n                );\n            });\n        }\n    }\n}\n","import { BehaviorSubject, Observable, Subscription, Subscriber, Subject } from 'rxjs';\nimport { EngineHttpClient } from '@placeos/ts-client';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass } from '../../shared/globals/base.class';\nimport { ApplicationService } from '../app.service';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { toQueryString } from '../../shared/utilities/api.utilities';\n\nexport interface IEngineResponse {\n    results: HashMap[];\n    total: number;\n}\n\nexport class BaseAPIService<T extends {}> extends BaseClass {\n    /** Application service */\n    public parent: ApplicationService;\n    /** List of available items */\n    public readonly listing = new BehaviorSubject<T[]>([]);\n    /** Display name of the service */\n    protected _name: string;\n    /** Name of a single item from the service */\n    protected _singular: string;\n    /** API Route of the service */\n    protected _api_route: string;\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Map of poll subscribers for API endpoints */\n    protected _subscribers: { [key: string]: Subscriber<any> } = {};\n    /** Map of promises for Service */\n    protected _promises: { [key: string]: Promise<any> } = {};\n    /** Comparison function for service items */\n    protected _compare: (a: T, b: T) => boolean = (a, b) =>\n        a === b || (a as any).id === (b as any).id;\n    /** Default filter function for list method */\n    protected _list_filter: (a: T) => boolean = a => !!a;\n\n    constructor(protected http: EngineHttpClient) {\n        super();\n        this._name = 'base';\n        this._singular = 'base';\n        this._api_route = 'base';\n        this.set('list', []);\n    }\n\n    /**\n     * Initailise service\n     */\n    public init() {\n        if (!this.parent) {\n            return this.timeout('init', () => this.init());\n        }\n        this.parent.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.load().then(_ => this._initialised.next(true));\n        });\n    }\n\n    /**\n     * Get API route for the service\n     * @param engine Whether endpoint is using the application API or engine API\n     */\n    public route(engine: boolean = false) {\n        const endpoint = this.parent\n            ? engine\n                ? this.parent.engine_endpoint\n                : this.parent.endpoint\n            : '/api';\n        return `${endpoint}${this._api_route}`;\n    }\n    /** API Route of the service */\n    public get api_route() {\n        return this._api_route;\n    }\n\n    /**\n     * Get a service related setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.parent ? this.parent.setting(`app.${this._name.toLowerCase()}.${key}`) : null;\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string, next: (_: U) => void): Subscription {\n        return this._observers[name] ? this._observers[name].subscribe(next) : null;\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    protected set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /**\n     * Get list of loaded items\n     * @param filterFn Function for filtering the list\n     */\n    public list(filterFn: (a: T) => boolean = this._list_filter): T[] {\n        const list = this.get('list') || [];\n        return list.reduce((a, i) => {\n            if (filterFn(i)) {\n                a.push(i);\n            }\n            return a;\n        }, []);\n    }\n\n    /**\n     * Get item with the given id from the loaded items\n     * @param id ID of the item\n     */\n    public item(id: string): T {\n        const list = this.get('list') || [];\n        return list.find(i => i.id === id || i.email === id);\n    }\n\n    /**\n     * Query the index of the API route associated with this service\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public query(query_params: HashMap = { update_list: true }): Promise<T[] | HashMap[]> {\n        let engine = false;\n        let cache = 1000;\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n            cache = query_params.cache || 1000;\n            delete query_params.cache;\n        }\n        const query = toQueryString(query_params);\n        const key = `query|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n                let result: T[] | HashMap[] = [];\n                this.http.get(url).subscribe(\n                    (d: IEngineResponse | HashMap[]) => {\n                        result =\n                            d && d instanceof Array\n                                ? d.map(i => this.process(i))\n                                : d && !(d instanceof Array) && d.results\n                                ? (d.results as HashMap[])\n                                : [];\n                    },\n                    e => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        if (\n                            (!query || (query_params && query_params.update_list)) &&\n                            result.length > 0 &&\n                            result[0] instanceof Object\n                        ) {\n                            this.set('list', this.updateList(this.get('list'), result as T[]));\n                            this.listing.next(this.get('list') || []);\n                        }\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), cache);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Query the API route for a sepecific item\n     * @param id ID of the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public show(id: string, query_params: HashMap = {}): Promise<T> {\n        let engine = false;\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n        }\n        const query = toQueryString(query_params);\n        const key = `show|${id}|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.get(url).subscribe(\n                    d => (result = this.process(d)),\n                    e => {\n                        reject(e);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Open modal for new item\n     */\n    public openNewModal(prefill?: { [name: string]: any }): Promise<T> {\n        return new Promise((resolve, reject) => {\n            // this.parent.Overlay.open('edit-item', { data: { service: this, item: prefill } }, (e) => {\n            //     if (e.type === 'finish') {\n            //         resolve(e.data.item as T);\n            //     } else {\n            //         reject();\n            //     }\n            // });\n        });\n    }\n\n    /**\n     * Make post request for a new item to the service\n     * @param form_data Data to post to the server\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        if (!this._promises.new_item) {\n            this._promises.new_item = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.post(url, form_data).subscribe(\n                    d => (result = this.process(d)),\n                    e => {\n                        reject(e);\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-failed`);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set('list', this.updateList(this.get('list'), [result]));\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-success`);\n                        this._promises.new_item = null;\n                    }\n                );\n            });\n        }\n        return this._promises.new_item;\n    }\n\n    /**\n     * Perform API task for the given item ID\n     * @param id ID of the item\n     * @param task_name Name of the task\n     * @param form_data Map of data to pass to the API\n     */\n    public task<U = any>(id: string, task_name: string, form_data: HashMap = {}): Promise<U> {\n        const query = toQueryString(form_data);\n        const key = `task|${id}|${task_name}|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<U>((resolve, reject) => {\n                const post_data = { ...form_data, id, _task: task_name };\n                const url = `${this.route(form_data.engine)}/${id}/${task_name}`;\n                let result = null;\n                this.http.post(url, post_data).subscribe(\n                    d => (result = d),\n                    e => {\n                        reject(e);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-failed`,\n                            id\n                        );\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result as U);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-success`,\n                            id\n                        );\n                        this.timeout(key, () => (this._promises[key] = null), 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Setup a poller for an API endpoint\n     * @param id Show request ID. Leave blank to poll on the query endpoint\n     * @param query_params Map of query paramaters to add to the polled URL\n     * @param delay Delay between each poll event\n     */\n    public poll(\n        id?: string,\n        query_params: HashMap = {},\n        delay: number = 5000\n    ): Observable<T | T[]> {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        this.stopPoll(id, query_params);\n        this._subjects[key] = new Subject<T | T[]>();\n        this._observers[key] = this._subjects[key].asObservable();\n        const sub = this._subjects[key];\n        const query = { ...(query_params || {}), _poll: true };\n        if (id) {\n            this.show(id, query).then(\n                d => sub.next(d),\n                e => sub.error(e)\n            );\n            this.interval(\n                key,\n                () => {\n                    this.show(id, query).then(\n                        d => sub.next(d),\n                        e => sub.error(e)\n                    );\n                },\n                delay\n            );\n        } else {\n            this.query(query).then(\n                d => sub.next(d),\n                e => sub.error(e)\n            );\n            this.interval(\n                key,\n                () => {\n                    this.query(query).then(\n                        d => sub.next(d),\n                        e => sub.error(e)\n                    );\n                },\n                delay\n            );\n        }\n        return this._observers[key];\n    }\n\n    /**\n     * Destroy poller\n     * @param id ID of the polling event\n     * @param query_params Associtated query parameters of the poll request\n     */\n    public stopPoll(id?: string, query_params: HashMap = {}) {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        if (this._subjects[key]) {\n            this._subjects[key].complete();\n            this._subjects[key] = null;\n            this._observers[key] = null;\n        }\n    }\n\n    /**\n     * Make put request for changes to the item with the given id\n     * @param id ID of the item being updated\n     * @param form_data New values for the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        const key = `update|${id}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.put(url, form_data).subscribe(\n                    d => (result = this.process(d)),\n                    e => {\n                        reject(e);\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set(\n                            'list',\n                            this.updateList(this.removeItem(this.get('list'), { id } as any), [\n                                result\n                            ])\n                        );\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-success`, id);\n                        this._promises[key] = null;\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make delete request for the given item\n     * @param id ID of item\n     */\n    public delete(id: string): Promise<void> {\n        const key = `delete|${id}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                const url = `${this.route()}/${id}`;\n                this.http.delete(url).subscribe(\n                    _ => null,\n                    e => reject(e),\n                    () => {\n                        this.set('list', this.removeItem(this.get('list'), { id } as any));\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Add new API item from another service or API class\n     * @param id ID of the item/or service adding the new item\n     * @param data Raw API data for the new item\n     * @param type Adder type\n     */\n    public addFrom(\n        id: string,\n        data: HashMap,\n        type: 'class' | 'service' | 'other' = 'other'\n    ): string {\n        const new_item = this.process(data);\n        this.set('list', this.updateList(this.get('list'), [new_item]));\n        return (new_item as any).id;\n    }\n\n    /**\n     * Remove items with the given IDs from the list\n     * @param id ID of the item/or service remove the list of items\n     * @param remove_ids List of item IDs to remove\n     * @param type Remover type\n     */\n    public removeFrom(\n        id: string,\n        remove_ids: string[],\n        type: 'class' | 'service' | 'other' = 'other'\n    ) {}\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(): Promise<void> {\n        return new Promise<void>(resolve => {\n            resolve();\n        });\n    }\n\n    /**\n     * Post analytics event for this service\n     * @param action Name of the action to post\n     */\n    protected analyticsEvent(action: string, label?: string) {\n        if (this.parent && this.parent.Analytics) {\n            this.parent.Analytics.event(\n                this._name,\n                `${this.parent.name.toLowerCase()}-${action}`,\n                label\n            );\n        }\n    }\n\n    /**\n     * Convert raw API data into a valid API Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_item: HashMap): T {\n        return raw_item as T;\n    }\n\n    /**\n     * Update recorded list of items\n     * @param old_list Old list of items\n     * @param list List of updated items\n     * @param compareFn Function to compare items to remove duplicates\n     */\n    protected updateList(\n        old_list: T[],\n        list: T[],\n        compareFn: (a: T, b: T) => boolean = this._compare\n    ): T[] {\n        if (!list || list.length === 0) {\n            return old_list;\n        }\n        const new_list: T[] = [];\n        const mixed_list = [...list, ...old_list];\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        for (const item of mixed_list) {\n            const found = new_list.find(i => compareFn(i, item));\n            if (!found) {\n                new_list.push(item);\n            }\n        }\n        return new_list;\n    }\n\n    /**\n     * Remove the given item from the given list\n     * @param list List of items\n     * @param item Item to remove\n     * @param compareFn Function to compare items\n     */\n    protected removeItem(list: T[], item: T, compareFn?: (a: T, b: T) => boolean) {\n        const new_list = [];\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        list.forEach(i => (compareFn(item, i) ? null : new_list.push(i)));\n        return new_list;\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { EngineUser } from '@placeos/ts-client';\n\nimport { BaseAPIService } from './base.service';\nimport { ComposerService } from '@placeos/composer';\n\nexport interface IComment {\n    id: string;\n    channel_id: string;\n    user_id: string;    // ACA User ID\n    user: EngineUser;\n    master_id: string;  // ID of master object\n    reply_to_id: string;\n    replies: IComment[];\n    name: string;       // User Staff Code\n    description: string;\n    other: any;\n    likes: string[];\n    dislikes: string[];\n    created_at: number;\n    updated_at: number;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BackofficeCommentsService extends BaseAPIService<IComment> {\n\n    constructor(private _composer: ComposerService) {\n        super(undefined);\n        const sub = this._composer.initialised.subscribe((state) => {\n            if (state) {\n                this.http = this._composer.http;\n                sub.unsubscribe();\n            }\n        });\n    }\n\n    /**\n     * Task for adding the like state to comment\n     * @param id ID of the comment to like\n     * @param fields Query parameters\n     */\n    public like(id: string, fields?: { name: string, [fields: string]: any }) {\n        return this.task(id, 'like', fields);\n    }\n\n    /**\n     * Task for removing like state on the comment\n     * @param id ID of the comment to dislike\n     * @param fields Query parameters\n     */\n    public dislike(id: string, fields?: { name: string, [fields: string]: any }) {\n        return this.task(id, 'dislike', fields);\n    }\n\n    /**\n     * Task for removing like state on the comment\n     * @param id ID of the comment to dislike\n     * @param fields Query parameters\n     */\n    public removeVote(id: string, fields?: { name: string, [fields: string]: any }) {\n        return this.task(id, 'clear', fields);\n    }\n\n    /**\n     * Process list data for returned items\n     * @param list Raw item data from server\n     */\n    protected processList(list: any[]) {\n        const output_list = list.map(i => this.process(i));\n        this.processReplies(output_list);\n        return output_list;\n    }\n\n    /**\n     * Convert raw comment dat into local format\n     * @param cmt Raw comment data\n     */\n    protected process(cmt: any): IComment {\n        const comment: IComment = {\n            id: cmt.id,\n            channel_id: cmt.channel_id,\n            user_id: cmt.user_id,\n            user: null,\n            master_id: cmt.master_id,\n            reply_to_id: cmt.in_reply_to_id,\n            replies: [],\n            name: cmt.name,\n            description: cmt.description,\n            likes: cmt.likes,\n            other: {},\n            dislikes: cmt.dislikes,\n            created_at: cmt.created_at,\n            updated_at: cmt.updated_at,\n        };\n        if (comment.description[0] === '{') {\n            comment.other = JSON.parse(comment.description);\n            if (comment.other) {\n                comment.description = comment.other.comment;\n            }\n        }\n        this.parent.Users.query({ q: cmt.name }).then((list) => {\n            comment.user = list[0] || new EngineUser(cmt);\n        }, (err) => comment.user = new EngineUser(cmt));\n        return comment;\n    }\n\n    /**\n     * Link associated comments together\n     * @param cmt_list Array of comments\n     */\n    private processReplies(cmt_list: IComment[]) {\n        for (const i of cmt_list) {\n            if (i.reply_to_id) {\n                const id = i.reply_to_id;\n                for (const cmt of cmt_list) {\n                    if (cmt.id === id) {\n                        cmt.replies.push(i);\n                        break;\n                    }\n                }\n            }\n        }\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\nimport { EngineSystem, EngineUser } from '@placeos/ts-client';\n\nimport { BaseAPIService } from './base.service';\n\nimport * as dayjs from 'dayjs';\n\nexport interface IEngineLogEntry {\n    id: string;\n    name: string;\n    notes?: string;\n    suspected?: boolean;\n    persisted?: boolean;\n    installed_device?: boolean;\n    ip?: string;\n    user_id?: string;\n    user?: EngineUser;\n    system_id?: string;\n    systems?: EngineSystem[];\n    display?: any;\n    created: number;\n    last_checked: number;\n    ended: number;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BackofficeLogsService extends BaseAPIService<IEngineLogEntry> {\n\n    constructor(private _composer: ComposerService) {\n        super(undefined);\n        const sub = this._composer.initialised.subscribe((state) => {\n            if (state) {\n                this.http = this._composer.http;\n                sub.unsubscribe();\n            }\n        });\n        this._name = 'log';\n        this._api_route = '/logs';\n    }\n\n    public process(raw_item: any) {\n        const item: IEngineLogEntry = {\n            id: raw_item.id,\n            name: raw_item.name,\n            notes: raw_item.notes,\n            suspected: raw_item.suspected,\n            persisted: raw_item.persisted,\n            installed_device: raw_item.installed_device,\n            ip: raw_item.ip,\n            user_id: raw_item.user_id,\n            system_id: raw_item.system_id,\n            systems: raw_item.systems,\n            user: raw_item.user,\n            display: {\n                started: dayjs(raw_item.created_at * 1000).format(),\n                ended: dayjs(raw_item.ended_at * 1000).format('MMM d, YYYY - hh:mm A')\n            },\n            created: raw_item.created_at * 1000,\n            last_checked: raw_item.last_checked * 1000,\n            ended: raw_item.ended_at * 1000\n        };\n        return item;\n    }\n\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from './base.service';\n\nimport * as dayjs from 'dayjs';\n\nexport interface IEngineSearchResult {\n    id: string;\n    name: string;\n    type: string;\n    created: number;\n    display?: any;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BackofficeSearchService extends BaseAPIService<IEngineSearchResult> {\n\n    constructor(private _composer: ComposerService) {\n        super(undefined);\n        const sub = this._composer.initialised.subscribe((state) => {\n            if (state) {\n                this.http = this._composer.http;\n                sub.unsubscribe();\n            }\n        });\n        this._name = 'search';\n        this._api_route = '/search';\n    }\n\n    public deleteItem() { return new Promise((rs, rj) => rj('No show for this service')); }\n    public updateItem() { return new Promise<any>((rs, rj) => rj('No show for this service')); }\n    public add() { return new Promise<any>((rs, rj) => rj('No show for this service')); }\n    public show() { return new Promise<any>((rs, rj) => rj('No show for this service')); }\n\n    protected process(raw_item: any) {\n        const item: IEngineSearchResult = {\n            id: raw_item.id,\n            name: raw_item.name,\n            type: raw_item.type,\n            created: raw_item.created_at * 1000\n        };\n        item.display = {\n            created: dayjs(item.created).format()\n        };\n        return item;\n    }\n\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from './base.service';\n\nexport interface IEngineStats {\n    id?: string;\n    name?: string;\n    period: string;\n    histogram?: { avg: number, count: number, max: number, min: number, sum: number }[];\n    interval?: number;\n    start?: number;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BackofficeStatsService extends BaseAPIService<IEngineStats> {\n\n    constructor(private _composer: ComposerService) {\n        super(undefined);\n        const sub = this._composer.initialised.subscribe((state) => {\n            if (state) {\n                this.http = this._composer.http;\n                sub.unsubscribe();\n            }\n        });\n        this._name = 'stats';\n        this._api_route = '/stats';\n    }\n\n    public connections(fields?: any) {\n        return this.show('connections', fields);\n    }\n\n    public panels(fields?: any) {\n        return this.show('panels', fields);\n    }\n\n    public offline(fields?: any) {\n        return this.show('offline', fields);\n    }\n\n    public triggers(fields?: any) {\n        return this.show('triggers', fields);\n    }\n\n    public ignore_list(fields?: any) {\n        return this.show('triggers', fields);\n    }\n\n    protected process(raw_item: any) {\n        const item: IEngineStats = {\n            period: raw_item.period_name,\n            interval: raw_item.interval,\n            histogram: raw_item.histogram || [],\n            start: raw_item.period_start * 1000\n        };\n        return item;\n    }\n\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from './base.service';\nimport { IEngineLogEntry } from './logs.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BackofficeSystemLogsService extends BaseAPIService<IEngineLogEntry> {\n\n    constructor(private _composer: ComposerService) {\n        super(undefined);\n        const sub = this._composer.initialised.subscribe((state) => {\n            if (state) {\n                this.http = this._composer.http;\n                sub.unsubscribe();\n            }\n        });\n        this._name = 'log';\n        this._api_route = '/system_logs';\n    }\n\n    protected process(raw_item: any) {\n        const item = this.parent.Logs.process(raw_item);\n        return item;\n    }\n\n}\n","import { ComposerService } from '@placeos/composer';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EngineUsersService, EngineUser, EngineUserQueryOptions } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { FilterFn, DialogEvent } from '../../shared/utilities/types.utilities';\nimport { toQueryString } from 'src/app/shared/utilities/api.utilities';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA\n} from '../../overlays/confirm-modal/confirm-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport * as Sentry from '@sentry/browser';\n\ntype ServiceItem = EngineUser;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BackofficeUsersService extends EngineUsersService {\n    /** Name for a single user */\n    public readonly singular: string = 'user';\n    /** Behavior subject with the currently available list of users */\n    public readonly listing = new BehaviorSubject<ServiceItem[]>([]);\n    /** Active User */\n    public readonly user = new BehaviorSubject<ServiceItem>(null);\n    /** State of loading the user */\n    public readonly state = new BehaviorSubject<string>('');\n    /** Application Service */\n    public parent: any;\n    public readonly can_create: boolean = false;\n    public readonly can_edit: boolean = true;\n\n    /** Whether dark mode is enabled */\n    public get dark_mode(): boolean {\n        if (\n            !((this.user.getValue() || {}) as any).ui_theme &&\n            !localStorage.getItem('BACKOFFICE.theme') &&\n            window.matchMedia &&\n            window.matchMedia('(prefers-color-scheme: dark)').matches\n        ) {\n            return true;\n        }\n        return (\n            ((this.user.getValue() || {}) as any).ui_theme === 'dark' ||\n            localStorage.getItem('BACKOFFICE.theme') === 'dark'\n        );\n    }\n    public set dark_mode(state: boolean) {\n        if (state) {\n            localStorage.setItem('BACKOFFICE.theme', 'dark');\n            this.parent.set('dark_mode', state);\n            document.body.classList.add('dark-mode');\n        } else {\n            localStorage.setItem('BACKOFFICE.theme', 'light');\n            document.body.classList.remove('dark-mode');\n        }\n    }\n    /** Default method for filtering the available list */\n    private _filter_fn: FilterFn<ServiceItem> = _ => true;\n\n    constructor(\n        private _composer: ComposerService,\n        private http_unauth: HttpClient,\n        private _dialog: MatDialog\n    ) {\n        super(undefined);\n        const sub = this._composer.initialised.subscribe(state => {\n            if (state) {\n                this.http = this._composer.http;\n                sub.unsubscribe();\n                this.current().then(user => {\n                    this.user.next(user);\n                });\n            }\n        });\n    }\n\n    /**\n     * Get the available list of zones\n     * @param predicate Function to filter the zone list on\n     */\n    public list(predicate: FilterFn<ServiceItem> = this._filter_fn): ServiceItem[] {\n        return (this.listing.getValue() || []).filter(predicate);\n    }\n\n    public query(query_params?: EngineUserQueryOptions): Promise<ServiceItem[]> {\n        return new Promise((resolve, reject) => {\n            super.query(query_params).then(\n                list => {\n                    const old_list = this.list();\n                    const new_list = [...old_list, ...list];\n                    for (const item of new_list) {\n                        const found = new_list.findIndex(i => i.id === item.id && i !== item);\n                        if (found >= 0) {\n                            new_list.splice(new_list.indexOf(item), 1);\n                        }\n                    }\n                    this.listing.next(new_list);\n                    resolve(list);\n                },\n                e => reject(e)\n            );\n        });\n    }\n\n    public load(): Promise<void> {\n        console.log('Load user');\n        return new Promise(resolve => {\n            this.state.next('loading');\n            this.show('current').then(\n                user => {\n                    if (user) {\n                        this.user.next(user);\n                        this.parent.set('user', user);\n                        Sentry.configureScope(scope => scope.setUser({ email: user.email }));\n                        this.state.next('success');\n                        resolve();\n                        console.log('Dark mode:', this.dark_mode);\n                        this.dark_mode = this.dark_mode;\n                    } else {\n                        this.timeout('load', () => this.load().then(_ => resolve()), 600);\n                    }\n                },\n                () => this.timeout('load', () => this.load().then(_ => resolve()), 600)\n            );\n        });\n    }\n\n    /**\n     * Manually set the user access token\n     * @param token Token to set\n     * @param expiry Expiry time of the token\n     */\n    public setToken(token: string, expiry: number) {\n        if (!expiry) {\n            expiry = dayjs()\n                .add(7, 'd')\n                .valueOf();\n        }\n        const path = `${location.origin}${this.parent.setting('composer.route') ||\n            ''}/oauth-resp.html`;\n        if (localStorage) {\n            const client_id = Md5.hashStr(path);\n            localStorage.setItem(`${client_id}_access_token`, token);\n            localStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n            location.reload();\n        }\n        return path;\n    }\n\n    /**\n     * Login with given credentials\n     * @param fields Key value pairs of post parameters\n     */\n    public login(fields: any = {}) {\n        return new Promise((resolve, reject) => {\n            this.state.next('loading');\n            const query = toQueryString(fields);\n            let headers = new HttpHeaders();\n            headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n            this.http_unauth.post('/auth/signin', query, { headers }).subscribe(\n                (res: any) => {\n                    if (sessionStorage) {\n                        const clientId = Md5.hashStr(`${location.origin}/oauth-resp.html`);\n                        sessionStorage.setItem(`${clientId}_login`, 'true');\n                    }\n                    this._composer.auth.authorise().then(token => {\n                        resolve();\n                    });\n                },\n                err => {\n                    if (err.status >= 400) {\n                        this.state.next('error');\n                    } else {\n                        if (sessionStorage) {\n                            const clientId = Md5.hashStr(`${location.origin}/oauth-resp.html`);\n                            sessionStorage.setItem(`${clientId}_login`, 'true');\n                        }\n                        this._composer.auth.authorise();\n                    }\n                    reject();\n                },\n                () => this.load()\n            );\n        });\n    }\n\n    /**\n     * Logout from the application\n     */\n    public logout() {\n        this._composer.auth.logout();\n    }\n\n    /**\n     * Open modal for editing an item\n     * @param item Item to edit\n     */\n    public async openEditModal(item: EngineUser): Promise<string> {\n        return '';\n    }\n\n    /**\n     * Open confirmation modal for deleting an item\n     * @param item Item to delete\n     */\n    public askDelete(item: EngineUser): Promise<string> {\n        return new Promise((resolve, reject) => {\n            let complete = false;\n            const ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n                ConfirmModalComponent,\n                {\n                    ...CONFIRM_METADATA,\n                    data: {\n                        title: 'Delete User?',\n                        content: `Are you sure you want to delete this user?`,\n                        icon: { type: 'icon', class: 'backoffice-trash' }\n                    }\n                }\n            );\n            this.subscription(\n                'confirm_ref',\n                ref.componentInstance.event.subscribe((e: DialogEvent) => {\n                    if (e.reason === 'done') {\n                        complete = true;\n                        item.delete().then(\n                            () => resolve(),\n                            () => reject('Request failed')\n                        );\n                    }\n                })\n            );\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\nimport { EngineDebugEvent, EngineModule } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { BaseClass } from '../shared/globals/base.class';\nimport { HashMap } from '../shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\n\nconst TERMINAL_COLOURS = {\n    debug: '\\u001b[34m',\n    verbose: '\\u001b[34m',\n    info: '\\u001b[32m',\n    warning: '\\u001b[33m',\n    error: '\\u001b[31m',\n    fatal: '\\u001b[31m',\n};\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EngineDebugService extends BaseClass {\n    /** List of the current state of events */\n    private _events = new BehaviorSubject<EngineDebugEvent[]>([]);\n    /** Observable for changes to the event listing */\n    private _event_obs = this._events.asObservable();\n    /** List of modules listening to debug events */\n    private _bound_modules: EngineModule[] = [];\n    /** Mapping of module IDs to display names */\n    private _module_names: HashMap<string> = {};\n    /** Whether debug console is enabled */\n    private _enabled: boolean;\n\n    /** Current list of debug events */\n    public get event_list(): EngineDebugEvent[] {\n        return this._events.getValue();\n    }\n\n    /** Observable for changes to the event listing */\n    public get events(): Observable<EngineDebugEvent[]> {\n        return this._event_obs;\n    }\n\n    /** Get terminal display string for all the events */\n    public get terminal_string(): string {\n        return this.event_list\n            .map(\n                (event) =>\n                    `${TERMINAL_COLOURS[event.level] || TERMINAL_COLOURS.debug}${dayjs().format(\n                        'h:mm A'\n                    )}, ${\n                        this._module_names[event.mod_id] || event.mod_id || '<UNKNOWN>'\n                    }, [${event.level.toUpperCase()}]\\u001b[0m ${event.message}`\n            )\n            .join('\\n');\n    }\n\n    /** Whether there are modules listening for debug messages */\n    public get is_listening(): boolean {\n        return this._enabled;\n    }\n\n    constructor(private _composer: ComposerService) {\n        super();\n        this._composer.realtime.debug_events.subscribe((event) => {\n            if (this._bound_modules.find((mod) => mod.id === event.mod_id)) {\n                const event_list = this.event_list;\n                event_list.push(event);\n                this._events.next(event_list);\n            }\n        });\n    }\n\n    /** Clear existing events */\n    public clearEvents() {\n        this._events.next([]);\n    }\n\n    /**\n     * Whether module is listening for debug events\n     */\n    public isListening(module: EngineModule): boolean {\n        return !!this._bound_modules.find((mod) => mod.id === module.id);\n    }\n\n    /**\n     * Start listening to debug events for the given module\n     * @param module Module to start listening to\n     * @param module_name Display name for the module\n     */\n    public bind(module: EngineModule, module_name: string) {\n        if (module) {\n            const parts = module_name.split('_');\n            const index = +parts.splice(parts.length - 1, 1);\n            const options = {\n                sys: module.system_id,\n                mod: module.id,\n                index,\n                name: 'debug',\n            };\n            this._enabled = true;\n            this._composer.realtime.debug(options).then(() => {\n                this.subscription(`debug_${module.id}`, () =>\n                    this._composer.realtime.ignore(options)\n                );\n                this._bound_modules.push(module);\n                this._module_names[module.id] = module_name;\n            });\n        }\n    }\n\n    /**\n     * Stop listening to debug events for module\n     * @param module Module to stop listening to\n     */\n    public unbind(module: EngineModule) {\n        if (module) {\n            this.unsub(`debug_${module.id}`);\n            this._bound_modules = this._bound_modules.filter((mod) => mod.id !== module.id);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { unique } from '../shared/utilities/general.utilities';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            if (\n                document.activeElement &&\n                (document.activeElement.tagName.toLowerCase() === 'input' ||\n                    document.activeElement.tagName.toLowerCase() === 'textarea')\n            ) {\n                return;\n            }\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                this.setKeyState(code, ++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.keydown_states[code]) {\n                this.keydown_states[code].next(null);\n            }\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = combo instanceof Array ? combo : combo.split('+');\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            this.setKeyState(last_key, null);\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe(count => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) {\n                                return;\n                            }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (\n            code.indexOf('alt') >= 0 ||\n            code.indexOf('shift') >= 0 ||\n            code.indexOf('control') >= 0\n        ) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            key_list.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n\n    /**\n     * Update the state of a keycode\n     * @param code Code of the key\n     * @param value New state value for key\n     */\n    private setKeyState(code: string, value: number = null) {\n        if (!this.keydown_states[code]) {\n            this.keydown_states[code] = new BehaviorSubject(null);\n            this.keydown_observers[code] = this.keydown_states[code].asObservable();\n        }\n        this.keydown_states[code].next(value);\n    }\n}\n","import { Injectable, ErrorHandler } from '@angular/core';\n\nimport * as Sentry from '@sentry/browser';\n\n@Injectable()\nexport class SentryService implements ErrorHandler {\n    /**\n     * Handle error thrown by Angular\n     * @param error Angular error\n     */\n    public handleError(error) {\n        Sentry.captureException(error.originalError || error);\n        throw error;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { BaseClass } from '../shared/globals/base.class';\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { VERSION } from 'src/environments/version';\nimport { getItemWithKeys } from '../shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\ninterface SettingsMap {\n    api: HashMap;\n    local: HashMap;\n    session: HashMap;\n    [block: string]: HashMap;\n}\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService extends BaseClass {\n\n    /** Map of settings */\n    private _settings: SettingsMap = { api: {}, local: {}, session: {} };\n    /** Store for promises */\n    private _promises: { [name: string]: Promise<any> } = {};\n    /** Name of the application */\n    private _app_name = 'ACA';\n\n    constructor(private http: HttpClient) {\n        super();\n        const now = dayjs();\n        const build = dayjs(VERSION.time);\n        const built = now.isSame(build, 'd') ? `Today at ${build.format('h:mmA')}` : build.format('D MMM YYYY, h:mmA');\n        this.log('CORE', `${VERSION.core_version}`, null, 'debug', true);\n        this.log('APP', `${VERSION.version} - ${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        await this.loadFromFile('api');\n        this.loadStore('local', localStorage);\n        this.loadStore('session', sessionStorage);\n        if (this._settings.api.debug) {\n            window.debug = true;\n        }\n        if (this._settings.api.app && this._settings.api.app.name) {\n            this._app_name = this._settings.api.app.name;\n        }\n        this.log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() { return this._app_name; }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(type: string, msg: string, args?: any, stream: ConsoleStream = 'debug', force: boolean = false) {\n        if (window.debug || force) {\n            const colors: string[] = ['color: #E91E63', 'color: #3F51B5', 'color: default'];\n            if (args) {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors, args);\n            } else {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors);\n            }\n        }\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get(key: string): any {\n        const keys = key.split('.');\n        let value = null;\n        if (keys[0] === 'session') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.session);\n        } else if (keys[0] === 'local') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.local);\n        } else {\n            value = getItemWithKeys(keys, this._settings.api) ||\n                getItemWithKeys(keys, this._settings.session) ||\n                getItemWithKeys(keys, this._settings.local);\n        }\n        return value;\n    }\n\n    /**\n     * Load settings from the given Storage object\n     * @param name Root key for the settings\n     * @param store Storage item to add to the load into the settings\n     */\n    private loadStore(name: string, store: Storage) {\n        if (store) {\n            for (let i = 0; i < store.length; i++) {\n                const key = store.key(i);\n                const item = store.getItem(key);\n                if (item) { this._settings[name][key] = item; }\n            }\n        }\n    }\n\n    /**\n     * Load setting data from a file\n     * @param name Namespace to add file data to\n     * @param file URL to file to load setting data from\n     */\n    private async loadFromFile(name: string, file: string = 'assets/settings.json', tries: number = 0) {\n        if (file !== 'assets/settings.json' && tries > 5) {\n            return Promise.resolve();\n        }\n        const file_name = file.split('/')[file.split('/').length - 1];\n        console.log('File name:', file_name, window[file_name]);\n        // Check if data has been loaded into the global space\n        if (window[file_name] instanceof Object) {\n            this._settings[name] = { ...(this._settings[name] || {}), ...window[file_name] };\n            return Promise.resolve();\n        }\n        const key = `load|${name}|${file}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                this.http.get(file).subscribe(\n                    (data) => {\n                        this._settings[name] = { ...(this._settings[name] || {}), ...(data || {}) };\n                    }, (e) => {\n                        this.log('Settings', `Failed to load settings from \"${file}\"`);\n                        this._promises[key] = null;\n                        this.timeout(`load_${file_name}`, () => {\n                            this.loadFromFile(name, file, ++tries).then(() => resolve());\n                        }, 2000);\n                    }, () => resolve()\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    EngineResource,\n    EngineSystem,\n    EngineZone,\n    EngineDriver,\n    EngineModule\n} from '@placeos/ts-client';\n\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\nimport { ApplicationService } from '../../services/app.service';\nimport { EngineServiceLike } from '../utilities/types.utilities';\nimport { first } from 'rxjs/operators';\nimport { ItemCreateUpdateModalComponent } from 'src/app/overlays/item-modal/item-modal.component';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-base-root-component',\n    template: '',\n    styles: []\n})\nexport class BaseRootComponent<T = EngineResource<any>> extends BaseDirective implements OnInit {\n    /** Name of the API service assoicated with the  */\n    public readonly service_name: string;\n    /** ID of the item to render */\n    public id: string;\n    /** Item to render on the UI */\n    public item: T;\n    /** ID of the active tab in the item space */\n    public tab: string;\n    /** Whether the active item data is being loaded */\n    public loading_item: boolean;\n    /** Total number of items in the list */\n    public total: number;\n    /** Whether the sidebar should be shown on a mobile device */\n    public show_sidebar: boolean;\n    /** Modal Reference */\n    public modal_ref: MatDialogRef<any>;\n    /** Service to get data from */\n    public service: EngineServiceLike;\n\n    /** Service for the active module */\n    public get module(): EngineServiceLike {\n        return this.service;\n    }\n\n    constructor(\n        protected _service: ApplicationService,\n        protected _route: ActivatedRoute,\n        protected _router: Router\n    ) {\n        super();\n        this.service_name = 'Systems';\n        this.service = this._service.Systems;\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe(params => {\n                if (params.has('id') && params.get('id') !== '-') {\n                    this.loading_item = true;\n                    const id = decodeURIComponent(params.get('id'));\n                    if (this._service.get('BACKOFFICE.active_item_id') !== id) {\n                        this.id = id;\n                        this.loadItem();\n                    } else {\n                        this.setActiveItem(this._service.get('BACKOFFICE.active_item'));\n                    }\n                } else if (params.has('id') && params.get('id') === '-') {\n                    this.id = '-';\n                    this.setActiveItem(null);\n                }\n                this.timeout('sidebar', () => (this.show_sidebar = !this.id));\n            })\n        );\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this._service.title = this.service_name;\n            this.init();\n        });\n\n        this.subscription(\n            'new_item',\n            this._service.Hotkeys.listen(['KeyN'], () => this.newItem())\n        );\n        this.subscription(\n            'edit_item',\n            this._service.Hotkeys.listen(['KeyE'], () => this.editItem())\n        );\n        this.subscription(\n            'delete_item',\n            this._service.Hotkeys.listen(['KeyD'], () => this.deleteItem())\n        );\n    }\n\n    public init() {}\n\n    /**\n     * Handler events from the sidebar\n     * @param event Sidebar event\n     */\n    public sidebarEvent(event: any) {\n        this.timeout(\n            'sidebar',\n            () => {\n                if (event && event.type === 'new') {\n                    this.newItem();\n                } else {\n                    this.toggleSidebar();\n                }\n            },\n            20\n        );\n    }\n\n    /**\n     * Update the state of showing the sidebar\n     * @param state New show state\n     */\n    public toggleSidebar() {\n        this.timeout('sidebar', () => (this.show_sidebar = !this.show_sidebar));\n    }\n\n    /**\n     * Handle actions on the active item\n     * @param event User action\n     */\n    public itemEvent(event: any) {\n        if (!event) {\n            return;\n        }\n        if (event.type === 'tab' && this.item && event.value) {\n            this._router.navigate([], {\n                relativeTo: this._route,\n                queryParams: { tab: event.value },\n                queryParamsHandling: 'merge'\n            });\n        } else if (event.type === 'new') {\n            this.newItem();\n        } else if (event.type === 'copy') {\n            this.newItem(true);\n        } else if (event.type === 'edit') {\n            this.editItem();\n        } else if (event.type === 'delete' && this.item) {\n            this.deleteItem();\n        }\n    }\n\n    /**\n     * Open create modal for a new item\n     */\n    protected newItem(copy: boolean = false) {}\n\n    /**\n     * Open edit modal for active item\n     */\n    protected editItem() {}\n\n    protected deleteItem() {}\n\n    protected loadValues() {}\n\n    /**\n     * Load the data for the active item\n     */\n    protected loadItem() {\n        this.timeout('loading', () => (this.loading_item = true), 10);\n        this.service.show(this.id, { complete: true }).then(\n            item => this.setActiveItem(item),\n            () => {\n                this._service.notifyError(\n                    `Failed to load data for ${this.service._name} \"${this.id}\"`\n                );\n                this.loading_item = false;\n                this._service.navigate([this.service._api_route]);\n            }\n        );\n    }\n\n    protected setActiveItem(new_item: T) {\n        this.item = new_item;\n        this._service.set('BACKOFFICE.active_item_id', this.id);\n        this._service.set('BACKOFFICE.active_item', this.item);\n        if (this.item) {\n            this.subscription(\n                'item_changes',\n                (this.item as any).changeEvents.subscribe(event => {\n                    if (event.type === 'item_saved') {\n                        this.setActiveItem(event.metadata as any);\n                    }\n                })\n            );\n            this.loadValues();\n            this.loadSettings();\n        }\n        this.timeout('item', () => (this.loading_item = false));\n    }\n\n    protected loadSettings(): void {\n        if (\n            this.item instanceof EngineSystem ||\n            this.item instanceof EngineZone ||\n            this.item instanceof EngineDriver ||\n            this.item instanceof EngineModule\n        ) {\n            this._service.set('loading_settings', true);\n            this._service.EngineSettings.query({ parent_id: this.item.id }).then(\n                list => {\n                    this._service.set('loading_settings', false);\n                    for (const settings of list) {\n                        (this.item as any).settings[settings.encryption_level] = settings;\n                    }\n                },\n                err => {\n                    this._service.set('loading_settings', false);\n                    this._service.notifyError(\n                        `Error loading settings. Error: ${JSON.stringify(err.response || err.message || err)}`\n                    );\n                }\n            );\n        }\n    }\n}\n","import {\n    Component,\n    ViewChild,\n    ElementRef,\n    AfterViewInit,\n    Input,\n    HostListener,\n    OnInit\n} from '@angular/core';\nimport { MatMenuTrigger, MatMenuPanel } from '@angular/material/menu';\n\nimport { BaseDirective } from '../../globals/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: '[context-menu]',\n    templateUrl: './context-menu.template.html',\n    styleUrls: ['./context-menu.styles.scss']\n})\nexport class ContextMenuComponent extends BaseDirective implements OnInit, AfterViewInit {\n    /** List of context menu items */\n    @Input('context-menu') public menu: MatMenuPanel;\n    /** Offset of the context menu on the x axis */\n    @Input() public offset_x = 0;\n    /** Offset of the context menu on the y axis */\n    @Input() public offset_y = 0;\n    /** Top position of the menu */\n    public top: number;\n    /** Whether menu show to the left of the cursor */\n    public right: boolean;\n    /** Whether the context menu should be shown */\n    public show: boolean;\n    /** Location of the menu */\n    public position: { top: number; left: number };\n\n    @ViewChild('container', { static: true }) private container: ElementRef<HTMLDivElement>;\n    @ViewChild(MatMenuTrigger, { static: true }) private trigger: MatMenuTrigger;\n\n    @HostListener('contextmenu', ['$event']) public onEvent(event) {\n        event.preventDefault();\n        this.position = { top: event.clientY + this.offset_y, left: event.clientX + this.offset_x };\n        if (this.trigger) {\n            this.trigger.openMenu();\n        }\n        this.timeout('update_position', () => this.updatePosition(), 50);\n    }\n\n    constructor(private _service: ApplicationService, private _element: ElementRef<HTMLElement>) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.position = { top: 0, left: 0 };\n    }\n\n    public ngAfterViewInit() {\n        setTimeout(() => this.updatePosition(), 10);\n    }\n\n    /** Update the position of the context menu */\n    public updatePosition() {\n        if (!this.container || !this.container.nativeElement) {\n            return setTimeout(() => this.updatePosition(), 50);\n        }\n        const box = this.container.nativeElement.getBoundingClientRect();\n        this.right = false;\n        this.top = 0;\n        if (window.innerHeight < box.bottom) {\n            this.top = window.innerHeight - (box.bottom + 5);\n        }\n        this.right = box.right - 5 > window.innerWidth;\n    }\n}\n","<ng-content></ng-content>\n<div\n    class=\"context-placeholder\"\n    #container\n    [style.top]=\"position.top + 'px'\"\n    [style.left]=\"position.left + 'px'\"\n    [matMenuTriggerFor]=\"menu\"\n>\n</div>\n","import { Component, OnInit, forwardRef, Input, ViewChild, LOCALE_ID, Inject } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\n\nimport * as dayjs from 'dayjs';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n    selector: 'a-date-field',\n    templateUrl: './date-field.component.html',\n    styleUrls: ['./date-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = dayjs().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: number;\n    /** Pipe for formatting date strings */\n    private date_pipe: DatePipe;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    @ViewChild(MatMenuTrigger, { static: true }) private _trigger: MatMenuTrigger;\n\n    /** First allowed date on the calendar */\n    public get from(): number {\n        return this._from || dayjs().startOf('d').valueOf();\n    }\n    /** Current date value */\n    public get until(): number {\n        return this._to || dayjs().endOf('d').add(1, 'y').valueOf();\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return this.date_pipe.transform(dayjs(this.date).toDate(), 'DD MMM YYYY');\n    }\n\n    /** Whether date picker is open */\n    public get is_open(): boolean {\n        return this._trigger.menuOpen;\n    }\n\n    constructor(@Inject(LOCALE_ID) private _locale: string) {\n        super();\n        this.date_pipe = new DatePipe(this._locale);\n    }\n\n    public ngOnInit() {\n        this.date = dayjs().valueOf();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        this.date = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public closeDatePicker() {\n        this._trigger.closeMenu();\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public openDatePicker() {\n        this._trigger.openMenu();\n    }\n}\n","<div\n    class=\"date-field\"\n    role=\"button\"\n    form-field\n    tabindex=\"0\"\n    [class.active]=\"is_open\"\n    [attr.disabled]=\"disabled\"\n    (keydown.enter)=\"openDatePicker()\"\n    [matMenuTriggerFor]=\"appMenu\"\n>\n    <div class=\"display\">{{ date_string }}</div>\n    <div class=\"icon\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: is_open ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [ngModel]=\"date\"\n            [options]=\"{ from: from, to: until }\"\n            (ngModelChange)=\"setValue($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, OnInit, forwardRef, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { EngineResource, EngineModule, EngineDriverRole } from '@placeos/ts-client';\n\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\nimport { EngineServiceLike, HashMap, Identity } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'item-search-field',\n    templateUrl: './item-search-field.component.html',\n    styleUrls: ['./item-search-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ItemSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemSearchFieldComponent<T extends Identity = any> extends BaseDirective\n    implements OnInit, OnChanges, ControlValueAccessor {\n    /** Limit available options to these */\n    @Input() public options: T[];\n    /** Function for filtering out options */\n    @Input() public exclude: (_: T) => boolean;\n    /** Minimum number of characters needed to start a server query */\n    @Input('minLength') public min_length = 0;\n    /** Whether item list is loading */\n    @Input() public loading: boolean;\n    /** Service used for searching items */\n    @Input() public service: EngineServiceLike;\n    /** Currently selected item */\n    public active_item: T;\n    /** Item list to display */\n    public item_list: T[];\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** List of items from an API search */\n    public search_results$: Observable<T[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n    /** Form control on change handler */\n    private _onChange: (_: T) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T) => void;\n\n    /** Map of item names to their IDs */\n    public get item_name(): HashMap<string> {\n        const map = {};\n        const list = this.item_list || [];\n        for (let item of list) {\n            if (item instanceof EngineModule) {\n                const detail =\n                    item.role === EngineDriverRole.Service\n                        ? item.uri\n                        : item.role === EngineDriverRole.Logic\n                        ? item.control_system_id\n                        : item.ip;\n                map[item.id] = `${item.name || '<Unnamed>'} <span class=\"small\">${detail}<span>`;\n            } else {\n                map[item.id] = (item as any).custom_name || item.name || '<Unnamed>';\n            }\n        }\n        return map;\n    }\n\n    public ngOnInit(): void {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap((query) => {\n                this.loading = true;\n                return this.options && this.options.length > 0\n                    ? Promise.resolve(this.options)\n                    : !this.min_length || query.length >= this.min_length\n                    ? (this.service.query({ q: query || '', cache: 5 * 1000 }) as Promise<T[]>)\n                    : Promise.resolve([]);\n            }),\n            catchError((_) => of([])),\n            map((list: T[]) => {\n                this.loading = false;\n                const search = (this.search_str || '').toLowerCase();\n                console.log('List:', list);\n                return list.filter((item: any) => {\n                    const match =\n                        item.name.toLowerCase().indexOf(search) >= 0 ||\n                        (item.email || '').toLowerCase().indexOf(search) >= 0;\n                    return match && (this.exclude ? !this.exclude(item) : true);\n                });\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.item_list = list))\n        );\n        this.timeout('init', () => {\n            this.search$.next('');\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.service) {\n            this.search$.next('');\n        }\n    }\n\n    /**\n     * Reset the search string back to the name of the active item\n     */\n    public resetSearchString() {\n        this.timeout(\n            'value',\n            () => {\n                if (this.active_item) {\n                    this.search_str = this.active_item.name || this.search_str;\n                }\n            },\n            10\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T): void {\n        this.active_item = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T) {\n        console.log('Value:', value);\n        this.active_item = value;\n        this.resetSearchString();\n    }\n\n    /**\n     * Registers a callback function that is called when the\n     * control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API\n     * on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"item-search-field\" form-field>\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"item-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [placeholder]=\"'Search for ' + (service?.name || service?._name || '') + '...'\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n            (focus)=\"search_str = ''; search$.next(' ')\"\n            (blur)=\"resetSearchString()\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"setValue($event.option.value)\">\n        <mat-option *ngFor=\"let option of item_list\" [value]=\"option\">\n            <div class=\"name\" [innerHTML]=\"item_name[option.id] | sanitize\"></div>\n            <div class=\"email\">{{ option.id }}{{ option.extra ? ' - ' + option.extra : '' }}</div>\n        </mat-option>\n    </mat-autocomplete>\n</div>\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'object-list-field',\n    templateUrl: './object-list-field.component.html',\n    styleUrls: ['./object-list-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ObjectListFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class ObjectListFieldComponent extends BaseDirective implements ControlValueAccessor {\n    /** List of fields that can be populated for each object */\n    @Input() public fields: string[];\n    /** List of objects */\n    public active_list: HashMap[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: HashMap[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: HashMap[]) => void;\n\n    /** Add a new item the the active list */\n    public addRow() {\n        if (!this.active_list) {\n            this.active_list = [];\n        }\n        this.active_list.push({});\n        this.setValue(this.active_list);\n    }\n\n    /**\n     * Remove item from the active list\n     * @param item Item to remove\n     */\n    public removeRow(item: HashMap) {\n        const index = this.active_list.indexOf(item);\n        if (index >= 0) {\n            this.active_list.splice(index, 1);\n        }\n        this.setValue(this.active_list);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: HashMap[]): void {\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: HashMap[]) {\n        this.active_list = value;\n    }\n\n    /**\n     * Registers a callback function that is called when the\n     * control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: HashMap[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms\n     * API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: HashMap[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"object-list\" *ngIf=\"fields && fields.length\">\n    <div class=\"header row\" *ngIf=\"active_list && active_list.length\">\n        <div class=\"field\" *ngFor=\"let field of fields\" [attr.name]=\"field\">\n            {{ field }}\n        </div>\n        <div class=\"gap\"></div>\n    </div>\n    <div class=\"row\" *ngFor=\"let item of active_list\">\n        <div class=\"field\" *ngFor=\"let field of fields\" [attr.name]=\"field\">\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    [name]=\"field\"\n                    [placeholder]=\"field\"\n                    i18n-placeholder\n                    [(ngModel)]=\"item[field]\"\n                    (ngModelChange)=\"setValue(active_list)\"\n                />\n            </mat-form-field>\n        </div>\n        <button mat-icon-button (tapped)=\"removeRow(item)\">\n            <app-icon [icon]=\"{ class: 'backoffice-trash' }\"></app-icon>\n        </button>\n    </div>\n    <div class=\"row footer\">\n        <button mat-button type=\"button\" (tapped)=\"addRow()\">\n            <div class=\"contents\">\n                <app-icon [icon]=\"{ class: 'backoffice-plus' }\"></app-icon>\n                <div class=\"text\" i18n=\"@@newItem\">New Item</div>\n            </div>\n        </button>\n    </div>\n</div>\n","/// <reference path=\"../../../../../../node_modules/monaco-editor/monaco.d.ts\" />\n\nimport {\n    Component,\n    forwardRef,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    Input,\n    OnDestroy,\n    SimpleChanges,\n    OnChanges\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\n\n// import * as monaco_yaml from 'monaco-editor/dev/vs/basic-languages/yaml/yaml.js';\n\n@Component({\n    selector: 'settings-form-field',\n    templateUrl: './settings-field.component.html',\n    styleUrls: ['./settings-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SettingsFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class SettingsFieldComponent extends BaseDirective\n    implements OnInit, OnChanges, OnDestroy, ControlValueAccessor {\n    /** Whether form field is readonly */\n    @Input() public readonly = true;\n    /** Resize */\n    @Input() public resize: boolean;\n    /** Input language for syntax highlighting and error checking */\n    @Input() public lang = 'yaml';\n    /** Current value for the */\n    public settings_string = ' ';\n    /** Form control on change handler */\n    private _onChange: (_: string) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string) => void;\n\n    /** Reference to the element container the monaco editor */\n    @ViewChild('editor', { static: true }) private element: ElementRef;\n    /** API object for the monaco editor */\n    private editor: any;\n\n    public ngOnInit(): void {\n        this.createEditor();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.readonly && this.editor) {\n            this.editor.updateOptions({ readOnly: !!this.readonly });\n        }\n        if (changes.lang && this.editor) {\n            this.editor.updateOptions({ language: this.lang || 'yaml' });\n        }\n        if (changes.resize) {\n            this.resizeEditor();\n        }\n    }\n\n    public ngOnDestroy() {\n        if (this.editor) {\n            this.editor.dispose();\n            this.editor = null;\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.settings_string = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        this.settings_string = `${value}`;\n        if (this.editor) {\n            if (this.readonly) {\n                this.editor.updateOptions({ readOnly: false });\n                this.editor.setValue(this.settings_string);\n                this.editor.updateOptions({ readOnly: true });\n            } else {\n                this.editor.setValue(this.settings_string);\n            }\n        }\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: string) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: string) => void): void {\n        this._onTouch = fn;\n    }\n\n    /** Update sizing of the editor after window has resized */\n    public resizeEditor() {\n        this.timeout('resize', () => this.createEditor(), 100);\n    }\n\n    /**\n     * Create and render the monaco editor to the component\n     */\n    private createEditor() {\n        if (this.element && this.element.nativeElement) {\n            if (this.editor) {\n                this.editor.dispose();\n                this.editor = null;\n            }\n            // monaco.languages.register(monaco_yaml);\n            this.editor = monaco.editor.create(this.element.nativeElement, {\n                value: this.settings_string || '',\n                language: this.lang || 'yaml',\n                fontFamily: `\"Fira Code\", monospace`,\n\n                lineNumbers: 'on',\n                roundedSelection: false,\n                scrollBeyondLastLine: false,\n                readOnly: this.readonly,\n                theme: 'vs-dark'\n            });\n            this.editor.onDidChangeModelContent(() => {\n                this.setValue(this.editor.getValue());\n            });\n        }\n    }\n}\n","<div class=\"settings-field\" widget (window:resize)=\"resizeEditor()\">\n    <div class=\"editor\" #editor></div>\n</div>\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    OnChanges,\n    ViewChildren,\n    ElementRef,\n    QueryList,\n    SimpleChanges,\n    forwardRef\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EngineModuleFunction, HashMap, TriggerFunction, EngineSystem } from '@placeos/ts-client';\n\nimport { ApplicationService } from '../../../../services/app.service';\nimport { BaseDirective } from '../../../globals/base.directive';\nimport { ViewResponseModalComponent } from 'src/app/overlays/view-response-modal/view-response-modal.component';\n\ninterface EngineModuleLike {\n    id: string;\n    name: string;\n    module: string;\n    index: number;\n}\n\ninterface ModuleFunction extends EngineModuleFunction {\n    name?: string;\n}\n\n@Component({\n    selector: 'system-exec-field',\n    templateUrl: './system-exec-field.template.html',\n    styleUrls: ['./system-exec-field.styles.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SystemExecFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class SystemExecFieldComponent extends BaseDirective\n    implements OnChanges, ControlValueAccessor {\n    /** ID of the system to execute command on */\n    @Input() public system: EngineSystem;\n    /** Whether the selected function is executable from this field */\n    @Input() public executable = true;\n    /** Emitter for exec results */\n    @Output() public event = new EventEmitter();\n    /** List of modules of the system */\n    public devices: EngineModuleLike[] = [];\n    /** List of available functions for the active module  */\n    public methods: ModuleFunction[] = [];\n    /** Currently selected module */\n    public active_module: EngineModuleLike;\n    /** Current selected module function */\n    public active_method: ModuleFunction;\n    /** Mapping or errors to field names */\n    public error: HashMap<boolean> = {};\n    /** Whether the selected function's params are valid */\n    public fields_valid: boolean;\n    /** Mapping of function arguments to values */\n    public fields: HashMap = {};\n    /** Index of the active function param field */\n    public active_field: number;\n    /** Current location with the input fields for function params */\n    public field_pos: number;\n    /** Previous location with the input fields for function params */\n    public last_location: number;\n    /** Current value of the active input field */\n    public field_value: string;\n    /** Parameter list for the active function */\n    public param_list: [string, string, any?][] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: TriggerFunction) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: TriggerFunction) => void;\n\n    /** List of elements containing arguments */\n    @ViewChildren('argument') private arg_list: QueryList<ElementRef>;\n\n    /** Mapping of function execution details */\n    public get function_value(): TriggerFunction {\n        if (!this.fields_valid) {\n            return null;\n        }\n        const args = this.processArguments();\n        const method = this.active_method ? this.active_method : { order: [], params: {}, name: '' };\n        return {\n            mod: `${this.active_module.module}_${this.active_module.index}`,\n            method: method.name,\n            args: args.reduce((map, arg, index) => {\n                map[method.params[method.order[index]][1]] = arg;\n                return map;\n            }, {})\n        };\n    }\n\n    public get placeholder(): HashMap<string> {\n        const map = {};\n        for (const arg of this.param_list) {\n            map[arg[0]] = (arg[2] !== undefined ? '[' + arg[0] + (arg[2] ? '=' + arg[2] : '') + ']' : arg[0])\n        }\n        return map;\n    }\n\n    constructor(private service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.system) {\n            this.devices = [];\n            this.loadModules();\n        }\n    }\n\n    /**\n     * Load the available modules for the active system\n     * @param offset Page offset of the list\n     */\n    public loadModules(offset: number = 0) {\n        if (this.system) {\n            this.service.Modules.query({ control_system_id: this.system.id, offset, limit: 500, complete: true } as any).then(\n                list => {\n                    this.devices = (list || []).filter(device => device.running).map(device => {\n                        const module_name =\n                            device.custom_name ||\n                            device.name\n                        return {\n                            id: device.id,\n                            name: device.name,\n                            module: module_name,\n                            index: 1\n                        };\n                    });\n                    this.devices.sort(\n                        (a, b) =>\n                            this.system.modules.indexOf(a.id) - this.system.modules.indexOf(b.id)\n                    );\n                    this.devices.forEach(\n                        device =>\n                            (device.index =\n                                this.devices\n                                    .filter(d => d.module === device.module)\n                                    .findIndex(mod => mod.id === device.id) + 1)\n                    );\n                    if (\n                        this.active_module &&\n                        !(this.devices || []).find(mod => mod.id === this.active_module.id)\n                    ) {\n                        this.devices.unshift(this.active_module);\n                    }\n                },\n                () => null\n            );\n        }\n    }\n\n    /**\n     * Load the available functions for the given module\n     * @param item Module to grab function list for\n     */\n    public loadFunctions(item: EngineModuleLike) {\n        this.methods = null;\n        this.fields = {};\n        this.active_module = item;\n        this.service.Systems.functionList(this.system.id, item.module, item.index).then(\n            list => {\n                if (list) {\n                    this.methods = Object.keys(list).map(i => ({ name: i, ...list[i] }));\n                    this.setMethod(this.active_method.name, this.fields);\n                }\n            },\n            () => {\n                this.service.notifyInfo('No executable methods returned.');\n            }\n        );\n    }\n\n    public selectFunction(fn: ModuleFunction) {\n        this.active_method = fn;\n        if (fn) {\n            this.param_list = Object.keys(this.active_method.params).map(\n                i => [i, ...this.active_method.params[i]] as any\n            );\n        }\n        this.checkFields();\n    }\n\n    /**\n     * Validate the arguments are valid JSON types\n     */\n    public checkFields() {\n        // Check fields\n        this.fields_valid = !!this.active_method;\n        this.error = {};\n        if (this.active_method) {\n            const params = this.param_list;\n            for (const arg of params || []) {\n                if (arg[2] === undefined && !this.fields[arg[0]]) {\n                    this.fields_valid = false;\n                    return;\n                } else {\n                    try {\n                        JSON.parse(`[${this.fields[arg[0]] || 'null'}]`);\n                    } catch (e) {\n                        this.error[arg[0]] = true;\n                        this.fields_valid = false;\n                    }\n                }\n            }\n        }\n        // Update field state\n        const args = this.arg_list.toArray();\n        if (args && args.length > 0) {\n            const current = args[this.active_field];\n            if (current) {\n                this.field_pos = current.nativeElement.selectionEnd;\n                this.timeout('field', () => (this.field_value = current.nativeElement.value));\n            }\n        }\n        this.setValue(this.function_value);\n    }\n\n    /**\n     * Move cursor to the next argument field\n     */\n    public nextField(e) {\n        if (e && e.preventDefault) {\n            e.preventDefault();\n        }\n        if (this.arg_list) {\n            const args = this.arg_list.toArray();\n            const current = args[this.active_field].nativeElement;\n            const other = e.key.toLowerCase() !== 'arrowright';\n            const right_arrow =\n                e.key.toLowerCase() === 'arrowright' &&\n                this.last_location === (current.value || '').length;\n            if ((other || right_arrow) && this.active_field < args.length - 1) {\n                const el = args[this.active_field + 1].nativeElement;\n                el.focus();\n                el.selectionStart = el.selectionEnd = 0;\n            }\n            this.last_location = current.selectionEnd;\n        }\n    }\n\n    public focused(index: number) {\n        this.active_field = index;\n        const args = this.arg_list.toArray();\n        const current = args[this.active_field];\n        this.field_pos = current.nativeElement.selectionEnd;\n        this.last_location = (current.nativeElement.value || '').length;\n    }\n\n    /**\n     * Move cursor to the previous argument field\n     */\n    public previousField(e) {\n        if (e && e.preventDefault) {\n            e.preventDefault();\n        }\n        if (this.arg_list) {\n            const args = this.arg_list.toArray();\n            const current = args[this.active_field];\n            const backspace = e.key.toLowerCase() === 'backspace' && this.last_location === 0;\n            const left_arrow = e.key.toLowerCase() === 'arrowleft' && this.last_location === 0;\n            if (\n                (backspace || left_arrow) &&\n                current.nativeElement.selectionEnd === 0 &&\n                this.active_field > 0\n            ) {\n                const el = args[this.active_field - 1].nativeElement;\n                el.focus();\n                el.selectionStart = el.selectionEnd = (el.value || '').length;\n            }\n            this.last_location = current.nativeElement.selectionEnd;\n        }\n    }\n\n    /**\n     * Execute the selected method\n     */\n    public execute() {\n        if (!this.executable) {\n            return;\n        }\n        this.checkFields();\n        if (this.fields_valid) {\n            // Check if any optional arguments have a value\n            const args = this.processArguments();\n            // Execute function\n            const details = {\n                method: this.active_method.name,\n                module: this.active_module.module,\n                index: this.active_module.index,\n                args\n            };\n            this.service.Systems.execute(\n                this.system.id,\n                details.method,\n                details.module,\n                details.index,\n                details.args\n            ).then(\n                result => {\n                    this.service.notifySuccess(\n                        'Command successful executed.\\nView Response?',\n                        'View',\n                        () => this.viewDetails(result)\n                    );\n                },\n                err => {\n                    if (typeof err === 'string' && err.length < 64) {\n                        this.service.notifyError(err);\n                    } else {\n                        this.service.notifyError(\n                            `Executing '${this.active_method.name}' failed.\\nView Error?`,\n                            'View',\n                            () => this.viewDetails(err.response)\n                        );\n                    }\n                }\n            );\n        } else {\n            this.service.notifyError('One or more fields are invalid.');\n        }\n    }\n\n    /**\n     * Process the active list of argument values\n     */\n    private processArguments(): any[] {\n        const arg_list = [];\n        for (const arg of this.active_method.order) {\n            arg_list.push(this.fields[arg] || null);\n        }\n        if (this.active_method.arity < 0) {\n            const len = arg_list.length;\n            for (let i = len - 1; i >= Math.abs(this.active_method.arity) - 1; i--) {\n                if (arg_list[i]) {\n                    break;\n                }\n                arg_list.pop();\n            }\n        }\n        // Format arguments\n        let args = `[`;\n        for (const arg of arg_list) {\n            if (args !== '[') {\n                args += ',';\n            }\n            args += `${arg}`;\n        }\n        args += ']';\n        let argument_list = [];\n        try {\n            argument_list = JSON.parse(args);\n        } catch (e) {\n            console.error(e);\n        }\n        return argument_list;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: TriggerFunction): void {\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: TriggerFunction) {\n        if (value) {\n            if (value.mod) {\n                const parts = value.mod.split('_');\n                this.active_module = {\n                    id: value.mod,\n                    name: value.mod,\n                    module: parts[0],\n                    index: +parts[1]\n                };\n                if (!(this.devices || []).find(mod => mod.id === this.active_module.id)) {\n                    this.devices.unshift(this.active_module);\n                }\n            }\n            this.setMethod(value.method, value.args);\n            if (value.args) {\n                this.fields = value.args;\n            }\n        }\n    }\n\n    private setMethod(name: string, args: HashMap = {}) {\n        if (name) {\n            const method = (this.methods || []).find(a_method => a_method.name === name);\n            if (!method) {\n                this.active_method = {\n                    name,\n                    arity: Object.keys(args).length - 1,\n                    params: Object.keys(args).map(key => ['req', key]) as any,\n                    order: Object.keys(args)\n                };\n                this.methods.unshift(this.active_method);\n            } else {\n                this.active_method = method;\n            }\n        }\n    }\n\n    /** View Results of the execute */\n    private viewDetails(content: any) {\n        this._dialog.open<ViewResponseModalComponent>(ViewResponseModalComponent, {\n            data: { content }\n        });\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: TriggerFunction) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: TriggerFunction) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<section\n    class=\"execute\"\n    *ngIf=\"system && system.id && devices && devices.length > 0; else empty_state\"\n>\n    <div class=\"row\">\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [value]=\"active_module\"\n                (valueChange)=\"loadFunctions($event)\"\n                placeholder=\"Select a module\"\n                i18n-placeholder=\"@@selectModule\"\n            >\n                <mat-option *ngFor=\"let option of devices || []\" [value]=\"option\">\n                    {{ option.module || option.name || \"&lt;Unnamed&gt;\" }} {{ option.index ?\n                    option.index : '' }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <ng-container *ngIf=\"active_module\">\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"methods && methods.length; else empty_function_state\"\n            >\n                <mat-select\n                    #select\n                    [value]=\"active_method\"\n                    (valueChange)=\"selectFunction($event)\"\n                    placeholder=\"Select a function\"\n                    i18n-placeholder=\"@@selectFunction\"\n                >\n                    <mat-option *ngFor=\"let option of methods || []\" [value]=\"option\">\n                        {{ option.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </ng-container>\n        <button\n            *ngIf=\"active_method && executable\"\n            [class.not-mobile]=\"true\"\n            mat-button\n            [disabled]=\"!fields_valid\"\n            (tapped)=\"execute()\"\n            i18n=\"@@execute\"\n        >\n            Execute\n        </button>\n    </div>\n    <div class=\"row function\" *ngIf=\"active_method\">\n        <div class=\"fn-input\">\n            <div class=\"bracket\">{{active_method.name}}(</div>\n            <div class=\"arg\" *ngFor=\"let arg of param_list; let i = index\">\n                <span class=\"seperator\" [class.solid]=\"arg[2] !== undefined || fields[arg[0]]\"\n                    >{{(i > 0 ? ',&nbsp;' : '')}}</span\n                >\n                <input\n                    #argument\n                    [(ngModel)]=\"fields[arg[0]]\"\n                    (ngModelChange)=\"checkFields()\"\n                    [class.error]=\"error && error[arg[0]]\"\n                    [style.width]=\"(.6 * (fields[arg[0]] || placeholder[arg[0]]).length + .3) + 'em'\"\n                    [placeholder]=\"placeholder[arg[0]]\"\n                    (keyup.enter)=\"nextField($event)\"\n                    (keydown.,)=\"nextField($event)\"\n                    (keyup.arrowright)=\"nextField($event)\"\n                    (keyup.backspace)=\"previousField($event)\"\n                    (keyup.arrowleft)=\"previousField($event)\"\n                    (focus)=\"focused(i)\"\n                />\n            </div>\n            <div class=\"bracket\">)</div>\n        </div>\n    </div>\n    <button\n        *ngIf=\"active_method && executable\"\n        [class.mobile-only]=\"true\"\n        mat-button\n        [disabled]=\"!fields_valid\"\n        (tapped)=\"execute()\"\n        i18n=\"@@execute\"\n    >\n        Execute\n    </button>\n</section>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"text\" i18n=\"@@execNoModules\">No running modules on the system</div>\n    </div>\n</ng-template>\n<ng-template #empty_function_state>\n    <div class=\"info-block\">\n        <div class=\"text\" i18n=\"@@execNoFunctions\">No executable methods on the selected module</div>\n    </div>\n</ng-template>\n","import {\n    Component,\n    forwardRef,\n    Input,\n    ViewChild,\n    OnInit,\n    SimpleChanges,\n    OnChanges,\n    LOCALE_ID,\n    Inject\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\n\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { timeFormatString } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n    selector: 'a-time-field',\n    templateUrl: './time-field.component.html',\n    styleUrls: ['./time-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class TimeFieldComponent extends BaseDirective\n    implements OnInit, OnChanges, ControlValueAccessor {\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    /** String representing the currently set time */\n    public date: number = dayjs().valueOf();\n    /** String representing the currently set time */\n    public time: string = dayjs().format('HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: Identity[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n\n    private date_pipe: DatePipe;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    constructor(@Inject(LOCALE_ID) private _locale: string) {\n        super();\n        this.date_pipe = new DatePipe(this._locale);\n    }\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = dayjs(this.date)\n            .hour(+time[0])\n            .minute(+time[1]);\n        if (\n            date.minute() % 15 !== 0 &&\n            !this._time_options.find(option => option.id === date.format('HH:mm'))\n        ) {\n            this._time_options.push({\n                name: `${this.date_pipe.transform(date.toDate(), timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            this._time_options.sort((a, b) => `${a.id}`.localeCompare(`${b.id}`));\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = dayjs(this.date)\n                .hour(+time[0])\n                .minute(+time[1]);\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        const date = dayjs(this.date);\n        this.time = date.format('HH:mm');\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe(state => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = dayjs();\n        let date = dayjs(datestamp);\n        const blocks: Identity[] = [];\n        if (show_past || date.isAfter(now, 'd')) {\n            date = date.startOf('d');\n        }\n        date = date.minute(Math.ceil(date.minute() / step) * step);\n        const end = date.endOf('d');\n        // Add options for the rest of the day\n        while (date.isBefore(end, 'm')) {\n            blocks.push({\n                name: `${this.date_pipe.transform(date.toDate(), timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            date = date.add(step, 'm');\n        }\n        return blocks;\n    }\n}\n","<div class=\"time-field\" role=\"button\" form-field tabindex=\"0\" (keydown.enter)=\"showSelect()\" *ngIf=\"!show_select\">\n    <div class=\"display\">\n        <input matInput type=\"time\" [ngModel]=\"time\" (ngModelChange)=\"setValue($event)\" />\n    </div>\n    <div class=\"icon\" (tapped)=\"showSelect()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_select ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-form-field appearance=\"outline\" *ngIf=\"show_select\">\n    <mat-select #select [value]=\"time\" (valueChange)=\"setValue($event)\">\n        <mat-option *ngFor=\"let option of time_options\" [value]=\"option.id\">\n            {{ option.name }}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n","import { Component, OnInit, Renderer2, ViewChild, ElementRef } from '@angular/core';\n\nimport { EngineDebugService } from 'src/app/services/debug.service';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND_BIDIR } from '../../globals/angular-animations';\nimport { BaseDirective } from '../../globals/base.directive';\nimport { eventToPoint } from '../../utilities/general.utilities';\nimport { Point } from '../../utilities/types.utilities';\n\n@Component({\n    selector: 'app-debug-output',\n    templateUrl: './debug-output.component.html',\n    styleUrls: ['./debug-output.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND_BIDIR]\n})\nexport class DebugOutputComponent extends BaseDirective implements OnInit {\n    /** Whether display output is shown */\n    public show_content: boolean = true;\n    /** Display string for debug logs */\n    public logs: string;\n    /** Height of the debug console */\n    public height: number = 384;\n    /** Width of the debug console */\n    public width: number = 768;\n    /** Toggle to resize the terminal display */\n    public resize: boolean;\n    /** Start point for resizing the console box */\n    private _resize_start: Point;\n\n    @ViewChild('content', { static: false }) private _content_el: ElementRef<HTMLDivElement>;\n\n    /** Whether user is listening for debug information */\n    public get is_enabled(): boolean {\n        return this._service.is_listening;\n    }\n    constructor(private _service: EngineDebugService, private _renderer: Renderer2) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this._service.events.subscribe(_ => {\n                this.logs = this._service.terminal_string;\n            })\n        );\n    }\n\n    /** Clear all the debug logs */\n    public clearDebugMessages() {\n        this._service.clearEvents();\n    }\n\n    public startResize(event: MouseEvent | TouchEvent, dir: 'x' | 'y' | 'xy') {\n        this._resize_start = eventToPoint(event);\n        if (event instanceof MouseEvent) {\n            this.subscription(\n                'resize_move',\n                this._renderer.listen('window', 'mousemove', event => this.resizeMove(event, dir))\n            );\n            this.subscription(\n                'resize_end',\n                this._renderer.listen('window', 'mouseup', _ => {\n                    this.unsub('resize_move');\n                    this.unsub('resize_end');\n                    const box = this._content_el.nativeElement.getBoundingClientRect();\n                    this.height = box.height;\n                    this.width = box.width;\n                })\n            );\n        } else {\n            this.subscription(\n                'resize_move',\n                this._renderer.listen('window', 'touchmove', event => this.resizeMove(event, dir))\n            );\n            this.subscription(\n                'resize_end',\n                this._renderer.listen('window', 'touchend', _ => {\n                    this.unsub('resize_move');\n                    this.unsub('resize_end');\n                    const box = this._content_el.nativeElement.getBoundingClientRect();\n                    this.height = box.height;\n                    this.width = box.width;\n                })\n            );\n        }\n    }\n\n    private resizeMove(event: MouseEvent | TouchEvent, dir: 'x' | 'y' | 'xy') {\n        const point = eventToPoint(event);\n        const diff = { x: point.x - this._resize_start.x, y: point.y - this._resize_start.y };\n        if (dir.indexOf('x') >= 0) {\n            this.width = this.width - diff.x;\n        }\n        if (dir.indexOf('y') >= 0) {\n            this.height = this.height - diff.y;\n        }\n        this._resize_start = point;\n        this.timeout('resize', () => this.resize = !this.resize, 50);\n    }\n\n}\n","<ng-container *ngIf=\"is_enabled\">\n    <div class=\"debug-output\" [class.disabled]=\"!show_content\">\n        <div class=\"content\" #content [@show]=\"show_content ? 'show' : 'hide'\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\n            <div class=\"header\">\n                <div class=\"text\" i18n=\"@@debugConsole\">Debug Console</div>\n                <button mat-button (tapped)=\"clearDebugMessages()\" i18n=\"@@clear\">Clear</button>\n            </div>\n            <a-terminal [content]=\"logs\" [resize]=\"resize\"></a-terminal>\n            <div\n                class=\"resize-bar top\"\n                (mousedown)=\"startResize($event, 'y')\"\n                (touchstart)=\"startResize($event, 'y')\"\n            ></div>\n            <div\n                class=\"resize-bar left\"\n                (mousedown)=\"startResize($event, 'x')\"\n                (touchstart)=\"startResize($event, 'x')\"\n            ></div>\n            <div\n                class=\"resize-bar top-left\"\n                (mousedown)=\"startResize($event, 'xy')\"\n                (touchstart)=\"startResize($event, 'xy')\"\n            ></div>\n        </div>\n        <button mat-icon-button (tapped)=\"show_content = !show_content\">\n            <app-icon\n                [icon]=\"{ class: show_content ? 'backoffice-cross' : 'backoffice-terminal' }\"\n            ></app-icon>\n        </button>\n    </div>\n</ng-container>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'application-form',\n    templateUrl: './application-form.component.html',\n    styleUrls: ['./application-form.component.scss']\n})\nexport class ApplicationFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n}\n","<div class=\"application form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"fieldset\">\n            <div class=\"field\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"application-name\"\n                    [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                    i18n=\"@@nameLabel\"\n                    >Name<span>*</span>:</label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"application-name\"\n                        placeholder=\"Application Name\"\n                        i18n-placeholder=\"@@appNamePlaceholder\"\n                        formControlName=\"name\"\n                        required\n                    />\n                    <mat-error *ngIf=\"form.controls.name.invalid\" i18n=\"@@appNameError\"\n                        >Application name is required</mat-error\n                    >\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.scopes\">\n                <label for=\"scopes\" i18n=\"@@scopesLabel\">Scopes:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"scopes\"\n                        placeholder=\"Access Scopes\"\n                        i18n-placeholder=\"@@scopePlaceholder\"\n                        formControlName=\"scopes\"\n                    />\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.skip_authorization\">\n            <mat-checkbox\n                name=\"skip-authorization\"\n                formControlName=\"skip_authorization\"\n                i18n=\"@@skipAuthLabel\"\n                >Skip Authorization</mat-checkbox\n            >\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.redirect_uri\">\n            <label for=\"redirect-uri\" i18n=\"@@redirectLabel\">Login URL:</label>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"redirect-uri\"\n                    placeholder=\"Redirect URI e.g. http://localhost:4200/oauth-resp.html\"\n                    i18n-placeholder=\"@@redirectPlaceholder\"\n                    formControlName=\"redirect_uri\"\n                />\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ENTER, COMMA } from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material/chips';\n\nimport { AuthType } from '@placeos/ts-client';\n\n@Component({\n  selector: 'broker-form',\n  templateUrl: './broker-form.component.html',\n  styleUrls: ['./broker-form.component.scss']\n})\nexport class BrokerFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n    /** List of available authentication types */\n    public auth_types = [\n        { id: AuthType.Certificate, name: 'Certificate' },\n        { id: AuthType.NoAuth, name: 'No Authentication' },\n        { id: AuthType.UserPassword, name: 'Password' },\n    ];\n    /** List of separator characters for filters */\n    public readonly separators: number[] = [ENTER, COMMA];\n    /** Whether to show password field value */\n    public show_password: boolean;\n\n    public get filters(): string[] {\n        return this.form.controls.filters.value;\n    }\n\n    /**\n     * Add a filter to the list of filters for the item\n     * @param event Input event\n     */\n    public addFilter(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.filter_list) return;\n        const input = event.input;\n        const value = event.value;\n        const filter_list = this.filters;\n        if ((value || '').trim()) {\n            filter_list.push(value);\n            this.form.controls.filters.setValue(filter_list);\n        }\n\n        // Reset the input value\n        if (input) {\n            input.value = '';\n        }\n    }\n\n    /**\n     * Remove filter from the list\n     * @param existing_filter Filter to remove\n     */\n    public removeFilter(existing_filter: string): void {\n        if (!this.form || !this.form.controls.filter_list) return;\n        const filter_list = this.filters;\n        const index = filter_list.indexOf(existing_filter);\n\n        if (index >= 0) {\n            filter_list.splice(index, 1);\n            this.form.controls.filters.setValue(filter_list);\n        }\n    }\n}\n","<div class=\"broker form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"broker-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"@@nameLabel\"\n                >Name<span>*</span>:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"broker-name\"\n                    placeholder=\"Broker Name\"\n                    i18n-placeholder=\"@@brokerNamePlaceholder\"\n                    formControlName=\"name\"\n                    required\n                />\n                <mat-error i18n=\"@@brokerNameError\">Broker name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.description\">\n            <label for=\"description\" i18n=\"@@descriptionLabel\">Description:</label>\n            <mat-form-field appearance=\"outline\">\n                <textarea\n                    matInput\n                    name=\"description\"\n                    placeholder=\"Description\"\n                    i18n-placeholder=\"@@descriptionPlaceholder\"\n                    formControlName=\"description\"\n                ></textarea>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"host\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"@@hostLabel\"\n                >Host<span>*</span>:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"host\"\n                    placeholder=\"Host\"\n                    i18n-placeholder=\"@@hostPlaceholder\"\n                    formControlName=\"name\"\n                    required\n                />\n                <mat-error i18n=\"@@hostError\">Host is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"fieldset\">\n            <div class=\"field\" *ngIf=\"form.controls.port\">\n                <label\n                    for=\"port-number\"\n                    [class.error]=\"form.controls.port.invalid && form.controls.port.touched\"\n                    i18n=\"@@portLabel\"\n                >\n                    Port Number<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"port-number\"\n                        type=\"number\"\n                        placeholder=\"Port Number\"\n                        i18n-placeholder=\"@@portPlaceholder\"\n                        formControlName=\"port\"\n                    />\n                    <mat-error i18n=\"@@portError\">\n                        A valid port number between 1 - 65535 is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field checkbox\" *ngIf=\"form.controls.tls\">\n                <mat-checkbox name=\"tls\" formControlName=\"tls\" i18n=\"@@tlsLabel\">TLS</mat-checkbox>\n            </div>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.auth_type\">\n            <label for=\"type\">Auth Type: </label>\n            <mat-form-field appearance=\"outline\">\n                <mat-select name=\"type\" formControlName=\"auth_type\">\n                    <mat-option *ngFor=\"let type of auth_types\" [value]=\"type.id\">\n                        {{ type.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <ng-container *ngIf=\"form.controls.auth_type.value === 2\">\n            <div class=\"fieldset\">\n                <div class=\"field\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"host\"\n                        [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                        i18n=\"@@usernameLabel\"\n                        >Username<span>*</span>:</label\n                    >\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"username\"\n                            placeholder=\"Username\"\n                            i18n-placeholder=\"@@usernamePlaceholder\"\n                            formControlName=\"name\"\n                            required\n                        />\n                        <mat-error i18n=\"@@usernameError\">Username is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\" *ngIf=\"form.controls.password\">\n                    <label\n                        for=\"new-password\"\n                        [class.error]=\"\n                            form.controls.password.invalid && form.controls.password.touched\n                        \"\n                        i18n=\"@@passwordLabel\"\n                    >\n                        Password:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"new-password\"\n                            autocomplete=\"new-password\"\n                            [type]=\"show_password ? 'text' : 'password'\"\n                            placeholder=\"Password\"\n                            i18n-placeholder=\"@@passwordPlaceholder\"\n                            formControlName=\"password\"\n                        />\n                        <app-icon\n                            matSuffix\n                            [icon]=\"{ class: 'material-icons', content: 'visibility' }\"\n                            (mousedown)=\"show_password = true\"\n                            (window:mouseup)=\"show_password = false\"\n                            (touchstart)=\"show_password = true\"\n                            (window:touchend)=\"show_password = false\"\n                        ></app-icon>\n                        <mat-error i18n=\"@@passordError\">A valid password is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </ng-container>\n        <ng-container *ngIf=\"form.controls.auth_type.value === 0\">\n            <div class=\"field\" *ngIf=\"form.controls.certificate\">\n                <label for=\"cert\" i18n=\"@@certificateLabel\">Certificate:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"cert\"\n                        placeholder=\"Certificate\"\n                        i18n-placeholder=\"@@certificatePlaceholder\"\n                        formControlName=\"certificate\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n        </ng-container>\n        <div class=\"field\" *ngIf=\"form.controls.secret\">\n            <label for=\"secret\" i18n=\"@@secretLabel\">Secret:</label>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"secret\"\n                    placeholder=\"Secret\"\n                    i18n-placeholder=\"@@secretPlaceholder\"\n                    formControlName=\"secret\"\n                />\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.filters\">\n            <label for=\"filters\" i18n=\"@@filtersLabel\">\n                Filters:\n            </label>\n            <mat-form-field appearance=\"outline\">\n                <mat-chip-list #chipList name=\"filters\" aria-label=\"Broker Filters\">\n                    <mat-chip\n                        *ngFor=\"let filter of filters\"\n                        [selectable]=\"true\"\n                        [removable]=\"true\"\n                        (removed)=\"removeFilter(filter)\"\n                    >\n                        {{ filter }}\n                        <app-icon matChipRemove [icon]=\"{ class: 'backoffice-cross' }\"></app-icon>\n                    </mat-chip>\n                    <input\n                        placeholder=\"Broker filters...\"\n                        i18n-placeholder=\"@@brokerFiltersPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addFilter($event)\"\n                    />\n                </mat-chip-list>\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { EncryptionLevel } from '@placeos/ts-client';\n\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'domain-form',\n    templateUrl: './domain-form.component.html',\n    styleUrls: ['./domain-form.component.scss']\n})\nexport class DomainFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n}\n","<div class=\"domain form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"fieldset\">\n            <div class=\"field\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"domain-name\"\n                    [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                    i18n=\"@@nameLabel\"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"domain-name\"\n                        placeholder=\"Domain Name\"\n                        i18n-placeholder=\"@@domainNamePlaceholder\"\n                        formControlName=\"name\"\n                        required\n                    />\n                    <mat-error *ngIf=\"form.controls.name.invalid\" i18n=\"@@domainNameError\">\n                        Domain name is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.domain\">\n                <label\n                    for=\"domain\"\n                    [class.error]=\"form.controls.domain.invalid && form.controls.domain.touched\"\n                    i18n=\"@@domainLabel\"\n                >\n                    Domain:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"domain\"\n                        placeholder=\"Domain e.g localhost\"\n                        i18n=\"@@domainPlaceholder\"\n                        formControlName=\"domain\"\n                    />\n                    <mat-error i18n=\"@@domainError\">\n                        A valid Domain is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.login_url\">\n            <label\n                for=\"login-url\"\n                [class.error]=\"form.controls.login_url.invalid && form.controls.login_url.touched\"\n                i18n=\"@@loginUrlLabel\"\n            >\n                Login URL:\n            </label>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"login-url\"\n                    placeholder=\"Login URL\"\n                    i18n=\"@@loginUrlPlaceholder\"\n                    formControlName=\"login_url\"\n                />\n                <mat-error *ngIf=\"form.controls.login_url.invalid\" i18n=\"@@loginUrlError\">\n                    A valid Login URL is required\n                </mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.logout_url\">\n            <label\n                for=\"logout-url\"\n                [class.error]=\"form.controls.logout_url.invalid && form.controls.logout_url.touched\"\n                i18n=\"@@logoutUrlLabel\"\n            >\n                Logout URL:\n            </label>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"logout-url\"\n                    placeholder=\"Logout URL\"\n                    i18n-placeholder=\"@@logoutUrlPlaceholder\"\n                    formControlName=\"logout_url\"\n                />\n                <mat-error *ngIf=\"form.controls.logout_url.invalid\" i18n=\"@@logoutUrlError\">\n                    A valid Logout URL is required\n                </mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.description\">\n            <label for=\"description\" i18n=\"@@descriptionLabel\">Description:</label>\n            <mat-form-field appearance=\"outline\">\n                <textarea\n                    matInput\n                    name=\"description\"\n                    placeholder=\"Description\"\n                    i18n=\"@@descriptionPlaceholder\"\n                    formControlName=\"description\"\n                ></textarea>\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport {\n    EngineRepositoryCommit,\n    EngineRepository,\n    EngineRepositoriesService,\n    EngineDriverRole,\n} from '@placeos/ts-client';\n\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map } from 'rxjs/operators';\nimport { of, Subject, Observable } from 'rxjs';\n\nimport * as dayjs from 'dayjs';\nimport * as relativeTime from 'dayjs/plugin/relativeTime';\n\ndayjs.extend(relativeTime);\n\n@Component({\n    selector: 'driver-form',\n    templateUrl: './driver-form.component.html',\n    styleUrls: ['./driver-form.component.scss'],\n})\nexport class DriverFormComponent extends BaseDirective implements OnChanges {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n    /** List of driver roles */\n    public role_types: Identity[] = [\n        { id: EngineDriverRole.SSH, name: 'SSH' },\n        { id: EngineDriverRole.Device, name: 'Device' },\n        { id: EngineDriverRole.Service, name: 'Service' },\n        { id: EngineDriverRole.Websocket, name: 'Websocket' },\n        { id: EngineDriverRole.Logic, name: 'Logic' },\n    ];\n\n    /** Driver used as a template for the new driver being created */\n    public base_repo: EngineRepository;\n    /** Driver used as a template for the new driver being created */\n    public base_commit: EngineRepositoryCommit;\n    /** Driver used as a template for the new driver being created */\n    public base_driver: Identity;\n    /** List of available drivers for the active repository */\n    public driver_list: Identity[] = [];\n    /** List of available commits for the active driver */\n    public commit_list: Identity[] = [];\n    /** List of items from an API search */\n    public driver_list$: Observable<Identity[]>;\n    /** List of items from an API search */\n    public commit_list$: Observable<Identity[]>;\n    /** Subject holding the value of the search */\n    public readonly repo$ = new Subject<string>();\n    /** Subject holding the value of the search */\n    public readonly driver$ = new Subject<string>();\n    /** Whether driver details are being loaded */\n    public loading: boolean;\n    /** Whether driver listings are being loaded */\n    public loading_drivers: boolean;\n    /** Whether driver commits are being loaded */\n    public loading_commits: boolean;\n\n    public get editing(): boolean {\n        return this.form.controls.id && this.form.controls.id.value;\n    }\n\n    /** Service for handling driver discovery */\n    public get discovery_service(): EngineRepositoriesService {\n        return this._service.Repositories;\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.driver_list$ = this.repo$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap((repo_id) => {\n                this.loading_drivers = true;\n                this.driver_list = [];\n                return this._service.Repositories.listDrivers(repo_id);\n            }),\n            catchError((_) => {\n                this._service.notifyError(`Error loading driver list. Error: ${_.message || _}`);\n                return of([]);\n            }),\n            map((list: any[]) => {\n                this.loading_drivers = false;\n                this.commit_list = [];\n                return (list || []).map((driver) => ({\n                    id: driver,\n                    name: driver.replace(/\\//g, ' > '),\n                }));\n            })\n        );\n        this.subscription(\n            'driver_list',\n            this.driver_list$.subscribe((list) => (this.driver_list = list))\n        );\n        this.commit_list$ = this.driver$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap((driver_id) => {\n                this.loading_commits = true;\n                this.commit_list = [];\n                return this._service.Repositories.listCommits(this.base_repo.id, {\n                    driver: `${driver_id}`,\n                });\n            }),\n            catchError((_) => {\n                this._service.notifyError(\n                    `Error loading driver's commit list. Error: ${_.message || _}`\n                );\n                return of([]);\n            }),\n            map((list: any[]) => {\n                this.loading_commits = false;\n                if (this.form.controls.commit) {\n                    this.base_commit = this.commit_list.find(\n                        (commit) => commit.id === this.form.controls.commit.value\n                    ) as any;\n                }\n                return (list || []).map((commit: EngineRepositoryCommit) => {\n                    const date = dayjs(commit.date);\n                    return {\n                        id: commit.commit,\n                        name: `${commit.subject}`,\n                        extra: date.isAfter(dayjs().subtract(1, 'm'))\n                            ? date.fromNow()\n                            : date.format('DD MMM YYYY'),\n                    };\n                });\n            })\n        );\n        this.subscription(\n            'commit_list',\n            this.commit_list$.subscribe((list) => (this.commit_list = list))\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.form) {\n            this.initDriver();\n        }\n    }\n\n    /**\n     * Update the list of available drivers\n     * @param repo Repository to grab the drivers for\n     */\n    public async updateDriverList(repo: EngineRepository) {\n        this.form.controls.repository_id.setValue(repo.id);\n        this.base_repo = repo;\n        const promise = this.driver_list$.toPromise();\n        this.repo$.next(repo.id);\n        return await promise;\n    }\n\n    /**\n     * Update the list of available commits\n     * @param driver Driver to grab commits for\n     */\n    public updateCommitList(driver: Identity) {\n        this.form.controls.file_name.setValue(driver.id);\n        this.base_driver = driver;\n        const promise = this.commit_list$.toPromise();\n        this.driver$.next(`${driver.id}`);\n        return promise;\n    }\n\n    /**\n     *\n     * @param event Details of the driver selected\n     */\n    public setDriverBase(event: Identity) {\n        this.form.controls.commit.setValue(event.id);\n        this.base_commit = event as any;\n        this.loading = true;\n        this._service.Repositories.driverDetails(this.base_repo.id, {\n            driver: `${this.base_driver.id}`,\n            commit: `${event.id}`,\n        }).then(\n            (driver) => {\n                this.loading = false;\n                if (!this.form.controls.id.value) {\n                    this.form.controls.name.setValue(driver.descriptive_name || '');\n                    this.form.controls.module_name.setValue(driver.generic_name || '');\n                    this.form.controls.class_name.setValue(this.base_driver.id || '');\n                    this.form.controls.default_port.setValue(\n                        driver.tcp_port || driver.udp_port || ''\n                    );\n                    this.form.controls.default_uri.setValue(driver.uri_base || '');\n                    this.form.controls.role.setValue(\n                        driver.tcp_port || driver.udp_port\n                            ? EngineDriverRole.Device\n                            : driver.uri_base\n                            ? EngineDriverRole.Service\n                            : EngineDriverRole.Logic\n                    );\n                    this.form.controls.settings.setValue(driver.default_settings || '');\n                    this.form.controls.description.setValue(driver.description || '');\n                }\n            },\n            () => (this.loading = false)\n        );\n    }\n\n    /**\n     * Initialise the driver details if set\n     */\n    private async initDriver() {\n        if (this.form.controls.repository_id && this.form.controls.repository_id.value) {\n            const value = this.form.controls.repository_id.value;\n            const repo = await this.discovery_service.show(value);\n            this.base_repo = repo;\n            this.updateDriverList(this.base_repo);\n            const driver = this.form.controls.file_name.value;\n            this.base_driver =\n                typeof driver === 'string'\n                    ? { id: driver, name: driver.split('/').join(' > ') }\n                    : driver;\n            this.updateCommitList(this.base_driver);\n        }\n    }\n}\n","<div class=\"driver form\" *ngIf=\"form\">\n    <div class=\"fieldset\">\n        <div class=\"field discovery\" *ngIf=\"form.controls.repository_id && !editing\">\n            <label for=\"repo\" i18n=\"@@repoLabel\">Repository: </label>\n            <item-search-field\n                name=\"repo\"\n                [service]=\"discovery_service\"\n                [ngModel]=\"base_repo\"\n                (ngModelChange)=\"updateDriverList($event)\"\n            ></item-search-field>\n        </div>\n        <div\n            class=\"field discovery\"\n            *ngIf=\"form.controls.file_name && driver_list && driver_list.length && !editing\"\n        >\n            <label for=\"driver\" i18n=\"@@driverLabel\">Driver Base: </label>\n            <item-search-field\n                name=\"driver\"\n                [options]=\"driver_list\"\n                [loading]=\"loading_drivers\"\n                [ngModel]=\"base_driver\"\n                (ngModelChange)=\"updateCommitList($event)\"\n            ></item-search-field>\n        </div>\n        <div\n            class=\"field discovery\"\n            *ngIf=\"form.controls.commit && commit_list && commit_list.length\"\n        >\n            <label for=\"commit\" i18n=\"@@driverCommitLabel\">Driver Commit: </label>\n            <item-search-field\n                name=\"commit\"\n                [options]=\"commit_list\"\n                [loading]=\"loading_commits\"\n                [ngModel]=\"base_commit\"\n                (ngModelChange)=\"setDriverBase($event)\"\n            ></item-search-field>\n        </div>\n    </div>\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\">\n            <ng-container\n                *ngIf=\"(form.controls.commit && form.controls.commit.value) || base_commit\"\n            >\n                <div class=\"field\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"driver-name\"\n                        [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                        i18n=\"@@nameLabel\"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"driver-name\"\n                            placeholder=\"Driver Name\"\n                            i18n-placeholder=\"@@driverNamePlaceholder\"\n                            formControlName=\"name\"\n                            required\n                        />\n                        <mat-error *ngIf=\"form.controls.name.invalid\" i18n=\"@@driverNameError\">\n                            Driver name is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\" *ngIf=\"form.controls.role\">\n                    <label for=\"role\" i18n=\"@@roleLabel\">Role: </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select name=\"role\" formControlName=\"role\">\n                            <mat-option *ngFor=\"let type of role_types\" [value]=\"type.id\">\n                                {{ type.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\" *ngIf=\"form.controls.description\">\n                    <label for=\"description\" i18n=\"@@descriptionLabel\">Description:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <textarea\n                            matInput\n                            name=\"description\"\n                            placeholder=\"Description\"\n                            i18n-placeholder=\"@@descriptionPlaceholder\"\n                            formControlName=\"description\"\n                        ></textarea>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\" *ngIf=\"form.controls.module_name\">\n                    <label\n                        for=\"module-name\"\n                        [class.error]=\"\n                            form.controls.module_name.invalid && form.controls.module_name.touched\n                        \"\n                        i18n=\"@@moduleNameLabel\"\n                    >\n                        Module Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"module-name\"\n                            placeholder=\"Module Name\"\n                            i18n=\"@@moduleNamePlaceholder\"\n                            formControlName=\"module_name\"\n                            required\n                        />\n                        <mat-error\n                            *ngIf=\"form.controls.module_name.invalid\"\n                            i18n=\"@@moduleNameError\"\n                        >\n                            Module name is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\" *ngIf=\"form.controls.default_uri\">\n                    <label for=\"default-uri\" i18n=\"@@defaultUriLabel\">Default URI:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"default-uri\"\n                            placeholder=\"Default URI\"\n                            i18n=\"@@defaultUriPlaceholder\"\n                            formControlName=\"default_uri\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"fieldset\">\n                    <div class=\"field\" *ngIf=\"form.controls.default_port\">\n                        <label\n                            for=\"default-port\"\n                            [class.error]=\"\n                                form.controls.default_port.invalid &&\n                                form.controls.default_port.touched\n                            \"\n                            i18n=\"@@defaultPortLabel\"\n                        >\n                            Default Port Number:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"default-port\"\n                                type=\"number\"\n                                placeholder=\"Port Number\"\n                                i18n=\"@@defaultPortPlaceholder\"\n                                formControlName=\"default_port\"\n                            />\n                            <mat-error\n                                *ngIf=\"form.controls.default_port.invalid\"\n                                i18n=\"@@portError\"\n                            >\n                                A valid port number between 1 - 65535 is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"field\" *ngIf=\"form.controls.ignore_connected\">\n                        <mat-checkbox\n                            name=\"ignore-connected\"\n                            formControlName=\"ignore_connected\"\n                            i18n=\"@@ignoreConnectedLabel\"\n                        >\n                            Ignore Connected\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </ng-container>\n        </form>\n    </ng-container>\n</div>\n<ng-template #load_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"48\"></mat-spinner>\n        </div>\n        <div class=\"text\" i18n=\"@@driverCommitLoading\">Loading driver details for commit...</div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'ldap-source-form',\n    templateUrl: './ldap-source-form.component.html',\n    styleUrls: ['./ldap-source-form.component.scss']\n})\nexport class LdapSourceFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n    /** List of available authentication schemes */\n    public auth_methods: Identity[] = [\n        { id: 'plain', name: 'Plain' },\n        { id: 'ssl', name: 'SSL' },\n        { id: 'tls', name: 'TLS' }\n    ];\n}\n","<div class=\"module form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"auth-source-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"@@authSourceNameLabel\"\n            >\n                Name<span>*</span>:\n            </label>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"auth-source-name\"\n                    placeholder=\"Auth Source Name\"\n                    i18n-placeholder=\"@@authSourceNamePlaceholder\"\n                    formControlName=\"name\"\n                    required\n                />\n                <mat-error *ngIf=\"form.controls.name.invalid\" i18n=\"@@authSourceNameError\">\n                    Auth source name is required\n                </mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"fieldset\">\n            <div class=\"field\" *ngIf=\"form.controls.host\">\n                <label\n                    for=\"host\"\n                    [class.error]=\"form.controls.host.invalid && form.controls.host.touched\"\n                    i18n=\"@@authSourceHostLabel\"\n                >\n                    Host<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"host\"\n                        placeholder=\"Host\"\n                        formControlName=\"host\"\n                        i18n-placeholder=\"@@authSourceHostPlaceholder\"\n                    />\n                    <mat-error *ngIf=\"form.controls.host.invalid\" i18n=\"@@authSourceNameError\">\n                        Host is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.port\">\n                <label for=\"port\" i18n=\"@@portLabel\">Port:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        type=\"number\"\n                        name=\"port\"\n                        placeholder=\"Port number\"\n                        i18n=\"@@portPlaceholder\"\n                        formControlName=\"port\"\n                    />\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"fieldset\">\n            <div class=\"field\" *ngIf=\"form.controls.uid\">\n                <label for=\"uid\" i18n=\"@@authSourceUidLabel\">User ID Key:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"uid\"\n                        placeholder=\"User ID Key\"\n                        i18n-placeholder=\"@@authSourceUidPlaceholder\"\n                        formControlName=\"uid\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field type\" *ngIf=\"form.controls.auth_method\">\n                <label for=\"auth-method\" i18n=\"@@authSourceMethodLabel\"\n                    >Authentication Method:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"auth-method\" formControlName=\"auth_method\">\n                        <mat-option\n                            *ngFor=\"let type of auth_methods\"\n                            [value]=\"type.id\"\n                            i18n=\"@@authSourceMethodOptions\"\n                        >\n                            {type.name, select, Plain { Plain } SSL { SSL } TLS { TLS } other {\n                            Other }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"fieldset\">\n            <div class=\"field\" *ngIf=\"form.controls.base\">\n                <label\n                    for=\"base\"\n                    [class.error]=\"form.controls.base.invalid && form.controls.base.touched\"\n                    i18n=\"@@authSourceBaseLabel\"\n                >\n                    Base<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"base\"\n                        placeholder=\"Base\"\n                        i18n-placeholder=\"@@authSourceBasePlaceholder\"\n                        formControlName=\"base\"\n                    />\n                    <mat-error *ngIf=\"form.controls.base.invalid\" i18n=\"@@authSourceBaseError\">\n                        Base is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.bind_dn\">\n                <label for=\"bind-dn\" i18n=\"@@authSourceBindDnLabel\">Bind DN:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"bind-dn\"\n                        placeholder=\"Bind DN\"\n                        i18n=\"@@authSourceBindDnPlaceholder\"\n                        formControlName=\"bind_dn\"\n                    />\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"fieldset\">\n            <div class=\"field\" *ngIf=\"form.controls.password\">\n                <label for=\"password\" i18n=\"@@passwordLabel\">Password:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        i18n-placeholder=\"@@passwordPlaceholder\"\n                        formControlName=\"password\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.filter\">\n                <label for=\"filter\" i18n=\"@@authSourceFilterLabel\">Filter:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"filter\"\n                        placeholder=\"Filter\"\n                        i18n-placeholder=\"@@authSourceFilterPlaceholder\"\n                        formControlName=\"filter\"\n                    />\n                </mat-form-field>\n            </div>\n        </div>\n    </form>\n</div>\n","import { Component, Input, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { EncryptionLevel, EngineDriverRole } from '@placeos/ts-client';\n\nimport { Identity, EngineServiceLike } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\n\n@Component({\n    selector: 'module-form',\n    templateUrl: './module-form.component.html',\n    styleUrls: ['./module-form.component.scss']\n})\nexport class ModuleFormComponent extends BaseDirective implements OnDestroy {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n    /** Whether system is readonly */\n    @Input() public readonly: boolean;\n\n    /** Service for handling system */\n    public get system_service(): EngineServiceLike {\n        return this._service.Systems;\n    }\n\n    /** Service for handling drivers */\n    public get driver_service(): EngineServiceLike {\n        return this._service.Drivers;\n    }\n\n    /** Role of the selected driver */\n    public get role(): string {\n        if (!this.form.controls.driver) {\n            return 'service';\n        }\n        const driver = this.form.controls.driver.value;\n        if (!driver) {\n            return 'logic';\n        }\n        switch (driver.role) {\n            case EngineDriverRole.SSH:\n                return 'ssh';\n            case EngineDriverRole.Device:\n                return 'device';\n            case EngineDriverRole.Service:\n                return 'service';\n            case EngineDriverRole.Websocket:\n                return 'websocket';\n        }\n        return 'logic';\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n}\n","<div class=\"module form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.driver\">\n            <label\n                for=\"driver\"\n                [class.error]=\"form.controls.driver.invalid && form.controls.driver.touched\"\n                i18n=\"@@driverLabel\"\n            >\n                Driver<span>*</span>:\n            </label>\n            <item-search-field\n                name=\"driver\"\n                [service]=\"driver_service\"\n                formControlName=\"driver\"\n            ></item-search-field>\n            <div\n                class=\"error\"\n                *ngIf=\"form.controls.driver.invalid && form.controls.driver.touched\"\n                i18n=\"@@driverError\"\n            >\n                Driver is required\n            </div>\n        </div>\n        <ng-container *ngIf=\"!form.controls.driver || form.controls.driver.value\">\n            <div class=\"field\" *ngIf=\"form.controls.system && role === 'logic'\">\n                <label\n                    for=\"system\"\n                    [class.error]=\"form.controls.system.invalid && form.controls.system.touched\"\n                    i18n=\"@@systemLabel\"\n                    >Control System<span *ngIf=\"role === 'logic'\">*</span>:\n                </label>\n                <ng-container *ngIf=\"!readonly; else readonly_system\">\n                    <item-search-field\n                        name=\"system\"\n                        [service]=\"system_service\"\n                        formControlName=\"system\"\n                    ></item-search-field>\n                    <div\n                        class=\"error\"\n                        *ngIf=\"form.controls.system.invalid && form.controls.system.touched\"\n                        i18n=\"@@systemError\"\n                    >\n                        Control System is required\n                    </div>\n                </ng-container>\n                <ng-template #readonly_system>\n                    <div class=\"value\">\n                        {{ form.controls.system.value?.name }}\n                        <span>{{ form.controls.system.value?.id }}</span>\n                    </div>\n                </ng-template>\n            </div>\n            <div class=\"fieldset\">\n                <div class=\"field\" *ngIf=\"form.controls.ip && role !== 'logic'\">\n                    <label\n                        for=\"ip\"\n                        [class.error]=\"form.controls.ip.invalid && form.controls.ip.touched\"\n                        i18n=\"@@ipAddressLabel\"\n                    >\n                        IP Address<span *ngIf=\"role === 'ssh' || role === 'device'\">*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"ip\"\n                            placeholder=\"IP Address\"\n                            i18n-placeholder=\"@@ipAddressPlaceholder\"\n                            formControlName=\"ip\"\n                        />\n                        <mat-error *ngIf=\"form.controls.ip.invalid\" i18n=\"@@ipAddressError\">\n                            A valid IP address is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\" *ngIf=\"form.controls.port && role !== 'logic'\">\n                    <label\n                        for=\"port-number\"\n                        [class.error]=\"form.controls.port.invalid && form.controls.port.touched\"\n                        i18n=\"@@portLabel\"\n                    >\n                        Port Number<span *ngIf=\"role === 'ssh' || role === 'device'\">*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"port-number\"\n                            type=\"number\"\n                            placeholder=\"Port Number\"\n                            i18n-placeholder=\"@@portPlaceholder\"\n                            formControlName=\"port\"\n                        />\n                        <mat-error *ngIf=\"form.controls.port.invalid\" i18n=\"@@portError\">\n                            A valid port number between 1 - 65535 is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.tls && role !== 'logic'\">\n                <mat-checkbox name=\"tls\" formControlName=\"tls\" i18n=\"@@tlsLabel\">TLS</mat-checkbox>\n            </div>\n            <div\n                class=\"field\"\n                *ngIf=\"form.controls.udp && role !== 'logic' && role !== 'websocket'\"\n            >\n                <mat-checkbox name=\"udp\" formControlName=\"udp\" i18n=\"@@udpLabel\">UDP</mat-checkbox>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.makebreak && role !== 'logic'\">\n                <mat-checkbox name=\"makebreak\" formControlName=\"makebreak\" i18n=\"@@makebreakLabel\"\n                    >Makebreak</mat-checkbox\n                >\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.ignore_connected && role !== 'logic'\">\n                <mat-checkbox\n                    name=\"ignore-connected\"\n                    i18n=\"@@ignoreConnectedLabel\"\n                    formControlName=\"ignore_connected\"\n                >\n                    Ignore Connected\n                </mat-checkbox>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.uri && role !== 'logic'\">\n                <label\n                    for=\"uri\"\n                    [class.error]=\"form.controls.uri.invalid && form.controls.uri.touched\"\n                    i18n=\"@@uriLabel\"\n                >\n                    URI<span *ngIf=\"role === 'websocket' || role === 'service'\">*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"uri\"\n                        placeholder=\"Module URI\"\n                        i18n-placeholder=\"@@uriPlaceholder\"\n                        formControlName=\"uri\"\n                    />\n                    <mat-error *ngIf=\"form.controls.uri.invalid\" i18n=\"@@uriError\"\n                        >A valid URI is required</mat-error\n                    >\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.notes\">\n                <label for=\"notes\" i18n=\"@@notesLabel\">Notes:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"notes\"\n                        placeholder=\"Module Notes\"\n                        i18n-placholder=\"@@notePlaceholder\"\n                        formControlName=\"notes\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.custom_name\">\n                <label for=\"custom-name\" i18n=\"@@customNameLabel\">Custom Name:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"custom-name\"\n                        placeholder=\"Custom Name\"\n                        i18n-placholder=\"@@customNamePlaceholder\"\n                        formControlName=\"custom_name\"\n                    />\n                </mat-form-field>\n            </div>\n        </ng-container>\n    </form>\n</div>\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Identity, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\n\n@Component({\n  selector: 'oauth-source-form',\n  templateUrl: './oauth-source-form.component.html',\n  styleUrls: ['./oauth-source-form.component.scss']\n})\nexport class OauthSourceFormComponent extends BaseDirective implements OnChanges {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n    /** List of available token request methods */\n    public token_methods: Identity[] = [\n        { id: 'get', name: 'GET' },\n        { id: 'post', name: 'POST' },\n        { id: 'put', name: 'PUT' },\n    ];\n    /** List of available authentication schemes */\n    public auth_schemes: Identity[] = [\n        { id: 'request_body', name: 'Request Body' },\n        { id: 'basic_auth', name: 'Basic Auth' },\n    ];\n    /** List of info mapping pairs */\n    public info_mapping_list: any[] = [];\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.form && this.form) {\n            if (this.form.controls.info_mappings) {\n                const map = this.form.controls.info_mappings.value || {};\n                this.info_mapping_list = Object.keys(map).map((key) => {\n                    return { Engine: key, Remote: map[key] };\n                });\n            }\n        }\n    }\n\n    public updateMappings(mappings: { Engine: string, Remote: string }[]) {\n        this.timeout('mappings', () => {\n            const map: HashMap = {};\n            for (const pair of mappings) {\n                if (pair.Engine && pair.Remote) {\n                    map[pair.Engine] = pair.Remote;\n                }\n            }\n            this.form.controls.info_mappings.setValue(map);\n        }, 200);\n    }\n\n}\n","<div class=\"module form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"auth-source-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"@@nameLabel\"\n            >\n                Name<span>*</span>:\n            </label>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"auth-source-name\"\n                    placeholder=\"Auth Source Name\"\n                    i18n-placeholder=\"@@authSourceNamePlaceholder\"\n                    formControlName=\"name\"\n                    required\n                />\n                <mat-error *ngIf=\"form.controls.name.invalid\" i18n=\"@@authSourceNameError\">\n                    Auth source name is required\n                </mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"fieldset\">\n            <div class=\"field\" *ngIf=\"form.controls.client_id\">\n                <label for=\"client-id\" i18n=\"@@authSourceClientIdLabel\">Client ID:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"client-id\"\n                        placeholder=\"Client ID\"\n                        i18n-placeholder=\"@@authSourceClientIdPlaceholder\"\n                        formControlName=\"client_id\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.client_secret\">\n                <label for=\"client-secret\" i18n=\"@@authSourceClientSecretLabel\">\n                    Client Secret:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"client-secret\"\n                        placeholder=\"Client Secret\"\n                        i18n-placeholder=\"@@authSourceClientSecretPlaceholder\"\n                        formControlName=\"client_secret\"\n                    />\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"fieldset\">\n            <div class=\"field\" *ngIf=\"form.controls.site\">\n                <label for=\"site\" i18n=\"@@authSourceSiteLabel\">Site:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"site\"\n                        placeholder=\"URL of the SSO provider\"\n                        i18n-placeholder=\"@@authSourceSitePlaceholder\"\n                        formControlName=\"site\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.scope\">\n                <label for=\"scope\" i18n=\"@@scopeLabel\">Scope:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"scope\"\n                        placeholder=\"Scope\"\n                        i18n-placeholder=\"@@scopePlaceholder\"\n                        formControlName=\"scope\"\n                    />\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"fieldset\">\n            <div class=\"field type\" *ngIf=\"form.controls.token_method\">\n                <label for=\"token-method\" i18n=\"@@authSourceTokenMethodLabel\">Token Method: </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"token-method\" formControlName=\"token_method\">\n                        <mat-option *ngFor=\"let type of token_methods\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field type\" *ngIf=\"form.controls.auth_scheme\">\n                <label for=\"auth-scheme\" i18n=\"@@authSourceSchemeLabel\">\n                    Authentication Scheme:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"auth-scheme\" formControlName=\"auth_scheme\">\n                        <mat-option *ngFor=\"let type of auth_schemes\" [value]=\"type.id\">\n                            { type.id, select, request_body { Request Body } basic_auth { Basic Auth\n                            } }\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.token_url\">\n            <label for=\"token-url\" i18n=\"@@authSourceTokenUrlLabel\">Token URL:</label>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"token-url\"\n                    placeholder=\"Token URL\"\n                    i18n-placeholder=\"@@authSourceTokenUrlPlaceholder\"\n                    formControlName=\"token_url\"\n                />\n            </mat-form-field>\n        </div>\n        <div class=\"fieldset\">\n            <div class=\"field\" *ngIf=\"form.controls.authorize_url\">\n                <label for=\"authorize-url\" i18n=\"@@authSourceAuthorizeUrlLabel\">\n                    Authorize URL:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"authorize-url\"\n                        placeholder=\"Authorize URL\"\n                        i18n-placeholder=\"@@authSourceAuthorizeUrlPlaceholder\"\n                        formControlName=\"authorize_url\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.raw_info_url\">\n                <label for=\"info-url\" i18n=\"@@authSourceProfileUrlLabel\">User Profile URL:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"raw_info_url\"\n                        placeholder=\"User Profile URL\"\n                        i18n-placeholder=\"@@authSourceProfileUrlPlaceholder\"\n                        formControlName=\"raw_info_url\"\n                    />\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.info_mappings\">\n            <label for=\"client-secret\" i18n=\"@@authSourceMappingsLabel\">Info Mappings:</label>\n            <object-list-field\n                [(ngModel)]=\"info_mapping_list\"\n                (ngModelChange)=\"updateMappings($event)\"\n                [ngModelOptions]=\"{ standalone: true }\"\n                [fields]=\"['Engine', 'Remote']\"\n            ></object-list-field>\n        </div>\n    </form>\n</div>\n","import { Component, Input, SimpleChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { EngineRepositoryType } from '@placeos/ts-client';\n\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'repository-form',\n    templateUrl: './repository-form.component.html',\n    styleUrls: ['./repository-form.component.scss'],\n})\nexport class RepositoryFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n    /** List of commits available for repository */\n    public commit_list: Identity[] = [];\n    /** Whether repository's commits are being loaded */\n    public loading_commits: boolean;\n    /** Currently selected commit for the repository */\n    public base_commit: Identity;\n    /** List of available types of repositories */\n    public repo_types: Identity[] = [\n        { id: EngineRepositoryType.Driver, name: 'Driver' },\n        { id: EngineRepositoryType.Interface, name: 'Interface' },\n    ];\n\n    /** Whether item is being edited */\n    public get is_edit(): boolean {\n        return this.form && this.form.controls.id && this.form.controls.id.value;\n    }\n\n    /** Whether commit of the repo is allowed to be changed */\n    public get can_change_commit(): boolean {\n        return !!(\n            this.form &&\n            this.form.controls.commit_hash &&\n            this.form.controls.repo_type &&\n            this.form.controls.repo_type.value === EngineRepositoryType.Interface\n        );\n    }\n\n    constructor(private _service: ApplicationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.form && this.form) {\n            this.loadCommits();\n        }\n    }\n\n    public async loadCommits() {\n        if (!this.is_edit || !this.can_change_commit) {\n            return;\n        }\n        const id = this.form.controls.id.value;\n        const commits: any[] = await this._service.Repositories.listCommits(id);\n        this.commit_list = (commits || []).map((commit) => {\n            const date = dayjs(commit.date);\n            return {\n                id: commit.commit,\n                name: commit.subject,\n                extra: date.isAfter(dayjs().subtract(1, 'm'))\n                    ? date.fromNow()\n                    : date.format('DD MMM YYYY'),\n            };\n        });\n        const active_commit = this.form.controls.commit_hash.value;\n        this.base_commit = this.commit_list.find((commit) => `${commit.id}` === active_commit);\n        if (!this.base_commit) {\n            this.base_commit = this.commit_list[0] || null;\n        }\n    }\n}\n","<div class=\"repository form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field commit\" *ngIf=\"is_edit && can_change_commit\">\n            <label for=\"commit\" i18n=\"@@repoCommitLabel\">Repository Commit: </label>\n            <item-search-field\n                name=\"commit\"\n                [options]=\"commit_list\"\n                [loading]=\"loading_commits\"\n                [ngModel]=\"base_commit\"\n                [ngModelOptions]=\"{ standalone: true }\"\n                (ngModelChange)=\"form.controls.commit_hash.setValue($event.id)\"\n            ></item-search-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.commit_hash && is_edit\">\n            <label\n                for=\"repository-commit\"\n                i18n=\"@@commitLabel\"\n            >Commit Hash:</label>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"repository-commit\"\n                    placeholder=\"Repository Commit\"\n                    i18n-placeholder=\"@@repositoryCommitPLaceholder\"\n                    formControlName=\"commit_hash\"\n                    readonly\n                >\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.branch\">\n            <label\n                for=\"repository-name\"\n                [class.error]=\"form.controls.branch.invalid && form.controls.branch.touched\"\n                i18n=\"@@branchLabel\"\n                >Branch<span>*</span>:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"branch-name\"\n                    placeholder=\"Branch Name\"\n                    i18n-placeholder=\"@@repositoryBranchPlaceholder\"\n                    formControlName=\"branch\"\n                    required\n                />\n                <mat-error i18n=\"@@repoBranchError\">Working branch name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"repository-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"@@nameLabel\"\n                >Name<span>*</span>:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"repository-name\"\n                    placeholder=\"Repository Name\"\n                    i18n-placeholder=\"@@repositoryNamePlaceholder\"\n                    formControlName=\"name\"\n                    required\n                />\n                <mat-error i18n=\"@@repoNameError\">Repository name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.folder_name\">\n            <label\n                for=\"folder-name\"\n                [class.error]=\"\n                    form.controls.folder_name.invalid && form.controls.folder_name.touched\n                \"\n                i18n=\"@@folderNameLabel\"\n            >\n                Folder Name<span>*</span>:\n            </label>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"folder-name\"\n                    placeholder=\"Folder Name\"\n                    i18n-placeholder=\"@@folderNamePlaceholder\"\n                    formControlName=\"folder_name\"\n                    required\n                />\n                <mat-error i18n=\"@@folderNameError\">Folder name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.description\">\n            <label for=\"description\" i18n=\"@@descriptionLabel\">Description:</label>\n            <mat-form-field appearance=\"outline\">\n                <textarea\n                    matInput\n                    name=\"description\"\n                    placeholder=\"Description\"\n                    i18n-placeholder=\"@@descriptionPlaceholder\"\n                    formControlName=\"description\"\n                ></textarea>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.uri\">\n            <label\n                for=\"uri\"\n                [class.error]=\"form.controls.uri.invalid && form.controls.uri.touched\"\n                i18n=\"@@repoUriLabel\"\n            >\n                Repository URI<span>*</span>:\n            </label>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"uri\"\n                    placeholder=\"Repository URI\"\n                    i18n-placeholder=\"@@repoUriPlaceholder\"\n                    formControlName=\"uri\"\n                    required\n                />\n                <mat-error i18n=\"@@repoUriError\">URI is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"!is_edit && form.controls.repo_type && form.controls.folder_name\">\n            <label for=\"type\" i18n=\"@@repoTypeLabel\">Repository Type: </label>\n            <mat-form-field appearance=\"outline\">\n                <mat-select name=\"type\" formControlName=\"repo_type\">\n                    <mat-option *ngFor=\"let type of repo_types\" [value]=\"type.id\" i18n=\"@@repoType\">\n                        { type.name, select, Driver { Driver } Interface { Interface } other { Other\n                        } }\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n  selector: 'saml-source-form',\n  templateUrl: './saml-source-form.component.html',\n  styleUrls: ['./saml-source-form.component.scss']\n})\nexport class SamlSourceFormComponent extends BaseDirective implements OnChanges {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n\n    /** List of attribute statement pairs */\n    public attribute_statement_mappings: any[] = [];\n    /** List of runtime param pairs */\n    public runtime_param_list: any[] = [];\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.form && this.form) {\n            if (this.form.controls.attribute_statements) {\n                const map = this.form.controls.attribute_statements.value || {};\n                this.attribute_statement_mappings = Object.keys(map).map((key) => {\n                    return { name: key, mappings: map[key].join(',') };\n                });\n            }\n            if (this.form.controls.idp_sso_target_url_runtime_params) {\n                const map = this.form.controls.idp_sso_target_url_runtime_params.value || {};\n                this.runtime_param_list = Object.keys(map).map((key) => {\n                    return { name: key, mappings: map[key] };\n                });\n            }\n        }\n    }\n\n    /**\n     * Update the form control value for attribute statements\n     * @param mappings Mapping listing\n     */\n    public updateAttributeStatements(mappings: { name: string, mappings: string }[]) {\n        this.timeout('mappings', () => {\n            const map: HashMap = {};\n            for (const pair of mappings) {\n                if (pair.name && pair.mappings) {\n                    map[pair.name] = (pair.mappings || '').split(',');\n                }\n            }\n            this.form.controls.attribute_statements.setValue(map);\n        }, 200);\n    }\n\n    /**\n     * Update the form control value for runtime parameters\n     * @param mappings Mapping listing\n     */\n    public updateRuntimeParams(mappings: { name: string, mapping: string }[]) {\n        this.timeout('mappings', () => {\n            const map: HashMap = {};\n            for (const pair of mappings) {\n                if (pair.name && pair.mapping) {\n                    map[pair.name] = pair.mapping;\n                }\n            }\n            this.form.controls.idp_sso_target_url_runtime_params.setValue(map);\n        }, 200);\n    }\n\n}\n","<div class=\"module form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"fieldset\">\n            <div class=\"field\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"auth-source-name\"\n                    [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                    i18n=\"@@authSourceNameLabel\"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"auth-source-name\"\n                        placeholder=\"Auth Source Name\"\n                        i18n-placeholder=\"@@authSourceNamePlaceholder\"\n                        formControlName=\"name\"\n                        required\n                    />\n                    <mat-error *ngIf=\"form.controls.name.invalid\" i18n=\"@@authSourceNameError\">\n                        Auth source name is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.issuer\">\n                <label\n                    for=\"issuer\"\n                    [class.error]=\"form.controls.issuer.invalid && form.controls.issuer.touched\"\n                    i18n=\"@@authSourceIssuerLabel\"\n                >\n                    Issuer<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"issuer\"\n                        placeholder=\"Issuer\"\n                        i18n-placeholder=\"@@authSourceIssuerPlaceholder\"\n                        formControlName=\"issuer\"\n                        required\n                    />\n                    <mat-error *ngIf=\"form.controls.issuer.invalid\" i18n=\"@@authSourceIssuerError\">\n                        Issuer is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"fieldset\">\n            <div class=\"field\" *ngIf=\"form.controls.idp_sso_target_url\">\n                <label\n                    for=\"idp-target\"\n                    [class.error]=\"\n                        form.controls.idp_sso_target_url.invalid &&\n                        form.controls.idp_sso_target_url.touched\n                    \"\n                    i18n=\"@@authSourceIdpTargetLabel\"\n                >\n                    IdP Target URL<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"idp-target\"\n                        placeholder=\"IdP Target URL\"\n                        i18n-placeholder=\"@@authSourceIdpTargetPlaceholder\"\n                        formControlName=\"idp_sso_target_url\"\n                        required\n                    />\n                    <mat-error *ngIf=\"form.controls.idp_sso_target_url.invalid\" i18n=\"@@authSourceIdpTargetError\">\n                        IdP Target URL is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.name_identifier_format\">\n                <label\n                    for=\"name-identifier-format\"\n                    [class.error]=\"\n                        form.controls.name_identifier_format.invalid &&\n                        form.controls.name_identifier_format.touched\n                    \"\n                    i18n=\"@@authSourceNameIdFormatLabel\"\n                >\n                    Name Identifier Format<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name-identifier-format\"\n                        placeholder=\"Name Identifier Format\"\n                        i18n-placeholder=\"@@authSourceNameIdFormatPlaceholder\"\n                        formControlName=\"name_identifier_format\"\n                        required\n                    />\n                    <mat-error *ngIf=\"form.controls.name_identifier_format.invalid\" i18n=\"@@authSourceNameIdFormatError\">\n                        Name Identifier Format is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.request_attributes\">\n            <label\n                for=\"request-attributes\"\n                [class.error]=\"form.controls.request_attributes.invalid && form.controls.request_attributes.touched\"\n                i18n=\"@@authSourceRequestAttrLabel\"\n            >\n                Request Attributes<span>*</span>:\n            </label>\n            <object-list-field\n                formControlName=\"request_attributes\"\n                [fields]=\"['name', 'name_format', 'friendly_name']\"\n            ></object-list-field>\n            <div class=\"error-message\" *ngIf=\"form.controls.request_attributes.invalid && form.controls.request_attributes.touched\" i18n=\"@@authSourceRequestAttrError\">\n                Request Attributes are required\n            </div>\n        </div>\n        <div class=\"fieldset\">\n            <div class=\"field\" *ngIf=\"form.controls.assertion_consumer_service_url\">\n                <label\n                    for=\"assertion-url\"\n                    [class.error]=\"\n                        form.controls.assertion_consumer_service_url.invalid &&\n                        form.controls.assertion_consumer_service_url.touched\n                    \"\n                    i18n=\"@@authSourceAssertionUrlLabel\"\n                >\n                    Assertion URL<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"assertion-url\"\n                        placeholder=\"Assertion URL\"\n                        i18n-placeholder=\"@@authSourceAssetionUrlPlaceholder\"\n                        formControlName=\"assertion_consumer_service_url\"\n                        required\n                    />\n                    <mat-error *ngIf=\"form.controls.assertion_consumer_service_url.invalid\" i18n=\"@@authSourceAssetionUrlError\">\n                        Assertion URL is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.idp_cert_fingerprint\">\n                <label for=\"cert-fingerprint\" i18n=\"@@authSourceCertPrintLabel\">Certificate Fingerprint:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"cert-fingerprint\"\n                        placeholder=\"Certificate Fingerprint\"\n                        i18n-placeholder=\"@@authSourceCertPrintPlaceholder\"\n                        formControlName=\"idp_cert_fingerprint\"\n                    />\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.idp_cert\">\n            <label for=\"cert\" i18n=\"@@authSourceCertLabel\">Full Certificate:</label>\n            <mat-form-field appearance=\"outline\">\n                <textarea\n                    matInput\n                    name=\"cert\"\n                    placeholder=\"Full Certificate\"\n                    i18n-placeholder=\"@@authSourceCertPlaceholder\"\n                    formControlName=\"idp_cert\"\n                ></textarea>\n            </mat-form-field>\n        </div>\n        <div class=\"fieldset\">\n            <div class=\"field\" *ngIf=\"form.controls.uid_attribute\">\n                <label for=\"uid-attribute\" i18n=\"@@authSourceUidAttrLabel\">UID Attribute:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"uid-attribute\"\n                        placeholder=\"UID Attribute\"\n                        i18n-placeholder=\"@@authSourceUidAttrPlaceholder\"\n                        formControlName=\"uid_attribute\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.attribute_service_name\">\n                <label for=\"attribute-service-name\" i18n=\"@@authSourceAttrServiceLabel\">Attribute Service Name:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"attribute-service-name\"\n                        placeholder=\"Attribute Service Name\"\n                        i18n-placeholder=\"@@authSourceAttrServicePlaceholder\"\n                        formControlName=\"attribute_service_name\"\n                    />\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.attribute_statements\">\n            <label for=\"client-secret\" i18n=\"@@authSourceAttrStmtLabel\">Attribute Statements:</label>\n            <object-list-field\n                [(ngModel)]=\"attribute_statement_mappings\"\n                (ngModelChange)=\"updateAttributeStatements($event)\"\n                [ngModelOptions]=\"{ standalone: true }\"\n                [fields]=\"['name', 'mappings']\"\n            ></object-list-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.idp_sso_target_url_runtime_params\">\n            <label for=\"client-secret\" i18n=\"@@authSourceIdpSsoRuntimeLabel\">IdP SSO Runtime Params:</label>\n            <object-list-field\n                [(ngModel)]=\"runtime_param_list\"\n                (ngModelChange)=\"updateRuntimeParams($event)\"\n                [ngModelOptions]=\"{ standalone: true }\"\n                [fields]=\"['name', 'mapping']\"\n            ></object-list-field>\n        </div>\n        <div class=\"fieldset\">\n            <div class=\"field\" *ngIf=\"form.controls.idp_slo_target_url\">\n                <label for=\"slo-target\" i18n=\"@@authSourceIdpSloUriLabel\">IdP SLO Target URL:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"slo-target\"\n                        placeholder=\"IdP SLO Target URL\"\n                        i18n-placeholder=\"@@authSourceIdpSloUriPlaceholder\"\n                        formControlName=\"idp_slo_target_url\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.slo_default_relay_state\">\n                <label for=\"slo-relay\" i18n=\"@@authSourceSloRelayLabel\">SLO Default Relay State:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"slo-relay\"\n                        placeholder=\"SLO Default Relay State\"\n                        i18n-placeholder=\"@@authSourceSloRelayPlaceholder\"\n                        formControlName=\"slo_default_relay_state\"\n                    />\n                </mat-form-field>\n            </div>\n        </div>\n    </form>\n</div>\n","import { Component, Input, SimpleChanges, OnChanges, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { EngineSettings, EngineUser, EncryptionLevel } from '@placeos/ts-client';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { validateYAML } from 'src/app/shared/utilities/data/systems.utilities';\n\nimport * as yaml from 'js-yaml';\nimport * as merge from 'deepmerge';\n\n@Component({\n    selector: 'a-settings-form',\n    templateUrl: './settings-form.component.html',\n    styleUrls: ['./settings-form.component.scss']\n})\nexport class SettingsFormComponent extends BaseDirective implements OnChanges, OnInit {\n    /** ID of the parent object */\n    @Input() id: string;\n    /** List of settings for the  */\n    @Input() settings: [EngineSettings, EngineSettings, EngineSettings, EngineSettings];\n    /** Whether to display merged settings */\n    @Input() merge: boolean;\n    /** List of settings to merge into the main settings */\n    @Input() merge_settings: EngineSettings[];\n    /** Form fields for settings */\n    public form: FormGroup;\n    /** Whether a setting is being saved */\n    public saving: [boolean, boolean, boolean, boolean] = [false, false, false, false];\n    /** Currently displayed encryption level */\n    public encryption_level: EncryptionLevel;\n    /** Settings available to display on the UI */\n    public used_settings: EngineSettings[] = [];\n    /** List of available settings to view */\n    public available_levels = this.levels;\n    /** Index of the active settings tab */\n    public level_index: number;\n\n    /** Current user */\n    public get user(): EngineUser {\n        return this._service.Users.user.getValue();\n    }\n\n    /** Whether user is admin */\n    public get is_admin(): boolean {\n        return !!this.user.sys_admin;\n    }\n\n    /** Whether user is support */\n    public get is_support(): boolean {\n        return !!this.user.sys_admin || !!this.user.support;\n    }\n\n    /** Currently shown settings */\n    public get shown_option(): { id: EncryptionLevel, name: string, active?: boolean } {\n        return this.available_levels.find(i => i.id === this.encryption_level);\n    }\n\n    /** Whether the currently active settings have been edited */\n    public get active_edited(): boolean {\n        return (\n            this.used_settings &&\n            this.used_settings[this.encryption_level] &&\n            this.used_settings[this.encryption_level].changes &&\n            this.used_settings[this.encryption_level].changes.settings_string !== undefined\n        );\n    }\n\n    /** Number of settings blocks edited */\n    public get edited_count(): number {\n        let count = 0;\n        for (const setting of this.used_settings) {\n            if (setting.changes.settings_string !== undefined) {\n                count++;\n            }\n        }\n\n        return count;\n    }\n\n    /** Whether a settings group has errors */\n    public get has_errors(): boolean {\n        for (const key in this.form.controls) {\n            if (this.form.controls[key] && this.form.controls[key].errors) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Displayable encryption levels for settings */\n    public get levels(): any[] {\n        const levels: Identity[] = [\n            { id: EncryptionLevel.None, name: 'Unencrypted', active: true },\n            {\n                id: EncryptionLevel.Support,\n                name: 'Support',\n                active: this.is_support\n            },\n            { id: EncryptionLevel.Admin, name: 'Admin', active: this.is_admin },\n            { id: EncryptionLevel.NeverDisplay, name: 'Encrypted', active: this.is_admin }\n        ];\n        if (this.merge) {\n            levels.unshift({ id: EncryptionLevel.NeverDisplay + 1, name: 'Merged' });\n        }\n        return levels;\n    }\n\n    public type(level: EncryptionLevel) {\n        switch (level) {\n            case EncryptionLevel.None:\n                return 'Unencrypted';\n            case EncryptionLevel.Support:\n                return 'Support';\n            case EncryptionLevel.Admin:\n                return 'Admin';\n        }\n        return 'Never Display';\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'save_all',\n            this._service.Hotkeys.listen(['KeyA'], () => this.saveAll())\n        );\n        this.subscription(\n            'clear_all',\n            this._service.Hotkeys.listen(['KeyC'], () => this.clearChanges())\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.merge) {\n            this.encryption_level = this.merge\n                ? EncryptionLevel.NeverDisplay + 1\n                : EncryptionLevel.None;\n            this.available_levels = this.levels;\n        }\n        if (changes.settings) {\n            this.used_settings = this.processSettings(this.settings || []);\n            this.initForm();\n        }\n    }\n\n    /** Save changes to the given setting level */\n    public save(level: EncryptionLevel) {\n        const item = this.used_settings[level];\n        if (\n            item &&\n            !this.saving[level] &&\n            item.changes &&\n            item.changes.settings_string !== undefined\n        ) {\n            this.saving[level] = true;\n            item.save().then(\n                (new_settings: EngineSettings) => {\n                    this.saving[level] = false;\n                    this.settings[level] = new_settings;\n                    this._service.notifySuccess(`Successfully saved ${this.type(level)} settings.`);\n                    this.used_settings = this.processSettings(this.settings || []);\n                    this.initForm();\n                },\n                err => {\n                    this.saving[level] = false;\n                    this._service.notifyError(\n                        `Error updating settings. Error: ${JSON.stringify(err.response || err.message || err)}`\n                    );\n                }\n            );\n        }\n    }\n\n    /** Save all changes to settings */\n    public saveAll() {\n        if (this.has_errors) {\n            return;\n        }\n        const promises = [];\n        for (let i = 0; i < EncryptionLevel.NeverDisplay + 1; i++) {\n            if (\n                this.settings[i] &&\n                !this.saving[i] &&\n                Object.keys(this.used_settings[i].changes || {}).length\n            ) {\n                this.saving[i] = true;\n                promises.push(this.used_settings[i].save());\n            }\n        }\n        if (promises.length) {\n            Promise.all(promises).then(\n                (results: EngineSettings[]) => {\n                    for (const result of results) {\n                        this.saving[result.encryption_level] = false;\n                        this.settings[result.encryption_level] = result;\n                    }\n                    this._service.notifySuccess('Successfully saved all settings.');\n                    this.used_settings = this.processSettings(this.settings || []);\n                    this.initForm();\n                },\n                err => {\n                    for (let i = 0; i < EncryptionLevel.NeverDisplay + 1; i++) {\n                        this.saving[i] = false;\n                    }\n                    this._service.notifyError(\n                        `Error updating settings. Error: ${JSON.stringify(err.response || err.message || err)}`\n                    );\n                }\n            );\n        }\n    }\n\n    public clearChanges() {\n        if (this.edited_count < 1) {\n            return;\n        }\n        this.used_settings = this.processSettings(this.settings || []);\n        this.initForm();\n    }\n\n    private initForm() {\n        this.form = new FormGroup({\n            settings0: new FormControl(this.used_settings[0].settings_string, [validateYAML]),\n            settings1: new FormControl(this.used_settings[1].settings_string, [validateYAML]),\n            settings2: new FormControl(this.used_settings[2].settings_string, [validateYAML]),\n            settings3: new FormControl(this.used_settings[3].settings_string, [validateYAML]),\n            settings4: new FormControl(this.used_settings[4].settings_string, [validateYAML])\n        });\n        for (let i = 0; i < EncryptionLevel.NeverDisplay + 1; i++) {\n            this.subscription(\n                `setting_change_${i}`,\n                this.form.controls[`settings${i}`].valueChanges.subscribe(value => {\n                    this.used_settings[i].storePendingChange('settings_string', value);\n                })\n            );\n        }\n    }\n\n    private processSettings(settings: EngineSettings[]): EngineSettings[] {\n        const processed_settings = [];\n        for (let i = 0; i < EncryptionLevel.NeverDisplay + 1; i++) {\n            processed_settings.push(this.processSetting(settings[i]));\n        }\n        processed_settings.push(\n            this.merge ? this.generateMergedSettings(processed_settings) : settings[3]\n        );\n        return processed_settings;\n    }\n\n    private processSetting(setting: EngineSettings): EngineSettings {\n        if (\n            (setting.encryption_level === EncryptionLevel.Admin && !this.is_admin) ||\n            (setting.encryption_level === EncryptionLevel.Support && !this.is_support) ||\n            setting.encryption_level === EncryptionLevel.NeverDisplay\n        ) {\n            const obj = {};\n            for (const key of setting.keys) {\n                obj[key] = '<MASKED>';\n            }\n            const settings_string = (setting.keys || []).length ? yaml.safeDump(obj) : '';\n            return new EngineSettings({\n                ...setting.toJSON(),\n                parent_id: this.id,\n                settings_string\n            });\n        }\n        return new EngineSettings({ ...setting, parent_id: this.id });\n    }\n\n    /** Genereate merged settings from all available settings */\n    private generateMergedSettings(settings: EngineSettings[]): EngineSettings {\n        const local_settings = (settings || []).map(\n            item => yaml.safeLoad(item.settings_string) || {}\n        );\n        const remote_settings = (this.merge_settings || []).map(\n            item => yaml.safeLoad(item.settings_string) || {}\n        );\n        const merged_settings = merge.all(remote_settings.concat(local_settings));\n        const settings_string = Object.keys(merged_settings).length ? yaml.safeDump(merged_settings, { strict: true }) : '';\n        return new EngineSettings({\n            id: 'merged',\n            settings_string,\n            parent_id: this.id,\n            keys: Object.keys(merged_settings)\n        });\n    }\n}\n","<form *ngIf=\"form && used_settings && used_settings.length\" [formGroup]=\"form\">\n    <div class=\"actions\">\n        <button mat-button *ngIf=\"edited_count > 0\" (tapped)=\"clearChanges()\">\n            <div class=\"text\" *ngIf=\"!saving[shown_option.id]; else spinner\"  i18n=\"@@clearLabel\">Clear Changes [C]</div>\n        </button>\n        <button\n            mat-button\n            *ngIf=\"active_edited\"\n            [disabled]=\"has_errors && !saving[shown_option.id]\"\n            (tapped)=\"save(shown_option.id)\"\n        >\n            <div class=\"text\" *ngIf=\"!saving[shown_option.id]; else spinner\"  i18n=\"@@saveLabel\">Save [S]</div>\n        </button>\n        <button\n            mat-button\n            *ngIf=\"edited_count > 1\"\n            [disabled]=\"has_errors && !saving[shown_option.id]\"\n            (tapped)=\"saveAll()\"\n        >\n            <div class=\"text\" *ngIf=\"!saving[shown_option.id]; else spinner\" i18n=\"@@saveAllLabel\">Save All [A]</div>\n        </button>\n    </div>\n    <mat-tab-group\n        [selectedIndex]=\"level_index\"\n        (selectedIndexChange)=\"encryption_level = available_levels[$event].id\"\n    >\n        <mat-tab\n            *ngFor=\"let option of available_levels\"\n            [label]=\"\n                option.name +\n                (option.id !== 4 && used_settings[option.id]?.changes?.settings_string !== undefined\n                    ? ' *'\n                    : '')\n            \"\n        >\n        </mat-tab>\n    </mat-tab-group>\n    <ng-container *ngFor=\"let option of available_levels\">\n        <ng-container\n            *ngIf=\"encryption_level === option.id && form.controls['settings' + option.id]\"\n        >\n            <div [class.error-border]=\"form.controls['settings' + option.id]?.errors\">\n                <settings-form-field\n                    [formControlName]=\"'settings' + option.id\"\n                    [readonly]=\"!option.active || this.saving[option.id]\"\n                ></settings-form-field>\n            </div>\n            <div class=\"error-display\" *ngIf=\"form.controls['settings' + option.id]?.errors\">\n                {{ form.controls['settings' + option.id].errors.yaml }}\n            </div>\n        </ng-container>\n    </ng-container>\n</form>\n<ng-template #spinner>\n    <mat-spinner diameter=\"32\"></mat-spinner>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { EncryptionLevel } from '@placeos/ts-client';\nimport { SPACE, ENTER, COMMA } from '@angular/cdk/keycodes';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\nimport { EngineServiceLike, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { MatChipInputEvent } from '@angular/material/chips';\n\n@Component({\n    selector: 'system-form',\n    templateUrl: './system-form.component.html',\n    styleUrls: ['./system-form.component.scss']\n})\nexport class SystemFormComponent extends BaseDirective {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n    /** Levels of encyption available for the system's settings */\n    public encryption_levels: Identity[] = [\n        { id: EncryptionLevel.None, name: 'None' },\n        { id: EncryptionLevel.Support, name: 'Support' },\n        { id: EncryptionLevel.Admin, name: 'Admin' },\n        { id: EncryptionLevel.NeverDisplay, name: 'Never Display' }\n    ];\n\n    /** List of separator characters for features */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    public get feature_list(): string[] {\n        return this.form.controls.features.value;\n    }\n\n    /** Service for handling zones */\n    public get zone_service(): EngineServiceLike {\n        return this._service.Zones;\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    /**\n     * Add a feature to the list of features for the item\n     * @param event Input event\n     */\n    public addFeature(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.features) return;\n        const input = event.input;\n        const value = event.value;\n        const feature_list = this.feature_list;\n        if ((value || '').trim()) {\n            feature_list.push(value);\n            this.form.controls.features.setValue(feature_list);\n        }\n\n        // Reset the input value\n        if (input) {\n            input.value = '';\n        }\n    }\n\n    /**\n     * Remove feature from the list\n     * @param existing_feature Feature to remove\n     */\n    public removeFeature(existing_feature: string): void {\n        if (!this.form || !this.form.controls.features) return;\n        const feature_list = this.feature_list;\n        const index = feature_list.indexOf(existing_feature);\n\n        if (index >= 0) {\n            feature_list.splice(index, 1);\n            this.form.controls.features.setValue(feature_list);\n        }\n    }\n}\n","<div class=\"system form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.zone\">\n            <label\n                for=\"zone\"\n                [class.error]=\"form.controls.zone.invalid && form.controls.zone.touched\"\n                i18n=\"@@zoneLabel\"\n            >\n                Zone<span>*</span>:\n            </label>\n            <item-search-field [service]=\"zone_service\" formControlName=\"zone\"></item-search-field>\n            <div\n                class=\"error\"\n                *ngIf=\"form.controls.zone.invalid && form.controls.zone.touched\"\n                i18n=\"@@zoneError\"\n            >\n                Zone is required\n            </div>\n        </div>\n        <div class=\"fieldset\">\n            <div class=\"field\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"system-name\"\n                    [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                    i18n=\"@@nameLabel\"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"system-name\"\n                        placeholder=\"System Name\"\n                        i18n-placeholder=\"@@systemNamePlaceholder\"\n                        formControlName=\"name\"\n                        required\n                    />\n                    <mat-error *ngIf=\"form.controls.name.invalid\" i18n=\"@@systemNameError\"\n                        >System name is required</mat-error\n                    >\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.email\">\n                <label\n                    for=\"system-email\"\n                    [class.error]=\"form.controls.email.invalid && form.controls.email.touched\"\n                    i18n=\"@@emailLabel\"\n                >\n                    Email:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"system-email\"\n                        placeholder=\"System Email\"\n                        i18n-placeholder=\"@@systemEmailPlaceholder\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error *ngIf=\"form.controls.email.invalid\" i18n=\"@@emailError\"\n                        >A valid email is required</mat-error\n                    >\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.support_url\">\n            <label\n                for=\"support-url\"\n                [class.error]=\"\n                    form.controls.support_url.invalid && form.controls.support_url.touched\n                \"\n                i18n=\"@@supportUrlLabel\"\n            >\n                Support URL:\n            </label>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"support-url\"\n                    placeholder=\"Support URL\"\n                    i18n-placeholder=\"@@suportUrlPlaceholder\"\n                    formControlName=\"support_url\"\n                />\n                <mat-error *ngIf=\"form.controls.support_url.invalid\" i18n=\"@@urlError\">\n                    A valid URL is required\n                </mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"fieldset\">\n            <div class=\"field\" *ngIf=\"form.controls.installed_ui_devices\">\n                <label\n                    for=\"ui-devices\"\n                    [class.error]=\"\n                        form.controls.installed_ui_devices.invalid &&\n                        form.controls.installed_ui_devices.touched\n                    \"\n                    i18n=\"@@panelCountLabel\"\n                >\n                    Number of Touch Panels:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"ui-devices\"\n                        type=\"number\"\n                        placeholder=\"Number of Touch Panels\"\n                        i18n-placeholder=\"@@panelCountPlaceholder\"\n                        formControlName=\"installed_ui_devices\"\n                    />\n                    <mat-error\n                        *ngIf=\"form.controls.installed_ui_devices.invalid\"\n                        i18n=\"@@panelCountError\"\n                    >\n                        A valid positive number is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.capacity\">\n                <label\n                    for=\"capacity\"\n                    [class.error]=\"form.controls.capacity.invalid && form.controls.capacity.touched\"\n                    i18n=\"@@capacityLabel\"\n                >\n                    Capacity:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"capacity\"\n                        type=\"number\"\n                        placeholder=\"Capacity\"\n                        i18n-placeholder=\"@@capacityPlaceholder\"\n                        formControlName=\"capacity\"\n                    />\n                    <mat-error *ngIf=\"form.controls.capacity.invalid\" i18n=\"@@capacityError\">\n                        A valid positive number is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.bookable\">\n                <mat-checkbox name=\"bookable\" formControlName=\"bookable\" i18n=\"@@bookableLabel\">\n                    Bookable\n                </mat-checkbox>\n            </div>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.description\">\n            <label for=\"description\" i18n=\"@@descriptionLabel\">Description:</label>\n            <mat-form-field appearance=\"outline\">\n                <textarea\n                    matInput\n                    name=\"description\"\n                    placeholder=\"Description\"\n                    i18n=\"@@descriptionPlaceholder\"\n                    formControlName=\"description\"\n                ></textarea>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.features\">\n            <label\n                [class.error]=\"form.controls.features.invalid && form.controls.features.touched\"\n                i18n=\"@@featuresLabel\"\n            >\n                Features:\n            </label>\n            <mat-form-field appearance=\"outline\">\n                <mat-chip-list #chipList aria-label=\"System features\">\n                    <mat-chip\n                        *ngFor=\"let feature of feature_list\"\n                        [selectable]=\"true\"\n                        [removable]=\"true\"\n                        (removed)=\"removeFeature(feature)\"\n                    >\n                        {{ feature }}\n                        <app-icon matChipRemove [icon]=\"{ class: 'backoffice-cross' }\"></app-icon>\n                    </mat-chip>\n                    <input\n                        placeholder=\"Features...\"\n                        i18n-placeholder=\"@@featuresPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addFeature($event)\"\n                    />\n                </mat-chip-list>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.map_id\">\n            <label for=\"map_id\" i18n=\"@@mapIdLabel\">Map ID:</label>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"map_id\"\n                    i18n-placeholder=\"@@mapIdPlaceholder\"\n                    placeholder=\"Map SVG ID selector e.g. area-01.10-status\"\n                    formControlName=\"map_id\"\n                />\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'system-trigger-form',\n  templateUrl: './system-trigger-form.component.html',\n  styleUrls: ['./system-trigger-form.component.scss']\n})\nexport class SystemTriggerFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n}\n","<div class=\"system-trigger form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label for=\"name\" i18n=\"@@nameLabel\"> Name: </label>\n            <div class=\"value\" name=\"name\">{{ form.controls.name.value }}</div>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label for=\"triggered\" i18n=\"@@triggeredLabel\"> Currently Triggered: </label>\n            <div class=\"value\" name=\"triggered\">{{ !!form.controls.triggered.value }}</div>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.enabled\">\n            <mat-checkbox name=\"enabled\" formControlName=\"enabled\" i18n=\"@@enabledLabel\">Enabled</mat-checkbox>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.important\">\n            <mat-checkbox name=\"important\" formControlName=\"important\" i18n=\"@@importantLabel\">Important</mat-checkbox>\n        </div>\n    </form>\n</div>\n","import { Component, Input, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ENTER, COMMA, SPACE } from '@angular/cdk/keycodes';\nimport { MatChipList } from '@angular/material/chips';\nimport { EngineSystem } from '@placeos/ts-client';\n\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'trigger-action-form',\n    templateUrl: './trigger-action-form.component.html',\n    styleUrls: ['./trigger-action-form.component.scss']\n})\nexport class TriggerActionFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n    /** Systems used for templating the status variables */\n    @Input() public system: EngineSystem;\n    /** List of seperators for storing emails */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n    /** Variable to hold new email addresses */\n    public new_email = '';\n\n    @ViewChild('chipList') private chip_list: MatChipList;\n\n    /** List of available trigger action types */\n    public action_types: Identity[] = [\n        { id: 'function', name: 'Execute Method' },\n        { id: 'email', name: 'Send Email' }\n    ];\n\n    public get email_list(): string[] {\n        return (\n            (this.form && this.form.controls.emails ? this.form.controls.emails.value : null) || []\n        );\n    }\n\n    /**\n     * Add the given emails to the list\n     * @param email New email\n     */\n    public addEmail(email: string): void {\n        if (!email) {\n            return;\n        }\n        const email_list = this.email_list;\n        if (email_list.indexOf(email) < 0) {\n            email_list.push(email);\n        }\n        this.form.controls.emails.setValue(email_list);\n        this.chip_list.errorState = !this.form.controls.emails.valid;\n    }\n\n    /**\n     * Remove given email from the list\n     * @param email Exisiting email\n     */\n    public removeEmail(email: string): void {\n        const email_list = this.email_list;\n        const index = email_list.indexOf(email);\n        if (index >= 0) {\n            email_list.splice(index, 1);\n        }\n        this.form.controls.emails.setValue(email_list);\n        this.chip_list.errorState = !this.form.controls.emails.valid;\n    }\n}\n","<div class=\"module form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.action_type\">\n            <label for=\"type\">Action Type: </label>\n            <mat-form-field appearance=\"outline\">\n                <mat-select name=\"type\" formControlName=\"action_type\">\n                    <mat-option *ngFor=\"let type of action_types\" [value]=\"type.id\">\n                        {{ type.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <ng-container [ngSwitch]=\"form.controls.action_type.value\">\n            <ng-container *ngSwitchCase=\"'email'\">\n                <div class=\"field\" *ngIf=\"form.controls.emails\">\n                    <label\n                        for=\"description\"\n                        [class.error]=\"form.controls.emails.touched && form.controls.emails.errors\"\n                        i18n=\"@@emailAddressesLabel\"\n                    >\n                        Email Addresses<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-chip-list #chipList aria-label=\"Email addresses\">\n                            <mat-chip\n                                *ngFor=\"let email of email_list\"\n                                [selectable]=\"true\"\n                                [removable]=\"true\"\n                                (removed)=\"removeEmail(email)\"\n                            >\n                                {{ email }}\n                                <app-icon\n                                    matChipRemove\n                                    [icon]=\"{ class: 'backoffice-cross' }\"\n                                ></app-icon>\n                            </mat-chip>\n                            <input\n                                [(ngModel)]=\"new_email\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"New email...\"\n                                i18n-placeholder=\"@@addEmailPlaceholder\"\n                                [matChipInputFor]=\"chipList\"\n                                [matChipInputSeparatorKeyCodes]=\"separators\"\n                                [matChipInputAddOnBlur]=\"true\"\n                                (matChipInputTokenEnd)=\"addEmail($event.value); new_email = ''\"\n                            />\n                        </mat-chip-list>\n                        <mat-error>{{\n                            form.controls.emails.hasError('email')\n                                ? 'Email addresses need to be valid'\n                                : 'An email address is required'\n                        }}</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\" *ngIf=\"form.controls.content\">\n                    <label for=\"content\" i18n=\"@@emailBodyLabel\">Email Body:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <textarea\n                            matInput\n                            name=\"content\"\n                            placeholder=\"Email body contents...\"\n                            i18n-placeholder=\"@@emailBodyPlacholder\"\n                            formControlName=\"content\"\n                        ></textarea>\n                    </mat-form-field>\n                </div>\n            </ng-container>\n            <ng-container *ngSwitchDefault>\n                <div class=\"field\" *ngIf=\"form.controls.method_call\">\n                    <label for=\"content\" i18n=\"@@selectExecLabel\">Select method to execute:</label>\n                    <system-exec-field\n                        formControlName=\"method_call\"\n                        [system]=\"system\"\n                        [executable]=\"false\"\n                    ></system-exec-field>\n                </div>\n            </ng-container>\n        </ng-container>\n    </form>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport {\n    EngineModule,\n    EngineSystem,\n    TriggerConditionOperator,\n    TriggerStatusVariable\n} from '@placeos/ts-client';\n\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { calculateModuleIndex } from 'src/app/shared/utilities/api.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'trigger-condition-comparison-form',\n    templateUrl: './comparison-form.component.html',\n    styleUrls: ['./comparison-form.component.scss']\n})\nexport class TriggerConditionComparisonFormComponent implements OnInit, OnChanges {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n    /** Systems used for templating the status variables */\n    @Input() public system: EngineSystem;\n    /** List of modules associated with the template system */\n    public modules: EngineModule[] = [];\n    /** List of status variables associated with the selected module */\n    public module_list: Identity[] = [];\n    /** List of status variables associated with the selected module */\n    public left_status_variables: Identity[] = [];\n    /** List of status variables associated with the selected module */\n    public right_status_variables: Identity[] = [];\n    /** Type of value to compare the left hand side to */\n    public rhs_type: 'constant' | 'status_var' = 'constant';\n    /** Type of value to compare the left hand side to */\n    public rhs_value: string;\n    /** Status variable details for the left side of the comparison */\n    public left_side: TriggerStatusVariable = { mod: '', status: '', keys: [] };\n    /** Status variable details for the right side of the comparison */\n    public right_side: TriggerStatusVariable = { mod: '', status: '', keys: [] };\n\n    /** Types of trigger conditions */\n    public right_var_type: Identity[] = [\n        { id: 'constant', name: 'Constant Value' },\n        { id: 'status_var', name: 'Status Variable' }\n    ];\n\n    /** Allowed comparison operators */\n    public compare_types: Identity[] = [\n        { id: TriggerConditionOperator.EQ, name: 'equal to' },\n        { id: TriggerConditionOperator.NEQ, name: 'not equal to' },\n        { id: TriggerConditionOperator.GT, name: 'greater than' },\n        { id: TriggerConditionOperator.GTE, name: 'greater than or equal' },\n        { id: TriggerConditionOperator.LT, name: 'less than' },\n        { id: TriggerConditionOperator.LTE, name: 'less than or equal' },\n        { id: TriggerConditionOperator.AND, name: 'truthy AND' },\n        { id: TriggerConditionOperator.OR, name: 'truthy OR' },\n        { id: TriggerConditionOperator.XOR, name: 'truthy XOR' }\n    ];\n\n    public get left_keys(): string {\n        return this.left_side.keys.join(',');\n    }\n    public get right_keys(): string {\n        return this.right_side.keys.join(',');\n    }\n\n    constructor(private _service: ApplicationService) {}\n\n    public ngOnInit(): void {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.system && this.system) {\n            this.loadSystemModules();\n        }\n    }\n\n    public updateFormForSide(side: 'left' | 'right') {\n        if (this.form.controls[side]) {\n            this.form.controls[side].setValue(this[side + '_side']);\n        }\n    }\n\n    /**\n     * Load the list of status variables for the given modules\n     * @param module Module to list status variables\n     */\n    public loadSystemStatusVariables(mod_name: string, side: 'left' | 'right') {\n        const name = mod_name.split('_');\n        this._service.Systems.state(this.system.id, name[0], +name[1]).then(\n            var_map => {\n                if (Object.keys(var_map).length <= 0) {\n                    var_map.connected = true;\n                }\n                this[`${side}_status_variables`] = Object.keys(var_map).map(key => ({\n                    id: key,\n                    name: key\n                }));\n                this.addExistingStatusVariables();\n            },\n            () =>\n                this._service.notifyError(\n                    `Error loading the status variables for ${this.system.id}, ${mod_name}`\n                )\n        );\n    }\n\n    /**\n     * Load the list of modules for the active system\n     */\n    private loadSystemModules() {\n        if (!this.system) {\n            return;\n        }\n        this._service.Modules.query({ control_system_id: this.system.id }).then(module_list => {\n            this.modules = module_list;\n            const mod_list = this.system.modules;\n            this.modules.sort((a, b) => mod_list.indexOf(a.id) - mod_list.indexOf(b.id));\n            this.module_list = this.modules.map(mod => {\n                const module_class =\n                    mod.custom_name || (mod.driver ? mod.driver.class_name : 'System');\n                const index = calculateModuleIndex(this.modules, mod);\n                return {\n                    id: mod.id,\n                    name: `${module_class}_${index}`\n                };\n            });\n            this.addExistingModules();\n        });\n    }\n\n    /**\n     * Add pre-exisiting module detail to the available list\n     */\n    private addExistingModules() {\n        if (this.form.controls.left && this.form.controls.left.value) {\n            const module = this.form.controls.left.value.mod;\n            if (!this.module_list.find(mod => mod.name === module)) {\n                this.module_list.unshift({ id: 'old_left_value', name: module });\n            }\n            this.loadSystemStatusVariables(module, 'left');\n            this.left_side = this.form.controls.left.value;\n        }\n        if (\n            this.form.controls.right &&\n            this.form.controls.right.value &&\n            this.form.controls.right.value.mod\n        ) {\n            this.rhs_type = 'status_var';\n            const module = this.form.controls.right.value.mod;\n            if (!this.module_list.find(mod => mod.name === module)) {\n                this.module_list.unshift({ id: 'old_right_value', name: module });\n            }\n            this.loadSystemStatusVariables(module, 'right');\n            this.right_side = this.form.controls.right_side.value;\n        }\n    }\n\n    /**\n     * Add pre-exisiting status variables to the available list\n     */\n    private addExistingStatusVariables() {\n        if (this.left_side.status) {\n            if (!this.left_status_variables.find(status => status.name === this.left_side.status)) {\n                this.left_status_variables.unshift({\n                    id: this.left_side.status,\n                    name: this.left_side.status\n                });\n            }\n        }\n        if (this.right_side.status) {\n            if (\n                !this.right_status_variables.find(status => status.name === this.right_side.status)\n            ) {\n                this.right_status_variables.unshift({\n                    id: this.right_side.status,\n                    name: this.right_side.status\n                });\n            }\n        }\n    }\n}\n","<div class=\"trigger-condition form comparison\" *ngIf=\"form\" [formGroup]=\"form\">\n    <ng-container\n        *ngTemplateOutlet=\"status_variable_form; context: { side: 'left' }\"\n    ></ng-container>\n    <div *ngIf=\"form.controls.left.touched && form.controls.left.errors\" class=\"error\" i18n=\"@@statusVarError\">\n        A module status variable is required\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.operator\">\n        <label for=\"operator\" hidden i18n=\"@@operationLabel\">Operation:</label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select name=\"operator\" formControlName=\"operator\" placeholder=\"Select comparison operator\">\n                <mat-option *ngFor=\"let operation of compare_types\" [value]=\"operation.id\">\n                    {{ operation.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.operator\">\n        <label for=\"compared-to\" hidden i18n=\"@@comparedLabel\">Compared to:</label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                name=\"compared-to\"\n                [(ngModel)]=\"rhs_type\"\n                (ngModelChange)=\"form.controls.right.setValue(null)\"\n                [ngModelOptions]=\"{ standalone: true }\"\n            >\n                <mat-option *ngFor=\"let type of right_var_type\" [value]=\"type.id\">\n                    {{ type.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"rhs_type === 'constant' && form.controls.right; else rhs_status_var\">\n        <label for=\"constant\" hidden i18n=\"@@comparedLabel\">Compared to:</label>\n        <mat-form-field appearance=\"outline\">\n            <input\n                matInput\n                name=\"constant\"\n                formControlName=\"right\"\n                placeholder=\"true/false, 'string', 123.456\"\n                i18n-placeholder=\"@@comparedValue\"\n            />\n        </mat-form-field>\n    </div>\n    <div *ngIf=\"form.controls.right.touched && form.controls.right.errors\" class=\"error\"  i18n=\"@@statusValueError\">\n        A module status variable or value is required\n    </div>\n</div>\n<ng-template #rhs_status_var>\n    <ng-container\n        *ngTemplateOutlet=\"status_variable_form; context: { side: 'right' }\"\n    ></ng-container>\n</ng-template>\n<ng-template #status_variable_form let-side=\"side\">\n    <div class=\"fieldset\">\n        <div class=\"field\">\n            <label for=\"type\"  i18n=\"@@moduleLabel\">Module:</label>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    name=\"type\"\n                    [(ngModel)]=\"this[side + '_side'].mod\"\n                    (ngModelChange)=\"loadSystemStatusVariables($event, side)\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    placeholder=\"Select module\"\n                >\n                    <mat-option *ngFor=\"let mod of module_list\" [value]=\"mod.name\">\n                        {{ mod.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            class=\"field\"\n            *ngIf=\"this[side + '_status_variables'] && this[side + '_status_variables'].length\"\n        >\n            <label [for]=\"side + '-status-var'\" i18n=\"@@statusVarLabel\">Status Variable:</label>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [name]=\"side + '-status-var'\"\n                    [(ngModel)]=\"this[side + '_side'].status\"\n                    (ngModelChange)=\"updateFormForSide(side)\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    placeholder=\"Select status variable\"\n                    i18n-placeholder=\"@@statusVarPlaceholder\"\n                >\n                    <mat-option\n                        *ngFor=\"let mod of this[side + '_status_variables']\"\n                        [value]=\"mod.name\"\n                    >\n                        {{ mod.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    </div>\n    <div\n        class=\"field\"\n        *ngIf=\"this[side + '_status_variables'] && this[side + '_status_variables'].length\"\n    >\n        <label [for]=\"side + '-subkeys'\"  i18n=\"@@subkeysLabel\">Subkeys:</label>\n        <mat-form-field appearance=\"outline\">\n            <input\n                matInput\n                [ngModel]=\"this[side + '_keys']\"\n                (ngModelChange)=\"this[side + '_side'].keys = $event.split(','); updateFormForSide(side);\"\n                [name]=\"side + '-subkeys'\"\n                placeholder=\"Status variable subkeys...\"\n                i18n-placeholder=\"@@subkeysPlaceholder\"\n            />\n        </mat-form-field>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { numberToPosition } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport * as cron from 'cron-builder';\n\n@Component({\n    selector: 'trigger-condition-time-form',\n    templateUrl: './time-form.component.html',\n    styleUrls: ['./time-form.component.scss']\n})\nexport class TriggerConditionTimeFormComponent implements OnChanges {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n    /** List of available periods for scheduled repetition */\n    public repeat_period: Identity[] = [\n        { id: 'minute', name: 'Minute' },\n        { id: 'hour', name: 'Hour' },\n        { id: 'day', name: 'Day' },\n        { id: 'week', name: 'Week' },\n        { id: 'month', name: 'Month' },\n        { id: 'year', name: 'Year' }\n    ];\n    /** Whether condition is a cron(recurring) job */\n    public is_cron: boolean;\n    /** The period which the user selects the recurrence */\n    public cron_period: 'minute' | 'hour' | 'day' | 'week' | 'month' | 'year' = 'minute';\n\n    public minutes_in_hour = [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55];\n    public hours_in_day = [12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n    public days_of_week = Array(7)\n        .fill(0)\n        .map((_, index) =>\n            dayjs()\n                .day(index)\n                .format('ddd')\n        );\n    public days_of_month: Identity[] = Array(31)\n        .fill(0)\n        .map((_, index) => ({ id: index + 1, name: `${numberToPosition(index + 1)}` }));\n    public months_of_year = Array(12)\n        .fill(0)\n        .map((_, index) =>\n            dayjs()\n                .month(index)\n                .format('MMM')\n        );\n    /** Minute of the hour to recurr on */\n    public cron_minute = 0;\n    /** Hour of the day to recurr on */\n    public cron_hour = 0;\n    /** Hour of the day to recurr on */\n    public cron_hour_period = 'AM';\n    /** Hour of the day to recurr on */\n    public cron_day = this.days_of_week[0];\n    /** Hour of the day to recurr on */\n    public cron_date = 1;\n    /** Hour of the day to recurr on */\n    public cron_month = this.months_of_year[0];\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.form && this.form) {\n            this.is_cron = this.form.controls.time_type.value === 'cron';\n            if (this.is_cron) {\n                this.loadCronTab(this.form.controls.cron.value);\n            }\n        }\n    }\n\n    /**\n     * Update the output CRON string for the selected periods\n     */\n    public updateCronString() {\n        if (this.form && this.form.controls.cron) {\n            const current_cron = new cron();\n            const hour = (this.cron_hour % 12) + (this.cron_hour_period === 'AM' ? 0 : 12);\n            const day_of_week = this.days_of_week.indexOf(this.cron_day);\n            const month = this.months_of_year.indexOf(this.cron_month);\n            switch (this.cron_period) {\n                case 'minute':\n                    break;\n                case 'hour':\n                    current_cron.set('minute', [`${this.cron_minute}`]);\n                    break;\n                case 'day':\n                    current_cron.set('minute', [`${this.cron_minute}`]);\n                    current_cron.set('hour', [`${hour}`]);\n                    break;\n                case 'week':\n                    current_cron.set('minute', [`${this.cron_minute}`]);\n                    current_cron.set('hour', [`${hour}`]);\n                    current_cron.set('dayOfTheWeek', [`${day_of_week + 1}`]);\n                    break;\n                case 'month':\n                    current_cron.set('minute', [`${this.cron_minute}`]);\n                    current_cron.set('hour', [`${hour}`]);\n                    current_cron.set('dayOfTheMonth', [`${this.cron_date}`]);\n                    break;\n                case 'year':\n                    current_cron.set('minute', [`${this.cron_minute}`]);\n                    current_cron.set('hour', [`${hour}`]);\n                    current_cron.set('dayOfTheMonth', [`${this.cron_date}`]);\n                    current_cron.set('month', [`${month + 1}`]);\n                    break;\n            }\n            const cron_str = current_cron.build();\n            this.form.controls.cron.setValue(cron_str);\n        }\n    }\n\n    private loadCronTab(cron_tab: string): void {\n        const cron_str = new cron(cron_tab);\n        this.cron_minute =\n            cron_str.get('minute') === '*' ? this.cron_minute : +cron_str.get('minute');\n        this.cron_hour = cron_str.get('hour') === '*' ? this.cron_minute : +cron_str.get('hour');\n        if (this.cron_hour > 12) {\n            this.cron_hour = this.cron_hour % 12;\n            this.cron_hour_period = 'PM';\n        } else {\n            this.cron_hour_period = 'AM';\n        }\n        this.cron_day =\n            cron_str.get('dayOfTheWeek') === '*'\n                ? this.cron_day\n                : this.days_of_week[+cron_str.get('dayOfTheWeek')];\n        this.cron_date =\n            cron_str.get('dayOfTheMonth') === '*' ? this.cron_date : +cron_str.get('dayOfTheMonth');\n        this.cron_month =\n            cron_str.get('month') === '*'\n                ? this.cron_month\n                : this.months_of_year[+cron_str.get('month') - 1];\n        /** Set the cron period */\n        if (cron_str.get('month') !== '*') {\n            this.cron_period = 'year';\n        } else if (cron_str.get('dayOfTheMonth') !== '*') {\n            this.cron_period = 'month';\n        } else if (cron_str.get('dayOfTheWeek') !== '*') {\n            this.cron_period = 'week';\n        } else if (cron_str.get('hour') !== '*') {\n            this.cron_period = 'day';\n        } else if (cron_str.get('minute') !== '*') {\n            this.cron_period = 'hour';\n        } else {\n            this.cron_period = 'minute';\n        }\n    }\n}\n","<div class=\"trigger-condition form time\" *ngIf=\"form\" [formGroup]=\"form\">\n    <div class=\"field\">\n        <mat-checkbox [(ngModel)]=\"is_cron\" (ngModelChange)=\"form.controls.cron.setValue(null)\" [ngModelOptions]=\"{ standalone: true }\" i18n=\"@@recurringLabel\">\n            Recurring Schedule\n        </mat-checkbox>\n    </div>\n    <div class=\"fieldset\" *ngIf=\"!is_cron; else cron_time_form\">\n        <div class=\"field\" *ngIf=\"form.controls.time\">\n            <label for=\"type\" i18n=\"@@dateLabel\">Date: </label>\n            <a-date-field name=\"date\" formControlName=\"time\"></a-date-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.time\">\n            <label for=\"type\" i18n=\"@@timeLabel\">Time: </label>\n            <a-time-field name=\"date\" formControlName=\"time\"></a-time-field>\n        </div>\n    </div>\n</div>\n<ng-template #cron_time_form>\n    <div class=\"field\">\n        <label for=\"type\" i18n=\"@@repeatLabel\">Repeat every: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                name=\"type\"\n                [(ngModel)]=\"cron_period\"\n                (ngModelChange)=\"updateCronString()\"\n                [ngModelOptions]=\"{ standalone: true }\"\n            >\n                <mat-option *ngFor=\"let period of repeat_period\" [value]=\"period.id\">\n                    {{ period.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"cron_period === 'month' || cron_period === 'year'\">\n        <label for=\"day\" i18n=\"@@dayLabel\">Day of Month: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                name=\"day\"\n                [(ngModel)]=\"cron_date\"\n                (ngModelChange)=\"updateCronString()\"\n                [ngModelOptions]=\"{ standalone: true }\"\n            >\n                <mat-option *ngFor=\"let period of days_of_month\" [value]=\"period.id\">\n                    {{ period.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"cron_period === 'year'\">\n        <label for=\"month\" i18n=\"@@monthLabel\">Month of year: </label>\n        <mat-button-toggle-group\n            name=\"month\"\n            [(ngModel)]=\"cron_month\"\n            (ngModelChange)=\"updateCronString()\"\n            [ngModelOptions]=\"{ standalone: true }\"\n        >\n            <mat-button-toggle *ngFor=\"let month of months_of_year\" [value]=\"month\">\n                {{ month }}\n            </mat-button-toggle>\n        </mat-button-toggle-group>\n    </div>\n    <div class=\"field\" *ngIf=\"cron_period === 'week'\">\n        <label for=\"weekday\" i18n=\"@@weekLabel\">Day of week: </label>\n        <mat-button-toggle-group\n            name=\"weekday\"\n            [(ngModel)]=\"cron_day\"\n            (ngModelChange)=\"updateCronString()\"\n            [ngModelOptions]=\"{ standalone: true }\"\n        >\n            <mat-button-toggle *ngFor=\"let weekday of days_of_week\" [value]=\"weekday\">\n                {{ weekday }}\n            </mat-button-toggle>\n        </mat-button-toggle-group>\n    </div>\n    <div class=\"field\" *ngIf=\"cron_period !== 'minute' && cron_period !== 'hour'\">\n        <label for=\"hour\"i18n=\"@@hourLabel\">Hour in the day: </label>\n        <mat-button-toggle-group\n            name=\"hour\"\n            [(ngModel)]=\"cron_hour\"\n            (ngModelChange)=\"updateCronString()\"\n            [ngModelOptions]=\"{ standalone: true }\"\n        >\n            <mat-button-toggle *ngFor=\"let hour of hours_in_day\" [value]=\"hour\">\n                {{ hour }}\n            </mat-button-toggle>\n        </mat-button-toggle-group>\n        <mat-button-toggle-group\n            name=\"hour\"\n            [(ngModel)]=\"cron_hour_period\"\n            (ngModelChange)=\"updateCronString()\"\n            [ngModelOptions]=\"{ standalone: true }\"\n        >\n            <mat-button-toggle *ngFor=\"let hour of ['AM', 'PM']\" [value]=\"hour\">\n                {{ hour }}\n            </mat-button-toggle>\n        </mat-button-toggle-group>\n    </div>\n    <div class=\"field\" *ngIf=\"cron_period !== 'minute'\">\n        <label for=\"minute\"i18n=\"@@minuteLabel\">Minute past the hour: </label>\n        <mat-button-toggle-group\n            name=\"minute\"\n            [(ngModel)]=\"cron_minute\"\n            (ngModelChange)=\"updateCronString()\"\n            [ngModelOptions]=\"{ standalone: true }\"\n        >\n            <mat-button-toggle *ngFor=\"let minute of minutes_in_hour\" [value]=\"minute\">\n                {{ minute }}\n            </mat-button-toggle>\n        </mat-button-toggle-group>\n    </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { EngineSystem } from '@placeos/ts-client';\n\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'trigger-condition-form',\n    templateUrl: './trigger-condition-form.component.html',\n    styleUrls: ['./trigger-condition-form.component.scss']\n})\nexport class TriggerConditionFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n    /** Systems used for templating the status variables */\n    @Input() public system: EngineSystem;\n\n    /** Types of trigger conditions */\n    public condition_types: Identity[] = [\n        { id: 'compare', name: 'Compare values' },\n        { id: 'time', name: 'Particular time' }\n    ];\n}\n","<div class=\"module form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.condition_type\">\n            <label for=\"type\" i18n=\"@@conditionTypeLabel\">Condition Type: </label>\n            <mat-form-field appearance=\"outline\">\n                <mat-select name=\"type\" formControlName=\"condition_type\">\n                    <mat-option *ngFor=\"let type of condition_types\" [value]=\"type.id\" i18n=\"@@triggerConditionType\">\n                        { type.id, select, compare { Compare Values } time { Particular Time } }\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <ng-container *ngIf=\"form.controls.condition_type.value === 'compare'; else time_form\">\n            <trigger-condition-comparison-form [form]=\"form\" [system]=\"system\"></trigger-condition-comparison-form>\n        </ng-container>\n    </form>\n</div>\n<ng-template #time_form>\n    <trigger-condition-time-form [form]=\"form\"></trigger-condition-time-form>\n</ng-template>\n\n\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'trigger-form',\n    templateUrl: './trigger-form.component.html',\n    styleUrls: ['./trigger-form.component.scss']\n})\nexport class TriggerFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n}\n","<div class=\"zone form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"trigger-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"@@nameLabel\"\n                >Name<span>*</span>:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"trigger-name\"\n                    placeholder=\"Trigger Name\"\n                    i18n-placeholder=\"@@triggerNamePlaceholder\"\n                    formControlName=\"name\"\n                    required\n                />\n                <mat-error i18n=\"@@triggerError\">Trigger name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.description\">\n            <label for=\"description\" i18n=\"@@descriptionLabel\">Description:</label>\n            <mat-form-field appearance=\"outline\">\n                <textarea\n                    matInput\n                    name=\"description\"\n                    placeholder=\"Description\"\n                    i18n-placeholder=\"@@descriptionPlaceholder\"\n                    formControlName=\"description\"\n                ></textarea>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.enable_webhook\">\n            <mat-checkbox name=\"enable-webhook\" formControlName=\"enable_webhook\" i18n=\"@@enableWebhooklabel\">\n                Enable Webhook\n            </mat-checkbox>\n        </div>\n    </form>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    templateUrl: './user-form.component.html',\n    styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n    /** Whether password should be visible in plaintext */\n    public show_password: boolean;\n    /** Whether password confirm should be visible in plaintext */\n    public show_confirm: boolean;\n}\n","<form class=\"user form\" *ngIf=\"form\" [formGroup]=\"form\">\n    <!--  fake fields are a workaround for chrome/opera autofill getting the wrong fields -->\n    <input id=\"email\" style=\"display: none;\" type=\"text\" name=\"fakeusernameremembered\" />\n    <input id=\"password\" style=\"display: none;\" type=\"password\" name=\"fakepasswordremembered\" />\n    <div class=\"field\" *ngIf=\"form.controls.name\">\n        <label\n            for=\"system-name\"\n            [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n            i18n=\"@@nameLabel\"\n        >\n            Name<span>*</span>:\n        </label>\n        <mat-form-field appearance=\"outline\">\n            <input\n                matInput\n                name=\"name\"\n                placeholder=\"Name\"\n                i18n-placeholder=\"@@namePlaceholder\"\n                formControlName=\"name\"\n                required\n            />\n            <mat-error i18n=\"@@userNameError\">User's name is required</mat-error>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.email\">\n        <label\n            for=\"useremail\"\n            [class.error]=\"form.controls.email.invalid && form.controls.email.touched\"\n            i18n=\"@@emailLabel\"\n        >\n            Email<span>*</span>:\n        </label>\n        <mat-form-field appearance=\"outline\">\n            <input\n                matInput\n                name=\"useremail\"\n                placeholder=\"Email\"\n                i18n-placeholder=\"@@emailPlaceholder\"\n                formControlName=\"email\"\n                autocomplete=\"nope\"\n            />\n            <mat-error i18n=\"@@emailError\">A valid email is required</mat-error>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.staff_id\">\n        <label\n            for=\"staff-id\"\n            [class.error]=\"form.controls.staff_id.invalid && form.controls.staff_id.touched\"\n            i18n=\"@@cardNumberLabel\"\n        >\n            Card Number:\n        </label>\n        <mat-form-field appearance=\"outline\">\n            <input\n                matInput\n                name=\"staff-id\"\n                placeholder=\"Card Number\"\n                i18n-placeholder=\"@@cardNumberPlaceholder\"\n                formControlName=\"staff_id\"\n            />\n            <mat-error i18n=\"@@cardNumberError\">A valid Card Number is required</mat-error>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.support\">\n        <mat-checkbox name=\"support\" formControlName=\"support\" i18n=\"@@supportLabel\"\n            >Support</mat-checkbox\n        >\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.sys_admin\">\n        <mat-checkbox name=\"sys_admin\" formControlName=\"sys_admin\" i18n=\"@@adminLabel\"\n            >System Admin</mat-checkbox\n        >\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.staff_id\">\n        <label\n            for=\"new-password\"\n            [class.error]=\"form.controls.password.invalid && form.controls.password.touched\"\n            i18n=\"@@passwordLabel\"\n        >\n            Password:\n        </label>\n        <mat-form-field appearance=\"outline\">\n            <input\n                matInput\n                name=\"new-password\"\n                autocomplete=\"new-password\"\n                [type]=\"show_password ? 'text' : 'password'\"\n                placeholder=\"Password\"\n                i18n-placeholder=\"@@passwordPlaceholder\"\n                formControlName=\"password\"\n            />\n            <app-icon\n                matSuffix\n                [icon]=\"{ class: 'material-icons', content: 'visibility' }\"\n                (mousedown)=\"show_password = true\"\n                (window:mouseup)=\"show_password = false\"\n                (touchstart)=\"show_password = true\"\n                (window:touchend)=\"show_password = false\"\n            ></app-icon>\n            <mat-error i18n=\"@@passordError\">A valid password is required</mat-error>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.confirm_password\">\n        <label\n            for=\"confirm-password\"\n            [class.error]=\"\n                form.controls.confirm_password.invalid && form.controls.confirm_password.touched\n            \"\n            minlength=\"1\"\n            i18n=\"@@checkPasswordLabel\"\n        >\n            Confirm Pasword:\n        </label>\n        <mat-form-field appearance=\"outline\">\n            <input\n                matInput\n                [type]=\"show_confirm ? 'text' : 'password'\"\n                name=\"confirm-password\"\n                placeholder=\"Confirm Password\"\n                i18n-placeholder=\"@@checkPasswordPlaceholder\"\n                formControlName=\"confirm_password\"\n                minlength=\"1\"\n            />\n            <app-icon\n                matSuffix\n                [icon]=\"{ class: 'material-icons', content: 'visibility' }\"\n                (mousedown)=\"show_confirm = true\"\n                (window:mouseup)=\"show_confirm = false\"\n                (touchstart)=\"show_confirm = true\"\n                (window:touchend)=\"show_confirm = false\"\n            ></app-icon>\n            <mat-error i18n=\"@@checkPasswordError\">Passwords don't match</mat-error>\n        </mat-form-field>\n    </div>\n</form>\n","import { Component, Input, SimpleChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { EngineZone } from '@placeos/ts-client';\nimport { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material/chips';\n\nimport { EngineServiceLike } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\n\n@Component({\n    selector: 'zone-form',\n    templateUrl: './zone-form.component.html',\n    styleUrls: ['./zone-form.component.scss']\n})\nexport class ZoneFormComponent extends BaseDirective {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n    /** Function to exclude zones */\n    public readonly exclude = (zone: EngineZone) => zone.id === this.form.controls.id.value;\n\n    /** Service for handling zones */\n    public get zone_service(): EngineServiceLike {\n        return this._service.Zones;\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.form) {\n            this.updateZone();\n        }\n    }\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) {\n            input.value = '';\n        }\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    /** Update parent zone details if set */\n    private async updateZone() {\n        const parent_id = this.form.controls.parent_id ? this.form.controls.parent_id.value : '';\n        if (parent_id) {\n            const zone = await this._service.Zones.show(parent_id);\n            this.form.controls.parent_zone.setValue(zone);\n        }\n    }\n}\n","<div class=\"zone form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.parent_zone\">\n            <label for=\"parent-zone\" i18n=\"@@parentZoneLabel\">Parent Zone: </label>\n            <item-search-field\n                name=\"parent-zone\"\n                [service]=\"zone_service\"\n                [exclude]=\"exclude\"\n                formControlName=\"parent_zone\"\n            ></item-search-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"zone-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"@@nameLabel\"\n                >\n                Name<span>*</span>:\n                </label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"zone-name\"\n                    placeholder=\"Zone Name\"\n                    i18n-placeholder=\"@@zoneNamePlaceholder\"\n                    formControlName=\"name\"\n                    required\n                />\n                <mat-error i18n=\"@@zoneNameError\">Zone name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.display_name\">\n            <label\n                for=\"zone-display\"\n                [class.error]=\"form.controls.display_name.invalid && form.controls.display_name.touched\"\n            >\n                Display Name:\n            </label>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"zone-display\"\n                    placeholder=\"Zone display name\"\n                    i18n-placeholder=\"@@zoneDisplayNamePlaceholder\"\n                    formControlName=\"display_name\"\n                />\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.tags\">\n            <label\n                for=\"system-email\"\n                [class.error]=\"form.controls.tags.invalid && form.controls.tags.touched\"\n                i18n=\"@@tagsLabel\"\n                >\n                Tags:\n                </label\n            >\n            <mat-form-field appearance=\"outline\">\n                <mat-chip-list #chipList aria-label=\"Zone Tags\">\n                    <mat-chip\n                        *ngFor=\"let tag of tag_list\"\n                        [selectable]=\"true\"\n                        [removable]=\"true\"\n                        (removed)=\"removeTag(tag)\"\n                    >\n                        {{ tag }}\n                        <app-icon matChipRemove [icon]=\"{ class: 'backoffice-cross' }\"></app-icon>\n                    </mat-chip>\n                    <input\n                        placeholder=\"Zone tags...\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-chip-list>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.description\">\n            <label for=\"description\" i18n=\"@@descriptionLabel\">Description:</label>\n            <mat-form-field appearance=\"outline\">\n                <textarea\n                    matInput\n                    name=\"description\"\n                    placeholder=\"Description\"\n                    i18n-placeholder=\"@@descriptionPlaceholder\"\n                    formControlName=\"description\"\n                ></textarea>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.location\">\n            <label for=\"location\" i18n=\"@@locationLabel\">Location:</label>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"location\"\n                    placeholder=\"Geo-location details for zone. <lat, long>\"\n                    i18n-placeholder=\"@@locationPlaceholder\"\n                    formControlName=\"location\"\n                />\n            </mat-form-field>\n        </div>\n        <div class=\"fieldset\">\n            <div class=\"field\" *ngIf=\"form.controls.code\">\n                <label for=\"code\" i18n=\"@@codeLabel\">Code:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"code\"\n                        placeholder=\"Organisation Code\"\n                        i18n-placeholder=\"@@codePlaceholder\"\n                        formControlName=\"code\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.location\">\n                <label for=\"type\" i18n=\"@@typeLabel\">Type:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"type\"\n                        placeholder=\"Organisational Categorisation\"\n                        i18n-placeholder=\"@@zoneTypePlaceholder\"\n                        formControlName=\"type\"\n                    />\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"fieldset\">\n            <div class=\"field\" *ngIf=\"form.controls.count\">\n                <label for=\"count\" i18n=\"@@countLabel\">Count:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"count\"\n                        type=\"number\"\n                        placeholder=\"Resource count. Desks, Hardware, etc.\"\n                        i18n-placeholder=\"@@zoneFeatureCountPlaceholder\"\n                        formControlName=\"count\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.capacity\">\n                <label for=\"capacity\" i18n=\"@@capacityLabel\">Capacity:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"capacity\"\n                        type=\"number\"\n                        placeholder=\"Physical capacity of the zone\"\n                        i18n-placeholder=\"@@zoneCapacityPlaceholder\"\n                        formControlName=\"capacity\"\n                    />\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.map_id\">\n            <label for=\"map\" i18n=\"@@mapUrlLabel\">Map:</label>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"map\"\n                    placeholder=\"Map ID or URL\"\n                    i18n-placeholder=\"@@mapUrlPlaceholder\"\n                    formControlName=\"map_id\"\n                />\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../globals/base.directive';\n\n@Component({\n    selector: 'app-icon',\n    templateUrl: './icon.component.html',\n    styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent extends BaseDirective {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n}\n","<div class=\"app-icon\" *ngIf=\"icon\">\n    <i *ngIf=\"icon.type !== 'img'\" [class]=\"icon.class\">{{ icon.content }}</i>\n    <img *ngIf=\"icon.type === 'img'\" [src]=\"icon.src | safe:'resource'\" />\n</div>","import {\n    Component,\n    Input,\n    TemplateRef,\n    Output,\n    EventEmitter,\n    OnInit,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EngineResource, EngineDriver, EngineDriverRole } from '@placeos/ts-client';\n\nimport { ApplicationService } from '../../../services/app.service';\nimport { BaseDirective } from '../../globals/base.directive';\nimport { DialogEvent, Identity } from '../../utilities/types.utilities';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport {\n    ItemCreateUpdateModalComponent,\n    CreateEditModalData,\n} from 'src/app/overlays/item-modal/item-modal.component';\nimport { Router } from '@angular/router';\nimport { downloadFile, jsonToCsv } from '../../utilities/general.utilities';\nimport {\n    DuplicateModalComponent,\n    DuplicateModalData,\n} from 'src/app/overlays/duplicate-modal/duplicate-modal.component';\n\nexport interface ApplicationTab {\n    id: string;\n    name: string;\n    icon: ApplicationIcon;\n    template: TemplateRef<any>;\n    count?: number;\n}\n\n@Component({\n    selector: 'item-display',\n    templateUrl: './item-display.template.html',\n    styleUrls: ['./item-display.styles.scss'],\n})\nexport class ItemDisplayComponent<T extends Identity = any> extends BaseDirective\n    implements OnInit {\n    /** Name of the type of item being shown */\n    @Input() public name: string;\n    /** Base route of parent component */\n    @Input() public route: string;\n    /** Resource to display details of */\n    @Input() public item: T;\n    /** Whether resouce data is being loaded */\n    @Input() public loading: boolean;\n    /** Whether item is allowed to be edited and deleted */\n    @Input() public has_change = true;\n    /** Tabs available to the item type */\n    @Input() public tabs: ApplicationTab[] = [];\n    /** Emitter for events on the item display */\n    @Output() public event = new EventEmitter();\n    /** ID of the active tab */\n    public active_tab: string;\n\n    @ViewChild('content') public content_el: ElementRef<HTMLDivElement>;\n\n    /** Whether dark mode is enabled */\n    public get dark_mode(): boolean {\n        return this._service.Users.dark_mode;\n    }\n\n    public get is_scrolled() {\n        if (this.content_el) {\n            return this.content_el.nativeElement.scrollTop > 0;\n        }\n        return false;\n    }\n\n    public get driver_type(): string {\n        const item: any = this.item;\n        if (!item.role) {\n            return '';\n        }\n        const driver: EngineDriver = item || {};\n        switch (driver.role) {\n            case EngineDriverRole.Device:\n                return 'Device';\n            case EngineDriverRole.SSH:\n                return 'SSH';\n            case EngineDriverRole.Service:\n                return 'Service';\n            case EngineDriverRole.Websocket:\n                return 'Websocket';\n        }\n        return 'Logic';\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'right',\n            this._service.Hotkeys.listen(['ArrowRight'], () => this.changeTab(1))\n        );\n        this.subscription(\n            'left',\n            this._service.Hotkeys.listen(['ArrowLeft'], () => this.changeTab(-1))\n        );\n    }\n\n    public changeTab(direction) {\n        if (!this.item) {\n            return;\n        }\n        this.timeout(\n            'change_tab',\n            () => {\n                const index = this.tabs.findIndex((tab) => this._router.url.indexOf(tab.id) >= 0);\n                if (index >= 0 && this.tabs[index + direction]) {\n                    this._router.navigate([\n                        `/${this.route}`,\n                        this.item.id,\n                        this.tabs[index + direction].id,\n                    ]);\n                }\n            },\n            100\n        );\n    }\n\n    /** Copy the ID of the active item to the clipboard */\n    public copy() {\n        if (this.item && this.item.id) {\n            document.execCommand('copy');\n            this._service.notifyInfo('ID copied to clipboard');\n        }\n    }\n\n    /**\n     * Open modal to edit the active item\n     */\n    public edit() {\n        const ref = this._dialog.open<ItemCreateUpdateModalComponent, CreateEditModalData>(\n            ItemCreateUpdateModalComponent,\n            {\n                data: {\n                    service: (this.item as any)._service,\n                    item: this.item,\n                    form: [] as any,\n                    name: this.name,\n                },\n            }\n        );\n        this.subscription(\n            'confirm_ref',\n            ref.componentInstance.event.subscribe((e: DialogEvent) => {\n                if (e.reason === 'done') {\n                    this.item = e.metadata.item;\n                }\n            })\n        );\n    }\n\n    /**\n     * Delete the active item\n     */\n    public delete() {\n        this.event.emit({ type: 'delete' });\n    }\n\n    /**\n     * Delete the active item\n     */\n    public duplicateItem() {\n        const ref = this._dialog.open<DuplicateModalComponent, DuplicateModalData>(\n            DuplicateModalComponent,\n            { data: { item: this.item } }\n        );\n        this.subscription(\n            'confirm_ref',\n            ref.componentInstance.event.subscribe((e: DialogEvent) => {\n                if (e.reason === 'done') {\n                    this.item = e.metadata[0];\n                }\n            })\n        );\n    }\n\n    /**\n     * Delete the active item\n     */\n    public newFromItem() {\n        this.event.emit({ type: 'copy' });\n    }\n\n    /**\n     * Export the active item as a CSV\n     */\n    public exportAsTSV() {\n        const item = this.item.toJSON();\n        const filename = `${item.name.toLowerCase().split(' ').join('_')}.${this.name}.tsv`;\n        const ignore_keys = ['module_list', 'settings', '_type', 'version'];\n        console.log(\n            'TSV:',\n            Object.keys(item),\n            ignore_keys,\n            Object.keys(item).filter((key) => ignore_keys.indexOf(key) < 0)\n        );\n        const csv_data = jsonToCsv(\n            [item],\n            Object.keys(item).filter((key) => ignore_keys.indexOf(key) < 0),\n            '\\t'\n        );\n        downloadFile(filename, csv_data);\n    }\n}\n","<div class=\"container\" [class.dark-mode]=\"dark_mode\">\n    <header *ngIf=\"item && !loading\">\n        <div class=\"heading-group\">\n            <div class=\"heading\">\n                {{ item.display_name || item.custom_name || item.name || \"&lt;Unnamed&gt;\" }}\n            </div>\n            <div class=\"info\">\n                <div class=\"id\" *ngIf=\"item.id\" (click)=\"copy()\">\n                    <span>{{ item.id }}</span>\n                </div>\n                <div class=\"chip driver\" *ngIf=\"driver_type\" i18n=\"@@driverType\">\n                    { driver_type, select, Device { Device } Logic { Logic } SSH { SSH } Websocket {\n                    Websocket } Service { Service } other { Other } }\n                </div>\n                <div\n                    class=\"chip connect\"\n                    *ngIf=\"item.connected !== null && item.connected !== undefined\"\n                    [class.active]=\"item.connected\"\n                    i18n=\"@@onlineState\"\n                >\n                    { item.connected, select, true { Online } false { Offline } other { Other } }\n                </div>\n                <div class=\"chip secure\" *ngIf=\"item.tls\">\n                    <div class=\"icon\"><i class=\"backoffice-lock\"></i></div>\n                    <div class=\"text\" i18n=\"@@secure\">Secure</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"options\" *ngIf=\"has_change\">\n            <button [matMenuTriggerFor]=\"action_menu\" mat-icon-button>\n                <app-icon [icon]=\"{ class: 'backoffice-dots-three-vertical' }\"></app-icon>\n            </button>\n        </div>\n    </header>\n    <main *ngIf=\"item && !loading\">\n        <div class=\"tabs\">\n            <nav mat-tab-nav-bar [class.scroll]=\"is_scrolled\">\n                <a\n                    class=\"tab\"\n                    mat-tab-link\n                    *ngFor=\"let link of tabs\"\n                    [routerLink]=\"item.id ? ['/' + route, item.id, link.id] : ['/' + route, link.id]\"\n                    routerLinkActive\n                    #rla=\"routerLinkActive\"\n                    [active]=\"rla.isActive\"\n                >\n                    <app-icon [icon]=\"link.icon\"></app-icon>&nbsp;\n                    <div class=\"name\" i18n=\"@@tabNames\">\n                        { link.name, select, About { About } Modules { Modules } Zones { Zones }\n                        Triggers { Triggers } Systems { Systems } Metadata { Metadata } Children {\n                        Children } Drivers { Drivers } History { History } Applications {\n                        Applications } Authentication { Authentication } Users { Users } Database {\n                        Database } Clusters { Clusters } Interfaces { Interfaces } MQTT Brokers {\n                        MQTT Brokers } other { Other }} &nbsp;\n                    </div>\n                    <div class=\"count\" *ngIf=\"link.count || link.count === 0\">\n                        ({{ link.count || '0' }})\n                    </div>\n                </a>\n            </nav>\n            <div class=\"content\" #content (scroll)=\"is_scrolled\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </main>\n</div>\n<div class=\"not-mobile center\" *ngIf=\"!item && !loading\">\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <i class=\"backoffice-arrow-left\"></i>\n        </div>\n        <div class=\"text\" i18n=\"@@selectItem\">\n            Select a { name, select, system { system } module { module } driver { driver }\n            repository { repository } zone { zone } trigger { trigger } user { user } domain {\n            domain } other { other } } from the sidebar\n        </div>\n    </div>\n</div>\n<div class=\"mobile-only center\" *ngIf=\"!item && !loading\">\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <i class=\"backoffice-arrow-up\"></i>\n        </div>\n        <div class=\"text\" i18n=\"@@selectItemMobile\">\n            Select a { name, select, system { system } module { module } driver { driver }\n            repository { repository } zone { zone } trigger { trigger } user { user } domain {\n            domain } other { other } } from the search bar\n        </div>\n    </div>\n</div>\n<div class=\"info-block center\" *ngIf=\"loading\">\n    <div class=\"icon\">\n        <a-spinner circle-ring></a-spinner>\n    </div>\n    <div class=\"text\" i18n=\"@@itemLoading\">\n        Loading { name, select, system { system } module { module } driver { driver } repository {\n        repository } zone { zone } trigger { trigger } user { user } domain { domain } other { other\n        } }...\n    </div>\n</div>\n<mat-menu #action_menu=\"matMenu\">\n    <button *ngIf=\"has_change\" mat-menu-item (click)=\"edit()\">\n        <div class=\"group\">\n            <app-icon [icon]=\"{ class: 'backoffice-edit' }\"></app-icon>\n            <div class=\"text\" i18n=\"@@editAction\">\n                Edit { name, select, system { system } module { module } driver { driver }\n                repository { repository } zone { zone } trigger { trigger } user { user } domain {\n                domain } other { other } } [E]\n            </div>\n        </div>\n    </button>\n    <button mat-menu-item (click)=\"newFromItem()\">\n        <div class=\"group\">\n            <app-icon [icon]=\"{ class: 'backoffice-plus' }\"></app-icon>\n            <div class=\"text\" i18n=\"@@copyItemAction\">\n                Create new from this { name, select, system { system } module { module } driver {\n                driver } repository { repository } zone { zone } trigger { trigger } user { user }\n                domain { domain } other { other } }\n            </div>\n        </div>\n    </button>\n    <button mat-menu-item (click)=\"duplicateItem()\">\n        <div class=\"group\">\n            <app-icon [icon]=\"{ class: 'backoffice-flow-branch' }\"></app-icon>\n            <div class=\"text\" i18n=\"@@duplicateAction\">\n                Duplicate { name, select, system { system } module { module } driver { driver }\n                repository { repository } zone { zone } trigger { trigger } user { user } domain {\n                domain } other { other } }\n            </div>\n        </div>\n    </button>\n    <button mat-menu-item (click)=\"exportAsTSV()\">\n        <div class=\"group\">\n            <app-icon [icon]=\"{ class: 'backoffice-download' }\"></app-icon>\n            <div class=\"text\" i18n=\"@@exporeAction\">\n                Export { name, select, system { system } module { module } driver { driver }\n                repository { repository } zone { zone } trigger { trigger } user { user } domain {\n                domain } other { other } } as TSV template\n            </div>\n        </div>\n    </button>\n    <button *ngIf=\"has_change\" mat-menu-item (click)=\"delete()\">\n        <div class=\"group\">\n            <app-icon [icon]=\"{ class: 'backoffice-trash' }\"></app-icon>\n            <div class=\"text\" i18n=\"@@deleteAction\">\n                Delete { name, select, system { system } module { module } driver { driver }\n                repository { repository } zone { zone } trigger { trigger } user { user } domain {\n                domain } other { other } } [D]\n            </div>\n        </div>\n    </button>\n</mat-menu>\n","\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'forgot-pass-form',\n    templateUrl: './forgot-pass-form.template.html',\n    styleUrls: ['./forgot-pass-form.styles.scss']\n})\nexport class ForgotPassFormComponent {\n\n}\n\n","\nimport { LoginComponent } from './login.component';\nimport { ForgotPassFormComponent } from './forgot-pass-form/forgot-pass-form.component';\nimport { RegisterFormComponent } from './register-form/register-form.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\n\nexport const LOGIN_COMPONENTS: any[] = [\n    LoginComponent,\n    LoginFormComponent,\n    RegisterFormComponent,\n    ForgotPassFormComponent\n];\n","\nimport { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { ApplicationService } from '../../../../services/app.service';\nimport { FormGroup } from '@angular/forms';\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\nimport { LoginSettings } from 'src/app/shared/utilities/settings.interfaces';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'login-form',\n    templateUrl: './login-form.template.html',\n    styleUrls: ['./login-form.styles.scss']\n})\nexport class LoginFormComponent extends BaseDirective implements OnInit {\n    /** Form fields for logging in */\n    @Input() public form: FormGroup;\n    /** Emitter for user forgot password action */\n    @Output() public forgot = new EventEmitter<void>();\n    /** Emitter for form submission events */\n    @Output() public submitted = new EventEmitter<void>();\n    /** Settings for the login form */\n    public settings: LoginSettings;\n    /** Whether the password should be shown */\n    public show_password: boolean;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.settings = this._service.setting('app.login') || {};\n        });\n    }\n}\n\n","<div\n    class=\"container\"\n    (window:mouseup)=\"show_password = false\"\n    (window:touchend)=\"show_password = false\"\n>\n    <form name=\"login\" *ngIf=\"form\" [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.username\">\n            <label\n                for=\"username\"\n                [class.error]=\"form.controls.username.invalid && form.controls.username.touched\"\n                >Email:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <!-- <app-icon matPrefix [icon]=\"{ class: 'backoffice-user' }\"></app-icon> -->\n                <input\n                    matInput\n                    name=\"username\"\n                    placeholder=\"Email/Username\"\n                    formControlName=\"username\"\n                    autocomplete=\"username\"\n                />\n            </mat-form-field>\n        </div>\n        <div class=\"field password\" *ngIf=\"form.controls.password\">\n            <label\n                for=\"password\"\n                [class.error]=\"form.controls.password.invalid && form.controls.password.touched\"\n                >Password:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <!-- <app-icon matPrefix [icon]=\"{ class: 'backoffice-key' }\"></app-icon> -->\n                <input\n                    matInput\n                    name=\"password\"\n                    [type]=\"show_password ? 'text' : 'password'\"\n                    placeholder=\"Password\"\n                    formControlName=\"password\"\n                    autocomplete=\"current-password\"\n                />\n                <app-icon\n                    matSuffix\n                    [icon]=\"{ class: show_password ? 'backoffice-eye' : 'backoffice-eye' }\"\n                    (mousedown)=\"show_password = true\"\n                    (touchstart)=\"show_password = true\"\n                ></app-icon>\n                <mat-error *ngIf=\"form.controls.password.invalid\"\n                    >Invalid Username or Password</mat-error\n                >\n            </mat-form-field>\n        </div>\n        <!-- <mat-checkbox formControlName=\"remember\">Remember username</mat-checkbox> -->\n        <div class=\"forgot\" *ngIf=\"settings?.forgotten_password\" (tapped)=\"forgot.emit()\">\n            Forgot?\n        </div>\n        <div class=\"options\">\n            <button mat-button type=\"submit\" (tapped)=\"submitted.emit()\">Submit</button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { ApplicationService } from '../../../services/app.service';\nimport { BaseDirective } from '../../globals/base.directive';\nimport { ApplicationImageIcon } from '../../utilities/settings.interfaces';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'login-display',\n    templateUrl: './login.template.html',\n    styleUrls: ['./login.styles.scss']\n})\nexport class LoginComponent extends BaseDirective implements OnInit {\n    public login_form: FormGroup;\n    /** Name of the component contents to show */\n    public show: 'login' | 'forgot' | 'register';\n    /** Whether a user action is being processed */\n    public loading: boolean;\n    /** Logo of the application/organisation */\n    public logo: ApplicationImageIcon;\n    /** Current work environment for the application */\n    public env: string;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.show = 'login';\n        this.loading = true;\n        const remembered_name = localStorage.getItem('BACKOFFICE.username');\n        this.login_form = new FormGroup({\n            username: new FormControl(remembered_name || ''),\n            password: new FormControl(''),\n            remember: new FormControl(!!remembered_name)\n        });\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => this.init());\n    }\n\n    public init() {\n        this.env = this._service.setting('env');\n        this.logo = this._service.setting('app.logo') || {};\n        this.subscription(\n            'state',\n            this._service.Users.state.subscribe(state => {\n                this.loading = false;\n                if (state === 'invalid') {\n                    this.show = 'login';\n                } else if (state === 'loading') {\n                    this.loading = true;\n                }\n            })\n        );\n    }\n\n    public processLogin(e: any) {\n        if (e.type === 'login') {\n        } else if (e.type === 'forgot') {\n            this.show = 'forgot';\n        } else {\n            this.show = 'login';\n        }\n    }\n\n    public login() {\n        const form_values = this.login_form.value;\n        this._service.Users.login({\n            email: form_values.username,\n            password: form_values.password\n        }).then(\n            () => {\n                if (form_values.remember) {\n                    localStorage.setItem('BACKOFFICE.username', form_values.username);\n                }\n            },\n            err => {\n                console.log('Error:', err);\n                this.login_form.controls.password.setErrors({ invalid: true });\n            }\n        );\n    }\n\n    public forgottenPassword() {\n        this.show = 'forgot';\n    }\n}\n","<div class=\"container\" [class.uat]=\"env !== 'prod'\">\n    <div class=\"login-container\">\n        <header><div class=\"text\">Login</div></header>\n        <div class=\"form\" *ngIf=\"!loading; else load_state\">\n            <login-form\n                *ngIf=\"show === 'login'\"\n                [form]=\"login_form\"\n                (forgot)=\"forgottenPassword()\"\n                (submitted)=\"login()\"\n            ></login-form>\n            <register-form *ngIf=\"show === 'register'\"></register-form>\n            <forgot-pass-form *ngIf=\"show === 'forgot'\"></forgot-pass-form>\n        </div>\n    </div>\n</div>\n<ng-template #load_state>\n    <div class=\"loader\">\n        <div class=\"icon\">\n            <a-spinner circle-ring color=\"rgba(0,0,0, .54)\"></a-spinner>\n        </div>\n        <div class=\"text\">\n            Loading user data...\n        </div>\n    </div>\n</ng-template>\n","\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'register-form',\n    templateUrl: './register-form.template.html',\n    styleUrls: ['./register-form.styles.scss']\n})\nexport class RegisterFormComponent {\n\n}\n\n","\nimport { Component, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { BaseDirective } from '../../globals/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n\n@Component({\n    selector: 'searchbar',\n    templateUrl: './searchbar.template.html',\n    styleUrls: ['./searchbar.styles.scss']\n})\nexport class SearchbarComponent extends BaseDirective {\n    @Input() public filter: string;\n    @Input() public limit: string;\n    @Input() public dictation = true;\n    @Input() public clearable = true;\n    @Input() public placeholder = 'Search...';\n    @Output() public filterChange = new EventEmitter();\n    @Output() public focus = new EventEmitter();\n    @Output() public blur = new EventEmitter();\n\n    public model: any = {};\n\n    @ViewChild('input', { static: true }) private input: ElementRef;\n\n    /** Whether dark mode is enabled */\n    public get dark_mode(): boolean {\n        return this._service.Users.dark_mode;\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n        const win = window as any;\n        this.model.speech = !!(win.SpeechRecognition || win.webkitSpeechRecognition);\n    }\n\n    /**\n     * Activate dictation search\n     */\n    public startDictation() {\n        if (!this.input) { return; }\n        if (this.model.recognition) {\n            this.model.recognition.stop();\n            this.model.dictate = false;\n            this.model.recognition = null;\n            return;\n        }\n        const win = self as any;\n        const speech: any = win.SpeechRecognition || win.webkitSpeechRecognition;\n        if (speech) {\n            this.model.recognition = new speech();\n\n            this.model.recognition.continuous = false;\n            this.model.recognition.interimResults = false;\n\n            this.model.recognition.lang = 'en-US';\n            this.model.recognition.start();\n            this.model.dictate = true;\n\n            this.model.recognition.onresult = (e: any) => {\n                    // Update search field with dictation result\n                this.input.nativeElement.value = e.results[0][0].transcript;\n                this.filter = e.results[0][0].transcript;\n                this.model.recognition.stop();\n                this.post();\n                this.model.dictate = false;\n            };\n\n            this.model.recognition.onerror = (e: any) => {\n                this.model.recognition.stop();\n                this.model.dictate = false;\n            };\n        }\n    }\n\n    public focusInput() {\n        this.model.focus = true;\n        this.timeout('focus', () => {\n            if (this.input && this.input.nativeElement) {\n                this.input.nativeElement.focus();\n                this.focus.emit();\n            }\n        }, 50);\n    }\n\n    public clear() {\n        this.filter = '';\n        this.post();\n    }\n\n    public post() {\n        this.checkLimitations();\n        this.timeout('post', () => {\n            this.filterChange.emit(this.filter);\n        });\n    }\n\n    public checkLimitations() {\n        if (!this.limit) { return; }\n        for (let i = 0; i < (this.filter || '').length; i++) {\n            if (this.limit.indexOf(this.filter[i]) >= 0) {\n                this.filter = this.filter.substr(0, i) + this.filter.substr(i + 1);\n                i--;\n            }\n        }\n    }\n}\n","<div class=\"searchbar\" [class.dark-mode]=\"dark_mode\" widget>\n    <div class=\"field\" [class.focus]=\"model.focus || filter || model.dictate\">\n        <button mat-icon-button (touchrelease)=\"focusInput()\">\n            <app-icon [icon]=\"{ class: 'backoffice-magnifying-glass' }\"></app-icon>\n        </button>\n        <div class=\"input\">\n            <input #input [(ngModel)]=\"filter\" (ngModelChange)=\"post()\"\n                (focus)=\"model.focus = true; focus.emit($event)\"\n                (blur)=\"model.focus = false; blur.emit($event)\"\n                [placeholder]=\"placeholder\">\n        </div>\n        <button mat-icon-button *ngIf=\"model.speech && dictation\" [class.active]=\"model.dictate\" (tapped)=\"startDictation()\">\n            <app-icon [icon]=\"{ class: 'backoffice-mic' }\"></app-icon>\n        </button>\n        <button mat-icon-button class=\"close\" *ngIf=\"filter && clearable\" (tapped)=\"clear()\">\n            <app-icon [icon]=\"{ class: 'backoffice-cross' }\"></app-icon>\n        </button>\n        <ng-content></ng-content>\n    </div>\n</div>\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    OnChanges,\n    OnInit,\n    ViewChild,\n    ElementRef,\n    ViewChildren,\n    QueryList,\n    SimpleChanges\n} from '@angular/core';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { Router } from '@angular/router';\nimport { EngineModule, EngineDriverRole } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from '../../../services/app.service';\nimport { BaseDirective } from '../../globals/base.directive';\nimport { EngineServiceLike, HashMap, Identity } from '../../utilities/types.utilities';\nimport { unique } from '../../utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'sidebar',\n    templateUrl: './sidebar.template.html',\n    styleUrls: ['./sidebar.styles.scss']\n})\nexport class SidebarComponent extends BaseDirective implements OnChanges, OnInit {\n    /** Module name to display at the top of the sidebar */\n    @Input() public heading = '';\n    /** List of items to render on the list */\n    @Input() public list: any[] = [];\n    /** Name of the active module */\n    @Input() public module: EngineServiceLike;\n    /** Whether the list is being loaded */\n    @Input() public loading: boolean;\n    /** Additional query params to add to item load requests */\n    @Input('queryParams') public query_params: HashMap = {};\n    /** Whether sidebar is closed */\n    @Input() public close = false;\n    /** Search string */\n    @Input() public search = '';\n    /** Emitter for changes to the search string */\n    @Output() public searchChange = new EventEmitter();\n    /** Emitter for user actions on the component */\n    @Output() public event = new EventEmitter();\n    /** Async list of items to render on the sidebar list */\n    public items: BehaviorSubject<Identity[]> = new BehaviorSubject([]);\n    /** Whether the application has initialised */\n    public intialised: boolean;\n    /** Last time the list was updated */\n    public last_check: number;\n    /** Last total number of items when the list was fetched */\n    public last_total: number;\n\n    /** List of elements for each associated item */\n    @ViewChildren('list_item') private item_list: QueryList<ElementRef>;\n    /** Virtual scrolling viewport */\n    @ViewChild(CdkVirtualScrollViewport)\n    private viewport: CdkVirtualScrollViewport;\n\n    /** Whether dark mode is enabled */\n    public get dark_mode(): boolean {\n        return this._service.Users.dark_mode;\n    }\n\n    /** Whether list is has been scrolled from the top */\n    public get is_scrolled(): boolean {\n        if (this.viewport) {\n            const element = this.viewport.elementRef.nativeElement;\n            if (element) {\n                return element.scrollTop > 0;\n            }\n        }\n        return false;\n    }\n\n    /** Whether new items for the active module can be created */\n    public get new(): boolean {\n        if (this.module) {\n            return this._service.setting(`app.${this.module._api_route}.can_create`);\n        }\n        return false;\n    }\n\n    public get total(): number {\n        return this.search ? this.module.last_total : this.module.total;\n    }\n\n    public get grand_total(): number {\n        return this.module.total;\n    }\n\n    /** Heading value lower cased */\n    public get lowercase_heading() {\n        return (this.heading || '').toLowerCase();\n    }\n\n    /** Path of the active module */\n    public get route() {\n        const route = this.module._api_route;\n        return `/${route}`;\n    }\n\n    /** Maxiumum allowed items for the active module */\n    public get licenses(): number {\n        if (this.module) {\n            return this._service.setting(`app.${this.module._api_route}.licenses`);\n        }\n        return 0;\n    }\n\n    /** Map of item names to their IDs */\n    public get item_name(): HashMap<string> {\n        const map = {};\n        const list = this.items.getValue() || [];\n        for (let item of list) {\n            if (item instanceof EngineModule) {\n                const detail =\n                    item.role === EngineDriverRole.Service\n                        ? item.uri\n                        : item.role === EngineDriverRole.Logic\n                            ? item.control_system_id\n                            : item.ip;\n                map[item.id] = `${item.custom_name || item.name || '<Unnamed>'} <span class=\"small\">${detail}<span>`;\n            } else {\n                map[item.id] = item.custom_name || item.name || '<Unnamed>';\n            }\n        }\n        return map;\n    }\n\n    constructor(private _service: ApplicationService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            if (!this._service.get('BACKOFFICE.active_item')) {\n                this._service.set('BACKOFFICE.active_item', null);\n            }\n            if (!this._service.get('BACKOFFICE.removed')) {\n                this._service.set('BACKOFFICE.removed', '');\n            }\n            this.subscription(\n                'active_item',\n                this._service.listen('BACKOFFICE.active_item').subscribe(item => this.replaceActiveItem(item))\n            );\n            this.subscription(\n                'remove_item',\n                this._service.listen('BACKOFFICE.removed').subscribe(id => this.removeItem(id))\n            );\n            this.subscription(\n                'up',\n                this._service.Hotkeys.listen(['Alt', 'ArrowUp'], () => this.changeSelected(-1))\n            );\n            this.subscription(\n                'down',\n                this._service.Hotkeys.listen(['Alt', 'ArrowDown'], () => this.changeSelected(1))\n            );\n            this.items.next(this.list || []);\n            this.atBottom();\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (this._service.is_initialised && (changes.list || changes.close)) {\n            this.last_check = dayjs().valueOf();\n            this.items.next(this.list || []);\n            this.atBottom();\n        }\n        if (changes.module && changes.module.previousValue !== changes.module.currentValue) {\n            this.searching();\n        }\n        if (changes.query_params && this.query_params) {\n            this.searching();\n        }\n    }\n\n    /** Whether to update the list of items */\n    public get is_stale() {\n        const now = dayjs();\n        const last_check = dayjs(this.last_check);\n        return (\n            this.last_total !== this.items.getValue().length ||\n            last_check.add(1, 'm').isBefore(now, 's')\n        );\n    }\n\n    /**\n     * Check if user has scrolled to the bottom of the sidebar and emit an event to get next page of items\n     */\n    public atBottom() {\n        if (this.loading || !this.is_stale) {\n            return;\n        }\n        if (!this.viewport) {\n            return this.timeout('atBottom', () => this.atBottom());\n        }\n        const end = this.viewport.getRenderedRange().end;\n        const total = this.viewport.getDataLength();\n        if (end === total) {\n            this.last_total = total;\n            this.last_check = dayjs().valueOf();\n            if (this.last_total !== this.module.last_total) {\n                this.searching(this.list.length);\n            }\n        }\n    }\n\n    /**\n     * List item tracking function to reduce shadow dom re-rendering on changes\n     * @param item Item to check\n     * @param index Index of the item\n     */\n    public trackByFn(item: HashMap, index: number) {\n        return item.id || index;\n    }\n\n    /** Emit events to the parent element */\n    public post(type: string) {\n        this.event.emit({ type });\n    }\n\n    /**\n     * Update the list displayed on the sidebar\n     * @param offset Page offset for the list\n     */\n    public searching(offset: number = 0) {\n        this.loading = true;\n        if (this.module) {\n            this.module.query({ q: this.search, offset, ...(this.query_params || {}) }).then(\n                list => {\n                    this.list = offset ? this.list.concat(list) : list;\n                    this.list = unique(this.list, 'id');\n                    this.list.sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n                    this.items.next(this.list);\n                    this.loading = false;\n                },\n                err => {\n                    this._service.notifyError(`Error updating ${this.module._name} list. Error: ${JSON.stringify(err.response || err.message || err)}`);\n                    this.loading = false;\n                }\n            );\n        } else {\n            this.loading = false;\n        }\n    }\n\n    /**\n     * Update the selected item\n     * @param offset Offset with which to select the new item\n     */\n    public changeSelected(offset: number) {\n        const list = this.item_list.toArray();\n        const item_list = this.items.getValue();\n        if (list && list.length > 0) {\n            let index = item_list.findIndex(item => this._router.url.indexOf(`${item.id}`) >= 0);\n            index += offset;\n            if (index >= 0 && index < list.length) {\n                list[index].nativeElement.scrollIntoView(false);\n                this._service.navigate([this.module._api_route, item_list[index].id]);\n            }\n        }\n    }\n\n    /**\n     * Replaces the active item with the latest local version\n     * @param active_item New active item\n     */\n    private replaceActiveItem(active_item: Identity) {\n        if (!active_item) {\n            return;\n        }\n        console.log('Replace:', active_item);\n        const list = this.items.getValue() || [];\n        const index = list.findIndex(item => item.id === active_item.id);\n        if (index >= 0) {\n            list.splice(index, 1, active_item);\n        } else if (list.length > 0 && list[0].constructor === active_item.constructor) {\n            list.push(active_item);\n        } else {\n            list.push(active_item);\n        }\n\n        list.sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n        this.items.next([...list]);\n        console.log('Replaced');\n    }\n\n    /**\n     * Remove item from the list\n     * @param id\n     */\n    private removeItem(id: string): void {\n        if (!id) {\n            return;\n        }\n        const list = this.items.getValue() || [];\n        const index = list.findIndex(item => item.id === id);\n        if (index >= 0) {\n            list.splice(index, 1);\n\n            this.items.next([...list]);\n        }\n    }\n}\n","<div class=\"container\" [class.dark-mode]=\"dark_mode\">\n    <header>\n        <div class=\"heading\">\n            { heading, select, Systems { Systems } Modules { Modules } Zones { Zones } Drivers {\n            Drivers } Repositories { Repositories } Triggers { Triggers } Users { Users } Domains { Domains }\n            Admin { Admin } other { Other } }\n        </div>\n        <div class=\"count\">\n            <div>\n                <div\n                    class=\"inline\"\n                    [matTooltip]=\"heading + ' count / License count'\"\n                    i18n-matTooltip\n                >\n                    {{ total || 0 }} of {{ (search ? grand_total : licenses) || '∞' }}\n                </div>\n            </div>\n        </div>\n        <div\n            class=\"add\"\n            *ngIf=\"new && (total < licenses || !licenses)\"\n            (click)=\"post('new')\"\n            [matTooltip]=\"'Add ' + heading + ' [N]'\"\n            i18n-matTooltip\n        >\n            <i class=\"backoffice-plus\"></i>\n        </div>\n        <div\n            class=\"error\"\n            *ngIf=\"new && (total >= licenses && licenses)\"\n            matTooltip=\"\n            Exceeded quota! No new item can be created\n            until the total is below you license count.\"\n            i18n-matTooltip\n        >\n            <i class=\"backoffice-warning\"></i>\n        </div>\n        <button mat-icon-button class=\"mobile-only\" (touchrelease)=\"event.emit({ type: 'toggle' })\">\n            <app-icon [icon]=\"{ class: 'backoffice-' + (close ? 'cross' : 'list') }\"></app-icon>\n        </button>\n    </header>\n    <section class=\"search\">\n        <div class=\"input\">\n            <input\n                [(ngModel)]=\"search\"\n                (ngModelChange)=\"searching()\"\n                [placeholder]=\"'Filter ' + lowercase_heading\"\n                i18n-placeholder\n            />\n        </div>\n    </section>\n    <section class=\"content\" [class.scroll]=\"is_scrolled\">\n        <ng-content></ng-content>\n    </section>\n    <section class=\"list\">\n        <ng-container *ngIf=\"list\">\n            <cdk-virtual-scroll-viewport\n                itemSize=\"48\"\n                (scroll)=\"is_scrolled\"\n                (scrolledIndexChange)=\"atBottom()\"\n            >\n                <ng-container *cdkVirtualFor=\"let item of items | async; trackBy:trackByFn\">\n                    <a [routerLink]=\"[route, item.id]\" routerLinkActive=\"active\">\n                        <div #list_item class=\"item\" [title]=\"\">\n                            <div class=\"text\" [innerHTML]=\"item_name[item.id] | sanitize\"></div>\n                            <app-icon\n                                [icon]=\"{ type: 'icon', class: 'backoffice-check' }\"\n                            ></app-icon>\n                        </div>\n                    </a>\n                </ng-container>\n            </cdk-virtual-scroll-viewport>\n        </ng-container>\n        <div class=\"info-block center\" *ngIf=\"!loading && (!list || !list.length)\">\n            <div class=\"icon\">\n                <i class=\"backoffice-cross\"></i>\n            </div>\n            <div class=\"text\">{{ !search ? 'No ' + lowercase_heading : 'No matches found' }}</div>\n            <div class=\"btn\" *ngIf=\"new\">\n                <button mat-button (click)=\"post('new')\" i18n>\n                    Add new {{ lowercase_heading }}\n                </button>\n            </div>\n        </div>\n    </section>\n    <div class=\"loading\" *ngIf=\"loading\">\n        <a-spinner double-circle-ring color=\"#F44336\"></a-spinner>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n    Input,\n    OnDestroy,\n    ViewChild,\n    ElementRef,\n    SimpleChanges,\n    OnChanges\n} from '@angular/core';\nimport { Terminal } from 'xterm';\n\nimport { BaseDirective } from '../../globals/base.directive';\n\n@Component({\n    selector: 'a-terminal',\n    templateUrl: './terminal.component.html',\n    styleUrls: ['./terminal.component.scss']\n})\nexport class TerminalComponent extends BaseDirective implements OnInit, OnChanges, OnDestroy {\n    /** Contents to display on the terminal */\n    @Input() public content: string;\n    /** Resizes terminal display on change */\n    @Input() public resize: boolean;\n    /** Local instance of an xterm terminal */\n    public terminal: Terminal;\n\n    @ViewChild('terminal', { static: true }) public terminal_element: ElementRef<HTMLDivElement>;\n    @ViewChild('container', { static: true }) public container_el: ElementRef<HTMLDivElement>;\n\n    public ngOnInit(): void {\n        if (this.terminal) {\n            this.ngOnDestroy();\n        }\n        this.terminal = new Terminal({ theme: { background: `#263238` } });\n        this.terminal.open(this.terminal_element.nativeElement);\n        this.timeout('init', () => {\n            this.resizeTerminal();\n            this.updateTerminalContents(this.content || '');\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.content) {\n            this.updateTerminalContents(this.content || '');\n        }\n        if (changes.resize) {\n            this.timeout('resize', () => this.resizeTerminal());\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.terminal.clear();\n        this.terminal.dispose();\n    }\n\n    /**\n     * Resize the terminal display to fill the container element\n     */\n    public resizeTerminal(): void {\n        if (!this.terminal || !this.container_el) {\n            return;\n        }\n        const font_size = this.terminal.getOption('fontSize');\n        const line_height = this.terminal.getOption('lineHeight');\n        const box = this.container_el.nativeElement.getBoundingClientRect();\n        const width = Math.floor(box.width / (font_size * 0.6));\n        const height = Math.floor(box.height / (line_height * font_size * 1.28));\n        this.terminal.resize(width - 2, height);\n    }\n\n    /**\n     * Update the rendered contents of the terminal view\n     * @param new_content New contents to render\n     */\n    private updateTerminalContents(new_content: string) {\n        if (!this.terminal) {\n            return;\n        }\n        this.terminal.clear();\n        const lines: string[] = new_content.split('\\n');\n        for (const line of lines) {\n            this.terminal.writeln(line);\n        }\n        this.timeout('scroll', () => this.terminal.scrollToBottom(), 50);\n    }\n}\n","<div class=\"container\" #container (window:resize)=\"resizeTerminal()\">\n    <div class=\"terminal\" #terminal></div>\n</div>","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0 })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND_BIDIR = trigger('show', [\n    state('show', style({ opacity: 1, height: '*', width: '*' })),\n    state('hide', style({ opacity: 0, height: 0, width: 0 })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { Subscription, BehaviorSubject } from 'rxjs';\n\nexport class BaseClass {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: { [name: string]: Subscription | (() => void) } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n\n    /** Observable of the initialised state of the object */\n    public get initialised(): BehaviorSubject<boolean> {\n        return this._initialised;\n    }\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay) as any;\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = setInterval(() => fn(), delay) as any;\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name Name of the subscription to clear\n     */\n    protected unsub(name: string) {\n        if (this._subscriptions && this._subscriptions[name]) {\n            this._subscriptions[name] instanceof Subscription\n                ? (this._subscriptions[name] as Subscription).unsubscribe()\n                : (this._subscriptions[name] as any)();\n            this._subscriptions[name] = null;\n        }\n    }\n}\n","\nimport { OnDestroy, Directive } from '@angular/core';\nimport { BaseClass } from './base.class';\n\n@Directive({\n    selector: 'a-very-basic-component-base-that-should-not-be-used'\n})\nexport class BaseDirective extends BaseClass implements OnDestroy {\n\n    public ngOnDestroy(): void {\n        // Clear local timers\n        for (const key in this._timers) {\n            if (this._timers.hasOwnProperty(key)) {\n                this.clearTimeout(key);\n            }\n        }\n        // Clear local intervals\n        for (const key in this._intervals) {\n            if (this._intervals.hasOwnProperty(key)) {\n                this.clearInterval(key);\n            }\n        }\n        // Clear local subscriptions\n        for (const key in this._subscriptions) {\n            if (this._subscriptions.hasOwnProperty(key)) {\n                this.unsub(key);\n            }\n        }\n    }\n}\n\n","import { Injectable } from '@angular/core';\nimport {\n    CanActivate,\n    CanLoad,\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthorisedAdminGuard implements CanActivate, CanLoad {\n\n    constructor(private _service: ApplicationService, private _router: Router) {}\n\n    public canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n        const user = this._service.get('user');\n        const can_activate = user && user.sys_admin;\n        if (!can_activate) { this._router.navigate(['/systems']); }\n        return can_activate;\n    }\n\n    public canLoad(\n        route: Route,\n        segments: UrlSegment[]\n    ): Observable<boolean> | Promise<boolean> | boolean {\n        const user = this._service.get('user');\n        const can_load = user && user.sys_admin;\n        if (!can_load) { this._router.navigate(['/systems']); }\n        return can_load;\n    }\n}\n","\nimport { generateBasicHandlers, API } from '../common.mock';\nimport { HashMap } from '../../utilities/types.utilities';\n\nconst FILTER_FN = (item: any, q: HashMap) => {\n    if (!q || Object.keys(q).length <= 0) {\n        return true;\n    }\n    let match = true;\n    if (q.q) {\n        match = match && (item.name || '').toLowerCase().indexOf((q.q || '').toLowerCase()) >= 0;\n    }\n    return match;\n};\n\nconst DOMAIN_DATA = [];\n\n/** Add basic API handlers for systems */\ngenerateBasicHandlers(`${API}/domains`, DOMAIN_DATA, FILTER_FN);\n\n","\nimport * as DRIVER_DATA from '../data/drivers.json';\nimport { generateBasicHandlers, API } from '../common.mock';\nimport { HashMap } from '../../utilities/types.utilities';\n\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nconst FILTER_FN = (item: any, q: HashMap) => {\n    if (!q || Object.keys(q).length <= 0) {\n        return true;\n    }\n    let match = true;\n    if (q.q) {\n        match = match && (item.name || '').toLowerCase().indexOf((q.q || '').toLowerCase()) >= 0;\n    }\n    return match;\n};\n\n/** Add basic API handlers for systems */\ngenerateBasicHandlers(`${API}/drivers`, (DRIVER_DATA as any).default, FILTER_FN);\n\nwindow.control.handlers.push({\n    path: `${API}/drivers/:id/compiled`,\n    metadata: (DRIVER_DATA as any).default,\n    method: 'GET',\n    callback: (event) => true,\n} as MockHttpRequestHandler);\n\n","\nimport './zones.mock';\nimport './repositories.mock';\nimport './drivers.mock';\nimport './modules.mock';\nimport './systems.mock';\nimport './triggers.mock';\nimport './users.mock';\nimport './domains.mock';\n\nimport './settings.mock';\n","import * as MODULE_DATA from '../data/modules.json';\nimport { generateBasicHandlers, API, endpointData } from '../common.mock';\nimport { HashMap } from '../../utilities/types.utilities';\n\nconst FILTER_FN = (item: any, q: HashMap) => {\n    if (!q || Object.keys(q).length <= 0) {\n        return true;\n    }\n    let match = true;\n    if (q.q) {\n        match = match && (item.name || '').toLowerCase().indexOf((q.q || '').toLowerCase()) >= 0;\n    }\n    if (q.control_system_id) {\n        console.log('Endpoint data:', endpointData(`${API}/systems`));\n        const system = endpointData(`${API}/systems`).find((sys) => sys.id === q.control_system_id);\n        console.log('System:', system);\n        match =\n            match &&\n            (item.control_system_id === q.control_system_id ||\n                (system && system.modules.includes(item.id)));\n    }\n    if (q.driver_id) {\n        match = match && item.driver_id === q.driver_id;\n    }\n    return match;\n};\n\n/** Add basic API handlers for systems */\ngenerateBasicHandlers(`${API}/modules`, (MODULE_DATA as any).default, FILTER_FN);\n","import { EngineRepositoryType, MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport * as DISCOVERY_DATA from '../data/discovery.json';\n\nimport { generateBasicHandlers, API, generateID } from '../common.mock';\nimport { HashMap } from '../../utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\n\nconst FILTER_FN = (item: any, q: HashMap) => {\n    if (!q || Object.keys(q).length <= 0) {\n        return true;\n    }\n    let match = true;\n    if (q.q) {\n        match = match && (item.name || '').toLowerCase().indexOf((q.q || '').toLowerCase()) >= 0;\n    }\n    return match;\n};\n\nconst REPO_DATA = [\n    {\n        id: `repo-${generateID()}`,\n        name: 'PlaceOS Drivers',\n        folder_name: 'drivers/placeos',\n        uri: 'https://github.com/PlaceOS/drivers',\n        commit_hash: 'HEAD',\n        type: EngineRepositoryType.Driver,\n    },\n];\n\nconst DRIVER_LIST = (DISCOVERY_DATA as any).default.map((driver) => driver.id);\n\nconst COMMIT_LIST = [\n    {\n        commit: generateID(6, '1234567890abcdef'.split('')),\n        date: dayjs().subtract(Math.floor(Math.random() * 30 * 24 * 60), 'm').valueOf(),\n        author: 'alex@place.tech',\n        subject: 'feat(drivers): cleanup drivers',\n    },\n    {\n        commit: generateID(6, '1234567890abcdef'.split('')),\n        date: dayjs().subtract(Math.floor(Math.random() * 30 * 24 * 60), 'm').valueOf(),\n        author: 'alex@place.tech',\n        subject: 'chore(readme): update readme',\n    },\n    {\n        commit: generateID(6, '1234567890abcdef'.split('')),\n        date: dayjs().subtract(Math.floor(Math.random() * 30 * 24 * 60), 'm').valueOf(),\n        author: 'alex@place.tech',\n        subject: 'refactor(drivers): cleanup lighting driver',\n    },\n    {\n        commit: generateID(6, '1234567890abcdef'.split('')),\n        date: dayjs().subtract(Math.floor(Math.random() * 30 * 24 * 60), 'm').valueOf(),\n        author: 'alex@place.tech',\n        subject: 'test(drivers): update test coverage',\n    },\n];\n\nCOMMIT_LIST.sort((a, b) => b.date - a.date);\n\n/** Add basic API handlers for systems */\ngenerateBasicHandlers(`${API}/repositories`, REPO_DATA, FILTER_FN);\n\n/** Add handlers for getting respository drivers */\nwindow.control.handlers.push({\n    path: `${API}/repositories/:id/drivers`,\n    metadata: [],\n    method: 'GET',\n    callback: (event) => {\n        if (event.route_params.id) {\n            return DRIVER_LIST;\n        }\n        throw { status: 404, message: 'System not found' };\n    },\n} as MockHttpRequestHandler);\n\n/** Add handlers for getting respository driver's commits */\nwindow.control.handlers.push({\n    path: `${API}/repositories/:id/commits`,\n    metadata: [],\n    method: 'GET',\n    callback: (event) => {\n        if (event.route_params.id) {\n            return COMMIT_LIST;\n        }\n        throw { status: 404, message: 'System not found' };\n    },\n} as MockHttpRequestHandler);\n\n/** Add handlers for getting respository driver's details */\nwindow.control.handlers.push({\n    path: `${API}/repositories/:id/details`,\n    metadata: [],\n    method: 'GET',\n    callback: (event) => {\n        if (event.route_params.id) {\n            return (DISCOVERY_DATA as any).default.find(\n                (driver) => driver.id === event.query_params.driver\n            );\n        }\n        throw { status: 404, message: 'System not found' };\n    },\n} as MockHttpRequestHandler);\n","\nimport { generateBasicHandlers, API, listenToHandlerChanges, generateID } from '../common.mock';\nimport { HashMap } from '../../utilities/types.utilities';\n\nimport { EncryptionLevel } from '@placeos/ts-client';\n\nconst FILTER_FN = (item: any, q: HashMap) => {\n    if (!q || Object.keys(q).length <= 0) {\n        return true;\n    }\n    let match = true;\n    if (q.q) {\n        match = match && (item.name || '').toLowerCase().indexOf((q.q || '').toLowerCase()) >= 0;\n    }\n    if (q.parent_id) {\n        match = match && item.parent_id === q.parent_id;\n    }\n    return match;\n};\n\nconst SETTINGS_DATA = [];\n\nconst handle_items_fn = (list) => {\n    list.forEach(item => {\n        if (item.settings && !SETTINGS_DATA.find(s => s.parent_id === item.id)) {\n            SETTINGS_DATA.push({\n                id: `setting-${generateID()}`,\n                parent_id: item.id,\n                encryption_level: EncryptionLevel.None,\n                settings_string: item.settings instanceof Object ? JSON.stringify(item.settings) : item.settings\n            });\n        }\n    });\n    console.log('Settings:', SETTINGS_DATA);\n};\n\nlet obs = listenToHandlerChanges(`${API}/systems`);\nif (obs) {\n    obs.subscribe(handle_items_fn);\n}\nobs = listenToHandlerChanges(`${API}/modules`);\nif (obs) {\n    obs.subscribe(handle_items_fn);\n}\nobs = listenToHandlerChanges(`${API}/zones`);\nif (obs) {\n    obs.subscribe(handle_items_fn);\n}\nobs = listenToHandlerChanges(`${API}/drivers`);\nif (obs) {\n    obs.subscribe(handle_items_fn);\n}\n\n/** Add basic API handlers for systems */\ngenerateBasicHandlers(`${API}/settings`, SETTINGS_DATA, FILTER_FN);\n\n\n","\nimport * as SYSTEM_DATA from '../data/systems.json';\nimport { generateBasicHandlers, API, endpointData } from '../common.mock';\nimport { HashMap } from '../../utilities/types.utilities';\n\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nconst FILTER_FN = (item: any, q: HashMap) => {\n    if (!q || Object.keys(q).length <= 0) {\n        return true;\n    }\n    let match = true;\n    if (q.q) {\n        match = match && (item.name || '').toLowerCase().indexOf((q.q || '').toLowerCase()) >= 0;\n    }\n    if (q.zone_id) {\n        match = match && (item.zones || []).includes(q.zone_id);\n    }\n    if (q.module_id) {\n        match = match && (item.modules || []).includes(q.module_id);\n    }\n    return match;\n};\n\n/** Add basic API handlers for systems */\ngenerateBasicHandlers(`${API}/systems`, (SYSTEM_DATA as any).default, FILTER_FN);\n\n/** Add handlers for getting system's zones */\nwindow.control.handlers.push({\n    path: `${API}/systems/:id/zones`,\n    metadata: [],\n    method: 'GET',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const system = endpointData(`${API}/systems`).find(sys => sys.id === event.route_params.id);\n            if (system) {\n                const zones = endpointData(`${API}/zones`);\n                return zones.filter(\n                    (item) => system.zones.includes(item.id)\n                );\n            }\n        }\n        throw { status: 404, message: 'System not found' };\n    },\n} as MockHttpRequestHandler);\n\n/** Add handlers for getting system's modules */\nwindow.control.handlers.push({\n    path: `${API}/systems/:id/modules`,\n    metadata: [],\n    method: 'GET',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const system = endpointData(`${API}/systems`).find(sys => sys.id === event.route_params.id);\n            if (system){\n                const modules = endpointData(`${API}/modules`);\n                return modules.filter(\n                    (item) => system.modules.includes(item.id)\n                );\n            }\n        }\n        throw { status: 404, message: 'System not found' };\n    },\n} as MockHttpRequestHandler);\n\n/** Add handlers for getting system's triggers */\nwindow.control.handlers.push({\n    path: `${API}/systems/:id/triggers`,\n    metadata: [],\n    method: 'GET',\n    callback: (event) => {\n        if (event.route_params.id) {\n            return [];\n        }\n        throw { status: 404, message: 'System not found' };\n    },\n} as MockHttpRequestHandler);\n\n/** Add handlers for getting system's inherited settings */\nwindow.control.handlers.push({\n    path: `${API}/systems/:id/settings`,\n    metadata: [],\n    method: 'GET',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const settings = endpointData(`${API}/settings`).filter(sys => sys.id === event.route_params.id);\n            return settings.reduce((map, item) => ({ ...map, ...JSON.parse(item.settings_string) }))\n        }\n        throw { status: 404, message: 'System not found' };\n    },\n} as MockHttpRequestHandler);\n","\nimport { generateBasicHandlers, API } from '../common.mock';\nimport { HashMap } from '../../utilities/types.utilities';\n\nconst FILTER_FN = (item: any, q: HashMap) => {\n    if (!q || Object.keys(q).length <= 0) {\n        return true;\n    }\n    let match = true;\n    if (q.q) {\n        match = match && (item.name || '').toLowerCase().indexOf((q.q || '').toLowerCase()) >= 0;\n    }\n    return match;\n};\n\nconst TRIGGER_DATA = [];\n\n/** Add basic API handlers for systems */\ngenerateBasicHandlers(`${API}/triggers`, TRIGGER_DATA, FILTER_FN);\n\n","\nimport { generateBasicHandlers, generateID, API } from '../common.mock';\nimport { HashMap } from '../../utilities/types.utilities';\n\nimport * as faker from 'faker';\n\nconst FILTER_FN = (item: any, q: HashMap) => {\n    if (!q || Object.keys(q).length <= 0) {\n        return true;\n    }\n    let match = true;\n    if (q.q) {\n        match = match && (item.name || '').toLowerCase().indexOf((q.q || '').toLowerCase()) >= 0;\n    }\n    return match;\n};\n\nconst PREDFINED_USERS = [\n    'Alex Sorafumo',\n    'Jonathan McFarlane',\n    'Stephen von Takach',\n    'Alexandre Chuvand',\n    'Jeremy West',\n    'Phil Kheav',\n    'Sravani Kotha'\n].map((name) => ({\n    id: `user-${generateID()}`,\n    name,\n    email: `${name.split(' ').join('.')}@place.tech`,\n    support: Math.floor(Math.random() * 999_999) % 10 === 0,\n    sys_admin: Math.floor(Math.random() * 999_999) % 10 === 0\n}));\n\nconst USER_DATA = Array(30).fill(0).map(() => {\n    const name = `${faker.name.firstName()} ${faker.name.lastName()}`;\n    return {\n        id: `user-${generateID()}`,\n        name,\n        email: `${name.split(' ').join('.')}@place.tech`,\n        support: Math.floor(Math.random() * 999_999) % 10 === 0,\n        sys_admin: Math.floor(Math.random() * 999_999) % 10 === 0\n    }\n}).concat(PREDFINED_USERS);\n\nconst CURRENT_USER = {\n    id: `current`,\n    name: 'Place Admin',\n    email: `admin@place.tech`,\n    support: Math.floor(Math.random() * 999_999) % 10 === 0,\n    sys_admin: Math.floor(Math.random() * 999_999) % 10 === 0\n};\n\n/** Add basic API handlers for systems */\ngenerateBasicHandlers(`${API}/users`, [...USER_DATA, CURRENT_USER], FILTER_FN);\n","import * as ZONE_DATA from '../data/zones.json';\nimport { generateBasicHandlers, API, endpointData } from '../common.mock';\nimport { HashMap } from '../../utilities/types.utilities';\n\nconst FILTER_FN = (item: any, q: HashMap) => {\n    if (!q || Object.keys(q).length <= 0) {\n        return true;\n    }\n    let match = true;\n    if (q.q) {\n        match = match && (item.name || '').toLowerCase().indexOf((q.q || '').toLowerCase()) >= 0;\n    }\n    if (q.parent) {\n        match = match && item.parent_id === q.parent;\n    }\n    if (q.control_system_id) {\n        const system = endpointData(`${API}/systems`).find((sys) => sys.id === q.control_system_id);\n        match = match && system && system.zones.includes(item.id);\n    }\n    return match;\n};\n\n/** Add basic API handlers for systems */\ngenerateBasicHandlers(`${API}/zones`, (ZONE_DATA as any).default, FILTER_FN);\n","import { Observable, BehaviorSubject } from 'rxjs';\nimport { HashMap } from '../utilities/types.utilities';\n\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\n/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/engine/v2';\n\nconst ENDPOINT_SUBJECTS: HashMap<BehaviorSubject<any[]>> = {};\nconst ENDPOINT_OBSERVABLES: HashMap<Observable<any[]>> = {};\n/** List of available characters for IDs */\nconst AVAILABLE_CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz~'.split('');\n\nexport type FilterFn<T> = (item: T, query: HashMap) => boolean;\n\n/**\n * Generate an ID with length\n * @param length Length of the ID\n */\nexport function generateID(length: number = 12, chars: string[] = AVAILABLE_CHARS) {\n    let id = '';\n    while (id.length < length) {\n        id += chars[Math.floor(Math.random() * chars.length)];\n    }\n    return id;\n}\n\n/**\n * Get obsevable for changes to data on endpoint\n * @param endpoint Endpoint to listen to\n */\nexport function listenToHandlerChanges(endpoint: string): Observable<any> {\n    return ENDPOINT_OBSERVABLES[endpoint];\n}\n\n/**\n * Get list of data from endpoint\n * @param endpoint Endpoint to grab data for\n */\nexport function endpointData(endpoint: string): any[] {\n    return (ENDPOINT_SUBJECTS[endpoint] ? ENDPOINT_SUBJECTS[endpoint].getValue() : null) || [];\n}\n\n/**\n * Function the generate the bas\n * @param endpoint\n * @param data\n */\nexport function generateBasicHandlers<T = any>(\n    endpoint: string,\n    data: T[],\n    filter: FilterFn<T> = (_: T, q: HashMap) => true\n): Observable<T[]> {\n    if (ENDPOINT_SUBJECTS[endpoint]) {\n        ENDPOINT_SUBJECTS[endpoint].complete();\n        delete ENDPOINT_SUBJECTS[endpoint];\n        delete ENDPOINT_OBSERVABLES[endpoint];\n    }\n    console.log('Data:', endpoint, data);\n    ENDPOINT_SUBJECTS[endpoint] = new BehaviorSubject<T[]>(data);\n    ENDPOINT_OBSERVABLES[endpoint] = ENDPOINT_SUBJECTS[endpoint].asObservable();\n    if (!window.control) {\n        window.control = {};\n    }\n    if (!window.control.handlers) {\n        window.control.handlers = [];\n    }\n    /** Add GET for index */\n    window.control.handlers.push({\n        path: `${endpoint}`,\n        metadata: data,\n        method: 'GET',\n        callback: (event) => {\n            const list = ENDPOINT_SUBJECTS[endpoint].getValue() || [];\n            list.sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n            return list.filter((item) => filter(item, event.query_params));\n        },\n    } as MockHttpRequestHandler);\n    /** Add GET for show */\n    window.control.handlers.push({\n        path: `${endpoint}/:id`,\n        metadata: data,\n        method: 'GET',\n        callback: (event) => {\n            const list = ENDPOINT_SUBJECTS[endpoint].getValue() || [];\n            return list.find(\n                (item) => item.id === event.route_params.id && filter(item, event.query_params)\n            );\n        },\n    } as MockHttpRequestHandler);\n    /** Add POST for item */\n    window.control.handlers.push({\n        path: `${endpoint}`,\n        metadata: data,\n        method: 'POST',\n        callback: (event) => {\n            const item = event.body;\n            item.id = `item-${generateID()}`;\n            const list = ENDPOINT_SUBJECTS[endpoint].getValue() || [];\n            list.push(item);\n            ENDPOINT_SUBJECTS[endpoint].next(list);\n            return item;\n        },\n    } as MockHttpRequestHandler);\n    /** Add PATCH/PUT for item */\n    const action = {\n        path: `${endpoint}/:id`,\n        metadata: data,\n        method: 'POST',\n        callback: (event) => {\n            const item = event.body;\n            const list = ENDPOINT_SUBJECTS[endpoint].getValue() || [];\n            const index = list.find((an_item) => an_item.id === event.query_params.id);\n            if (index >= 0) {\n                const old_item = list[index];\n                list.splice(index, 1, { ...old_item, ...item });\n                ENDPOINT_SUBJECTS[endpoint].next(list);\n                return item;\n            } else {\n                throw { status: 404, message: 'Not found' };\n            }\n        },\n    } as MockHttpRequestHandler;\n    window.control.handlers.push(action);\n    window.control.handlers.push({ ...action, method: 'PUT' });\n    /** Add DELETE for item */\n    window.control.handlers.push({\n        path: `${endpoint}/:id`,\n        metadata: data,\n        method: 'DELETE',\n        callback: (event) => {\n            const item = event.body;\n            const list = ENDPOINT_SUBJECTS[endpoint].getValue() || [];\n            const index = list.find((an_item) => an_item.id === event.query_params.id);\n            if (index >= 0) {\n                list.splice(index, 1);\n                ENDPOINT_SUBJECTS[endpoint].next(list);\n                return item;\n            } else {\n                throw { status: 404, message: 'Not found' };\n            }\n        },\n    } as MockHttpRequestHandler);\n\n    return ENDPOINT_OBSERVABLES[endpoint];\n}\n","\nimport './system.mockup';\nimport './backend';\n\nexport * from './system.mockup';\n","/**\n * @Author: Alex Sorafumo <alex.sorafumo>\n * @Date:   11/01/2017 4:16 PM\n * @Email:  alex@yuion.net\n * @Filename: mock-system.ts\n * @Last modified by:   Alex Sorafumo\n * @Last modified time: 03/02/2017 2:26 PM\n */\n\nimport * as dayjs from 'dayjs';\n\nconst win = self as any;\n\nwin.systemData = win.systemData || {};\nwin.control = win.control || {};\nwin.control.systems = win.control.systems || {};\nwin.control.systems['sys-B0'] = {\n    System: [\n        {\n            name: 'Demo System'\n        }\n    ],\n    Demo: [\n        {\n            volume: 0,\n            mute: false,\n            views: 0,\n            state: 'Idle',\n\n            $play: () => {\n                win.control.systems['sys-B0'].Demo[0].state = 'Playing';\n            },\n\n            $stop: () => {\n                win.control.systems['sys-B0'].Demo[0].state = 'Stopped';\n            },\n\n            $volume: (value: number) => {\n                this.volume = value;\n                if (this.volume > 100) {\n                    this.volume = 100;\n                } else if (this.volume < 0) {\n                    this.volume = 0;\n                }\n            },\n\n            $mute: (state: boolean) => {\n                this.mute = state;\n            },\n\n            $state: (status: string) => {\n                this.state = status;\n            }\n        }\n    ]\n};\n\nsetTimeout(() => initMessages(), 500);\n\nfunction initMessages() {\n    if (win.backend && win.backend.model.user) {\n        const messages = [\n            'Testing',\n            'Response to Testing',\n            `Hello I'm ${win.backend.model.user.name}`,\n            `Hello ${win.backend.model.user.name}, this is the concierge`,\n            'Can I book a room for tomorrow at 9:30am?',\n            'Sure, how does Activity Space 31.04 sound?',\n            'That\\'s exactly what I\\'m looking for, thanks',\n            'Alright, you now have a booking for Activity Space 31.04 at 9:30am tomorrow.'\n        ];\n        const time = dayjs()\n            .add(-messages.length * 30, 'm')\n            .startOf('s');\n        let index = 0;\n        for (const msg of messages) {\n            win.control.systems['sys-B0'].Slack[0].threads.local.push({\n                text: msg,\n                username: index % 2 === 0 ? win.backend.model.user.name : '',\n                ts: time.valueOf()\n            });\n            index++;\n            time.add(30, 'm');\n        }\n    } else {\n        setTimeout(() => initMessages(), 500);\n    }\n}\n\nwin.systemData['sys-B0'] = win.control.systems['sys-B0'];\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport * as dayjs from 'dayjs';\n\n@Pipe({\n    name: 'dateFrom'\n})\nexport class DateFromPipe implements PipeTransform {\n    public transform(value: number): string {\n        const now = dayjs();\n        const date = dayjs(value);\n        let diff = now.diff(date, 'm');\n        const direction = diff < 0;\n        diff = Math.abs(diff);\n        if (diff < 1) { // Less than a minute\n            return direction ? 'In less than a minute' : 'Less than a minute ago';\n        } else if (diff === 1) { // 1 minute\n            return direction ? 'In about 1 minute' : 'About a minute ago';\n        } else if (diff < 60) { // Minutes\n            return direction ? `In ${diff} minutes` : `${diff} minutes ago`;\n        } else if (diff < 24 * 60) { // Hours\n            const hours = Math.floor(diff / 60);\n            return direction\n                ? `In ${hours} hour${hours === 1 ? '' : 's'}`\n                : `${hours} hour${hours === 1 ? '' : 's'} ago`;\n        } else if (diff < 30 * 24 * 60) { // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? `In ${days} day${days === 1 ? '' : 's'}`\n                : `${days} day${days === 1 ? '' : 's'} ago`;\n        } else if (diff < 365 * 24 * 60) { // Months\n            const months = Math.floor(diff / (30 * 24 * 60));\n            return direction\n                ? `In ${months} month${months === 1 ? '' : 's'}`\n                : `${months} month${months === 1 ? '' : 's'} ago`;\n        } else if (diff >= 365 * 24 * 60) { // Years\n            const years = Math.floor(diff / (365 * 24 * 60));\n            return direction\n                ? `In ${years} year${years === 1 ? '' : 's'}`\n                : `${years} year${years === 1 ? '' : 's'} ago`;\n        }\n        return 'Just now';\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'driverFormat'\n})\nexport class DriverFormatPipe implements PipeTransform {\n    public transform(format: string): string {\n        if (typeof format !== 'string') return '';\n        if ((format || '').indexOf('/') >= 0) {\n            const parts = format.split('/');\n            parts.splice(0, 1);\n            return `<div class=\"formatted-driver-name\">${parts\n                .map(i => `<div class=\"name-part\">${i}</div>`)\n                .join(\n                    '<div class=\"icon\"><i class=\"material-icons\">keyboard_arrow_right</i></div>'\n                )}</div>`;\n        }\n        return format || '';\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'formatList'\n})\nexport class FormatListPipe implements PipeTransform {\n    public transform(value: string[]): any {\n        return value.join('\\n');\n    }\n}\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { RouterModule } from '@angular/router';\n\nimport { ASpinnerModule } from '@acaprojects/ngx-spinners';\nimport { APipesModule } from '@acaprojects/ngx-pipes';\nimport { ACustomEventsModule } from '@acaprojects/ngx-custom-events';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n// import { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { CdkTableModule } from '@angular/cdk/table';\n\nimport { BaseDirective } from './globals/base.directive';\nimport { ContextMenuComponent } from './components/context-menu/context-menu.component';\nimport { ItemDisplayComponent } from './components/item-display/item-display.component';\nimport { LOGIN_COMPONENTS } from './components/login';\nimport { SearchbarComponent } from './components/searchbar/searchbar.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { BaseRootComponent } from './components/base-root.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { TerminalComponent } from './components/terminal/terminal.component';\n\nimport { SettingsFieldComponent } from './components/custom-fields/settings-field/settings-field.component';\nimport { ItemSearchFieldComponent } from './components/custom-fields/item-search-field/item-search-field.component';\nimport { DateFieldComponent } from './components/custom-fields/date-field/date-field.component';\nimport { TimeFieldComponent } from './components/custom-fields/time-field/time-field.component';\nimport { SystemExecFieldComponent } from './components/custom-fields/system-exec-field/system-exec-field.component';\n\nimport { SystemFormComponent } from './components/forms/system-form/system-form.component';\nimport { ModuleFormComponent } from './components/forms/module-form/module-form.component';\nimport { ZoneFormComponent } from './components/forms/zone-form/zone-form.component';\nimport { DriverFormComponent } from './components/forms/driver-form/driver-form.component';\nimport { UserFormComponent } from './components/forms/user-form/user-form.component';\nimport { DomainFormComponent } from './components/forms/domain-form/domain-form.component';\nimport { ApplicationFormComponent } from './components/forms/application-form/application-form.component';\nimport { RepositoryFormComponent } from './components/forms/repository-form/repository-form.component';\nimport { TriggerFormComponent } from './components/forms/trigger-form/trigger-form.component';\nimport { TriggerConditionFormComponent } from './components/forms/trigger-condition-form/trigger-condition-form.component';\nimport { TriggerConditionComparisonFormComponent } from './components/forms/trigger-condition-form/comparison-form/comparison-form.component';\nimport { TriggerConditionTimeFormComponent } from './components/forms/trigger-condition-form/time-form/time-form.component';\nimport { TriggerActionFormComponent } from './components/forms/trigger-action-form/trigger-action-form.component';\nimport { SystemTriggerFormComponent } from './components/forms/system-trigger-form/system-trigger-form.component';\n\nimport { DriverFormatPipe } from './pipes/driver-format.pipe';\nimport { DateFromPipe } from './pipes/date-from.pipe';\nimport { FormatListPipe } from './pipes/format-list.pipe';\nimport { OauthSourceFormComponent } from './components/forms/oauth-source-form/oauth-source-form.component';\nimport { LdapSourceFormComponent } from './components/forms/ldap-source-form/ldap-source-form.component';\nimport { SamlSourceFormComponent } from './components/forms/saml-source-form/saml-source-form.component';\nimport { ObjectListFieldComponent } from './components/custom-fields/object-list-field/object-list-field.component';\nimport { DebugOutputComponent } from './components/debug-output/debug-output.component';\nimport { SettingsFormComponent } from './components/forms/settings-form/settings-form.component';\nimport { ADatePickerModule } from '@acaprojects/ngx-date-picker';\nimport { BrokerFormComponent } from './components/forms/broker-form/broker-form.component';\n\nconst FORM_COMPONENTS: Type<any>[] = [\n    SystemFormComponent,\n    ModuleFormComponent,\n    ZoneFormComponent,\n    DriverFormComponent,\n    UserFormComponent,\n    DomainFormComponent,\n    ApplicationFormComponent,\n    TriggerFormComponent,\n    RepositoryFormComponent,\n    TriggerConditionFormComponent,\n    TriggerActionFormComponent,\n    SystemTriggerFormComponent,\n    OauthSourceFormComponent,\n    LdapSourceFormComponent,\n    SamlSourceFormComponent,\n    SettingsFormComponent,\n    BrokerFormComponent,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    BaseDirective,\n    BaseRootComponent,\n    ItemDisplayComponent,\n    SearchbarComponent,\n    SidebarComponent,\n    ...LOGIN_COMPONENTS,\n    IconComponent,\n    ...FORM_COMPONENTS,\n    TerminalComponent,\n    DebugOutputComponent,\n];\n\nconst PIPES: Type<any>[] = [\n    DriverFormatPipe,\n    DateFromPipe,\n    FormatListPipe,\n];\n\nconst ENTRY_COMPONENT: Type<any>[] = [\n    ItemSearchFieldComponent,\n    SettingsFieldComponent,\n    DateFieldComponent,\n    TimeFieldComponent,\n    ContextMenuComponent,\n    SystemExecFieldComponent,\n    ObjectListFieldComponent,\n];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    // MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatChipsModule,\n    MatTabsModule,\n    MatCardModule,\n    MatExpansionModule,\n    CdkTableModule\n];\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS,\n        ...PIPES,\n        ...ENTRY_COMPONENT,\n        TriggerConditionComparisonFormComponent,\n        TriggerConditionTimeFormComponent,\n    ],\n    imports: [\n        CommonModule,\n        ASpinnerModule,\n        FormsModule,\n        APipesModule,\n        ReactiveFormsModule,\n        ACustomEventsModule,\n        ADatePickerModule,\n        ScrollingModule,\n        ComposerModule,\n        ...MATERIAL_MODULES,\n        RouterModule.forChild([])\n    ],\n    exports: [\n        ASpinnerModule,\n        APipesModule,\n        ACustomEventsModule,\n        ADatePickerModule,\n        ComposerModule,\n        ...COMPONENTS,\n        ...PIPES,\n        ...ENTRY_COMPONENT,\n        ...MATERIAL_MODULES\n    ]\n})\nexport class SharedContentModule {}\n","import { EngineModule } from '@placeos/ts-client';\n\nimport { HashMap } from './types.utilities';\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${str ? '&' : ''}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n\n/**\n * Calculate the index of the module\n * @param module_list List of modules in the parent system\n * @param module Module to work out index\n */\nexport function calculateModuleIndex(module_list: EngineModule[], module: EngineModule): number {\n    const driver = module.driver || { class_name: 'System' };\n    const module_class = module.custom_name || driver.class_name;\n    const modules_with_class = module_list.filter(mod => {\n        const d = mod.driver || { class_name: 'System' };\n        const mod_class = mod.custom_name || d.class_name;\n        return mod_class === module_class;\n    });\n    return Math.max(1, modules_with_class.findIndex(mod => mod.id === module.id) + 1);\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { EngineApplication } from '@placeos/ts-client';\n\nimport { FormDetails } from './systems.utilities';\nimport { HashMap } from '../types.utilities';\n\nexport function generateApplicationFormFields(app: EngineApplication): FormDetails {\n    if (!app) {\n        throw Error('No domain application passed to generate form fields');\n    }\n    const fields: HashMap<FormControl> = {\n        name: new FormControl(app.name || '', [Validators.required]),\n        scopes: new FormControl(app.scopes || ''),\n        skip_authorization: new FormControl(app.skip_authorization || ''),\n        redirect_uri: new FormControl(app.redirect_uri || '')\n    };\n    const subscriptions = [];\n    for (const key in fields) {\n        if (fields[key] && key.indexOf('confirm') < 0) {\n            subscriptions.push(\n                fields[key].valueChanges.subscribe(value =>\n                    app.storePendingChange(key as any, value)\n                )\n            );\n        }\n    }\n    return {\n        form: new FormGroup(fields),\n        subscriptions\n    };\n}\n","import { EngineOAuthSource, EngineLDAPSource, EngineSAMLSource } from '@placeos/ts-client';\n\nimport { FormDetails } from './systems.utilities';\nimport { HashMap } from '../types.utilities';\nimport { Validators, FormControl, FormGroup } from '@angular/forms';\n\n/**\n * Generate form controls for an OAuth authentication source\n * @param auth_source Auth source to apply changes to\n */\nexport function generateOAuthSourceForm(auth_source: EngineOAuthSource): FormDetails {\n    if (!auth_source) {\n        throw Error('No OAuth source passed to generate form fields');\n    }\n    const fields: HashMap<FormControl> = {\n        name: new FormControl(auth_source.name || '', [Validators.required]),\n        client_id: new FormControl(auth_source.client_id || ''),\n        client_secret: new FormControl(auth_source.client_secret || ''),\n        info_mappings: new FormControl(auth_source.info_mappings || {}),\n        site: new FormControl(auth_source.site || ''),\n        authorize_url: new FormControl(auth_source.authorize_url || ''),\n        token_method: new FormControl(auth_source.token_method || 'post'),\n        auth_scheme: new FormControl(auth_source.auth_scheme || 'request_body'),\n        token_url: new FormControl(auth_source.token_url || ''),\n        scope: new FormControl(auth_source.scope || ''),\n        raw_info_url: new FormControl(auth_source.raw_info_url || '')\n    };\n    const subscriptions = [];\n    for (const key in fields) {\n        if (fields[key] && key.indexOf('confirm') < 0) {\n            subscriptions.push(\n                fields[key].valueChanges.subscribe(value =>\n                    auth_source.storePendingChange(key as any, value)\n                )\n            );\n        }\n    }\n    return {\n        form: new FormGroup(fields),\n        subscriptions\n    };\n}\n\n/**\n * Generate form controls for an SAML authentication source\n * @param auth_source Auth source to apply changes to\n */\nexport function generateSAMLSourceForm(auth_source: EngineSAMLSource): FormDetails {\n    if (!auth_source) {\n        throw Error('No OAuth source passed to generate form fields');\n    }\n    const fields: HashMap<FormControl> = {\n        name: new FormControl(auth_source.name || '', [Validators.required]),\n        issuer: new FormControl(auth_source.issuer || '', [Validators.required]),\n        idp_sso_target_url: new FormControl(auth_source.issuer || '', [Validators.required]),\n        name_identifier_format: new FormControl(auth_source.name_identifier_format || '', [\n            Validators.required\n        ]),\n        assertion_consumer_service_url: new FormControl(\n            auth_source.assertion_consumer_service_url || '',\n            [Validators.required]\n        ),\n        request_attributes: new FormControl(auth_source.request_attributes || [], [\n            Validators.required\n        ]),\n        idp_sso_target_url_runtime_params: new FormControl(\n            auth_source.idp_sso_target_url_runtime_params || {}\n        ),\n        uid_attribute: new FormControl(auth_source.uid_attribute || ''),\n        idp_cert: new FormControl(auth_source.idp_cert || ''),\n        idp_cert_fingerprint: new FormControl(auth_source.idp_cert_fingerprint || ''),\n        attribute_service_name: new FormControl(auth_source.attribute_service_name || ''),\n        attribute_statements: new FormControl(auth_source.attribute_statements || {}),\n        idp_slo_target_url: new FormControl(auth_source.idp_slo_target_url || ''),\n        slo_default_relay_state: new FormControl(auth_source.slo_default_relay_state || '')\n    };\n    const subscriptions = [];\n    for (const key in fields) {\n        if (fields[key] && key.indexOf('confirm') < 0) {\n            subscriptions.push(\n                fields[key].valueChanges.subscribe(value =>\n                    auth_source.storePendingChange(key as any, value)\n                )\n            );\n        }\n    }\n    return {\n        form: new FormGroup(fields),\n        subscriptions\n    };\n}\n\n/**\n * Generate form controls for an LDAP authentication source\n * @param auth_source Auth source to apply changes to\n */\nexport function generateLDAPSourceForm(auth_source: EngineLDAPSource): FormDetails {\n    if (!auth_source) {\n        throw Error('No OAuth source passed to generate form fields');\n    }\n    const fields: HashMap<FormControl> = {\n        name: new FormControl(auth_source.name || '', [Validators.required]),\n        host: new FormControl(auth_source.host || '', [Validators.required]),\n        port: new FormControl(auth_source.port || '', [Validators.min(1), Validators.max(65535)]),\n        auth_method: new FormControl(auth_source.auth_method || 'plain'),\n        uid: new FormControl(auth_source.uid || ''),\n        base: new FormControl(auth_source.base || '', [Validators.required]),\n        bind_dn: new FormControl(auth_source.bind_dn || ''),\n        password: new FormControl(auth_source.password || ''),\n        filter: new FormControl(auth_source.filter || '')\n    };\n    const subscriptions = [];\n    for (const key in fields) {\n        if (fields[key] && key.indexOf('confirm') < 0) {\n            subscriptions.push(\n                fields[key].valueChanges.subscribe(value =>\n                    auth_source.storePendingChange(key as any, value)\n                )\n            );\n        }\n    }\n    return {\n        form: new FormGroup(fields),\n        subscriptions\n    };\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { PlaceMQTTBroker, AuthType } from '@placeos/ts-client';\n\nimport { FormDetails } from './systems.utilities';\nimport { HashMap } from '../types.utilities';\n\nexport function generateBrokerFormFields(broker: PlaceMQTTBroker): FormDetails {\n    if (!broker) {\n        throw Error('No MQTT Broker passed to generate form fields');\n    }\n    const fields: HashMap<FormControl> = {\n        name: new FormControl(broker.name || '', [Validators.required]),\n        description: new FormControl(broker.description),\n        auth_type: new FormControl(broker.auth_type),\n        host: new FormControl(broker.host, [Validators.required]),\n        port: new FormControl(broker.port, [Validators.required]),\n        tls: new FormControl(broker.tls),\n        username: new FormControl(\n            broker.username,\n            broker.auth_type === AuthType.UserPassword ? [Validators.required] : []\n        ),\n        password: new FormControl(\n            broker.password,\n            broker.auth_type === AuthType.UserPassword ? [Validators.required] : []\n        ),\n        certificate: new FormControl(\n            broker.certificate,\n            broker.auth_type === AuthType.Certificate ? [Validators.required] : []\n        ),\n        secret: new FormControl(broker.secret),\n        filters: new FormControl(broker.filters),\n    };\n    const subscriptions = [];\n    for (const key in fields) {\n        if (fields[key] && key.indexOf('confirm') < 0) {\n            subscriptions.push(\n                fields[key].valueChanges.subscribe((value) =>\n                    broker.storePendingChange(key as any, value)\n                )\n            );\n        }\n    }\n    subscriptions.push(\n        fields.auth_type.valueChanges.subscribe((type) => {\n            switch (type) {\n                case AuthType.Certificate:\n                    fields.username.setValidators([]);\n                    fields.password.setValidators([]);\n                    fields.certificate.setValidators([Validators.required]);\n                case AuthType.UserPassword:\n                    fields.username.setValidators([Validators.required]);\n                    fields.password.setValidators([Validators.required]);\n                    fields.certificate.setValidators([]);\n                default:\n                    fields.username.setValidators([]);\n                    fields.password.setValidators([]);\n                    fields.certificate.setValidators([]);\n            }\n        })\n    );\n    return {\n        form: new FormGroup(fields),\n        subscriptions,\n    };\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { EngineDomain } from '@placeos/ts-client';\n\nimport { FormDetails } from './systems.utilities';\nimport { HashMap } from '../types.utilities';\n\nexport function generateDomainFormFields(domain: EngineDomain): FormDetails {\n    if (!domain) {\n        throw Error('No User passed to generate form fields');\n    }\n    const fields: HashMap<FormControl> = {\n        name: new FormControl(domain.name || '', [Validators.required]),\n        domain: new FormControl(domain.domain || '', [Validators.required]),\n        login_url: new FormControl(domain.login_url || ''),\n        logout_url: new FormControl(domain.logout_url || ''),\n        config: new FormControl(domain.config || ''),\n        internals: new FormControl(domain.internals || ''),\n        description: new FormControl(domain.description || ''),\n    };\n    const subscriptions = [];\n    for (const key in fields) {\n        if (fields[key] && key.indexOf('confirm') < 0) {\n            subscriptions.push(\n                fields[key].valueChanges.subscribe(value => domain.storePendingChange(key as any, value))\n            );\n        }\n    }\n    return {\n        form: new FormGroup(fields),\n        subscriptions\n    };\n}\n","\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { EngineDriver, EngineRepository, EngineDriverRole } from '@placeos/ts-client';\n\nimport { FormDetails } from './systems.utilities';\nimport { HashMap } from '../types.utilities';\nimport { validateURI } from '../validation.utilities';\n\nexport interface DriverInitData {\n    repo: EngineRepository;\n    driver: EngineDriver;\n}\n\nexport function generateDriverFormFields(driver: EngineDriver): FormDetails {\n    if (!driver) {\n        throw Error('No Driver passed to generate form fields');\n    }\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(driver.id || ''),\n        repository_id: new FormControl(driver.repository_id),\n        file_name: new FormControl(driver.file_name),\n        commit: new FormControl(driver.commit),\n        name: new FormControl(driver.name || '', [Validators.required]),\n        role: new FormControl(driver.role || EngineDriverRole.Logic),\n        module_name: new FormControl(driver.module_name || '', [Validators.required]),\n        default_uri: new FormControl(driver.default_uri || '', [validateURI]),\n        default_port: new FormControl(driver.default_port || 1, [Validators.min(1), Validators.max(65535)]),\n        class_name: new FormControl(driver.class_name || ''),\n        description: new FormControl(driver.description || ''),\n        ignore_connected: new FormControl(driver.ignore_connected || false),\n        settings: new FormControl('')\n    };\n    const subscriptions = [];\n    for (const key in fields) {\n        if (fields[key] && key.indexOf('settings') < 0) {\n            subscriptions.push(\n                fields[key].valueChanges.subscribe(value =>\n                    driver.storePendingChange(key as any, value)\n                )\n            );\n        }\n    }\n    if (driver.id) {\n        delete fields.class_name;\n        delete fields.role;\n    }\n    return {\n        form: new FormGroup(fields),\n        subscriptions\n    };\n}\n","\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { EngineModule, EngineSystem, EngineDriver, EngineDriverRole } from '@placeos/ts-client';\n\nimport { FormDetails, validateYAML } from './systems.utilities';\nimport { HashMap } from '../types.utilities';\nimport { validateURI, validateIpAddress } from '../validation.utilities';\n\nexport function generateModuleFormFields(module: EngineModule): FormDetails {\n    if (!module) {\n        throw Error('No Module passed to generate form fields');\n    }\n    const fields: HashMap<FormControl> = {\n        ip: new FormControl(module.ip || '', [validateIpAddress]),\n        port: new FormControl(module.port || null, [Validators.min(1), Validators.max(65535)]),\n        tls: new FormControl(module.tls || false),\n        udp: new FormControl(module.udp || false),\n        makebreak: new FormControl(module.makebreak || false),\n        ignore_connected: new FormControl(module.ignore_connected || false),\n        uri: new FormControl(module.uri || '', [validateURI]),\n        notes: new FormControl(module.notes || ''),\n        name: new FormControl(module.name || ''),\n        custom_name: new FormControl(module.custom_name || ''),\n        system: new FormControl(module.system),\n        driver: new FormControl('', [Validators.required])\n    };\n    const subscriptions = [];\n    for (const key in fields) {\n        if (fields[key] && key.indexOf('settings') < 0 && key.indexOf('driver') < 0) {\n            subscriptions.push(\n                fields[key].valueChanges.subscribe(value =>{\n                    console.log('Change:', key, value, fields[key]);\n                    module.storePendingChange(key as any, value);\n                })\n            );\n        }\n    }\n    if (!module.id) {\n        subscriptions.push(\n            fields.system.valueChanges.subscribe((value: EngineSystem) =>\n                module.storePendingChange('control_system_id', value.id)\n            )\n        );\n        subscriptions.push(\n            fields.driver.valueChanges.subscribe((value: EngineDriver) => {\n                module.storePendingChange('driver_id', value.id);\n                fields.name.setValue(value.name || value.module_name);\n                fields.uri.setValue(value.default_uri);\n                fields.port.setValue(value.default_port || 1);\n                resetModuleFormValidators(fields);\n                switch (value.role) {\n                    case EngineDriverRole.Service:\n                    case EngineDriverRole.Websocket:\n                        fields.uri.setValidators([Validators.required, validateURI]);\n                        fields.udp.setValue(false);\n                        break;\n                    case EngineDriverRole.Device:\n                    case EngineDriverRole.SSH:\n                        fields.ip.setValidators([validateIpAddress, Validators.required]);\n                        fields.port.setValidators([Validators.min(1), Validators.max(65535), Validators.required]);\n                        break;\n                    case EngineDriverRole.Logic:\n                        fields.system.setValidators([Validators.required]);\n                        break;\n                }\n            })\n        );\n    } else {\n        delete fields.system;\n        delete fields.driver;\n    }\n    return {\n        form: new FormGroup(fields),\n        subscriptions\n    };\n}\n\nexport function resetModuleFormValidators(fields: HashMap<FormControl>) {\n    fields.ip.setValidators([validateIpAddress]);\n    fields.port.setValidators([Validators.min(1), Validators.max(65535)]);\n    fields.uri.setValidators([validateURI]);\n    // fields.settings_string.setValidators([validateYAML]);\n    fields.system.setValidators([]);\n    fields.driver.setValidators([Validators.required]);\n}\n","import { Validators, FormControl, FormGroup } from '@angular/forms';\nimport { HashMap, EngineRepository, EngineRepositoryType } from '@placeos/ts-client';\n\nimport { FormDetails } from './systems.utilities';\n\n/**\n * Generate angular form controls\n * @param repository Trigger to generate the form controls for\n */\nexport function generateRepositoryFormFields(repository: EngineRepository): FormDetails {\n    if (!repository) {\n        throw Error('No Zone passed to generate form fields');\n    }\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(repository.id || ''),\n        commit_hash: new FormControl(repository.commit_hash || ''),\n        branch: new FormControl(repository.branch || 'master', [Validators.required]),\n        name: new FormControl(repository.name || '', [Validators.required]),\n        folder_name: new FormControl(repository.folder_name || '', [Validators.required]),\n        description: new FormControl(repository.description || ''),\n        uri: new FormControl(repository.uri || '', [Validators.required]),\n        repo_type: new FormControl(repository.repo_type || EngineRepositoryType.Driver),\n    };\n    const subscriptions = [];\n    for (const key in fields) {\n        if (fields[key] && key.indexOf('settings') < 0) {\n            subscriptions.push(\n                fields[key].valueChanges.subscribe((value) =>\n                    repository.storePendingChange(key as any, value)\n                )\n            );\n        }\n    }\n    fields.branch.disable();\n    if (!repository.id) {\n        repository.storePendingChange('commit_hash', 'HEAD');\n    } else {\n        delete fields.folder_name;\n        delete fields.uri;\n    }\n    return {\n        form: new FormGroup(fields),\n        subscriptions,\n    };\n}\n","import { EngineSystem, EngineZone, EncryptionLevel } from '@placeos/ts-client';\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { HashMap } from '../types.utilities';\n\nimport * as yaml from 'js-yaml';\n\nexport interface FormDetails {\n    form: FormGroup;\n    subscriptions: Subscription[];\n}\n\nexport function validateYAML(control: AbstractControl) {\n    const value = control.value || '';\n    let message = '';\n    try {\n        yaml.safeLoad(value, { strict: true });\n    } catch (e) {\n        console.error(e);\n        message = e.message;\n    }\n    return message ? { yaml: message } : null;\n}\n\nexport const URL_PATTERN =\n    '^(?:(?:(?:https?|ftp|wss?):)?//)(?:S+(?::S*)?@)?(?:(?!(?:10|127)(?:.d{1,3}){3})(?!(?:169.254|192.168)(?:.d{1,3}){2})(?!172.(?:1[6-9]|2d|3[0-1])(?:.d{1,3}){2})(?:[1-9]d?|1dd|2[01]d|22[0-3])(?:.(?:1?d{1,2}|2[0-4]d|25[0-5])){2}(?:.(?:[1-9]d?|1dd|2[0-4]d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:.(?:[a-z\\u00a1-\\uffff]{2,})))(?::d{2,5})?(?:[/?#]S*)?$';\n\nexport function generateSystemsFormFields(system: EngineSystem): FormDetails {\n    if (!system) {\n        throw Error('No System passed to generate form fields');\n    }\n    const fields: HashMap<FormControl> = {\n        name: new FormControl(system.name || '', [Validators.required]),\n        email: new FormControl(system.email || '', [Validators.email]),\n        support_url: new FormControl(system.support_url || '', [Validators.pattern(URL_PATTERN)]),\n        installed_ui_devices: new FormControl(system.installed_ui_devices || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [Validators.pattern('[0-9]*')]),\n        bookable: new FormControl(system.bookable || false),\n        description: new FormControl(system.description || ''),\n        map_id: new FormControl(system.map_id || ''),\n        zone: new FormControl('', [Validators.required]),\n    };\n    const subscriptions = [];\n    for (const key in fields) {\n        if (fields[key] && key.indexOf('settings') < 0) {\n            subscriptions.push(\n                fields[key].valueChanges.subscribe((value) =>\n                    system.storePendingChange(key as any, value)\n                )\n            );\n        }\n    }\n    if (!system.id) {\n        subscriptions.push(\n            fields.zone.valueChanges.subscribe((value: EngineZone) =>\n                system.storePendingChange('zones', [value.id])\n            )\n        );\n    } else {\n        delete fields.zone;\n    }\n    return {\n        form: new FormGroup(fields),\n        subscriptions,\n    };\n}\n","import { Validators, FormControl, FormGroup, AbstractControl } from '@angular/forms';\nimport {\n    EngineTrigger,\n    HashMap,\n    TriggerStatusVariable,\n    TriggerConditionOperator,\n    TriggerComparison,\n    TriggerTimeCondition,\n    TriggerAtTimeCondition,\n    TriggerCronTimeCondition,\n    TriggerFunction,\n    TriggerMailer\n} from '@placeos/ts-client';\n\nimport { FormDetails } from './systems.utilities';\n\nimport * as dayjs from 'dayjs';\n\n/**\n * Generate angular form controls\n * @param trigger Trigger to generate the form controls for\n */\nexport function generateTriggerFormFields(trigger: EngineTrigger): FormDetails {\n    if (!trigger) {\n        throw Error('No Zone passed to generate form fields');\n    }\n    const fields: HashMap<FormControl> = {\n        name: new FormControl(trigger.name || '', [Validators.required]),\n        description: new FormControl(trigger.description || ''),\n        enable_webhook: new FormControl(trigger.enable_webhook || '')\n    };\n    const subscriptions = [];\n    for (const key in fields) {\n        if (fields[key] && key.indexOf('settings') < 0) {\n            subscriptions.push(\n                fields[key].valueChanges.subscribe(value =>\n                    trigger.storePendingChange(key as any, value)\n                )\n            );\n        }\n    }\n    return {\n        form: new FormGroup(fields),\n        subscriptions\n    };\n}\n/**\n * Generate angular form controls\n * @param trigger Trigger to generate the form controls for\n */\nexport function generateTriggerSettingsFormFields(trigger: EngineTrigger): FormDetails {\n    if (!trigger) {\n        throw Error('No Zone passed to generate form fields');\n    }\n    const fields: HashMap<FormControl> = {\n        name: new FormControl(trigger.name || ''),\n        triggered: new FormControl(+trigger.activated_count > 0),\n        enabled: new FormControl(!!trigger.enabled),\n        important: new FormControl(!!trigger.important)\n    };\n    const subscriptions = [];\n    for (const key in fields) {\n        if (fields[key] && key.indexOf('settings') < 0) {\n            subscriptions.push(\n                fields[key].valueChanges.subscribe(value =>\n                    trigger.storePendingChange(key as any, value)\n                )\n            );\n        }\n    }\n    return {\n        form: new FormGroup(fields),\n        subscriptions\n    };\n}\n\n/**\n * Validate a side of the comparison pair\n * @param control Control holding the comparison\n */\nexport function validateCompare(control: AbstractControl) {\n    const form = control.parent;\n    if (\n        form &&\n        form instanceof FormGroup &&\n        form.controls.condition_type &&\n        form.controls.condition_type.value === 'compare'\n    ) {\n        if (control.value instanceof Object) {\n            const value: TriggerStatusVariable = control.value;\n            return !value.mod ? { module: true } : !value.status ? { status: true } : null;\n        } else {\n            return !control.value ? { required: true } : null;\n        }\n    }\n    return null;\n}\n\n/**\n * Generate form controls for creating a trigger condition\n */\nexport function generateTriggerConditionForm(\n    condition: TriggerComparison | TriggerTimeCondition = {} as any\n) {\n    const type = (condition as TriggerTimeCondition).type ? 'time' : 'compare';\n    const left =\n        typeof (condition as TriggerComparison).left === 'object'\n            ? { ...((condition as TriggerComparison).left as any) }\n            : (condition as TriggerComparison).left;\n    const right =\n        typeof (condition as TriggerComparison).right === 'object'\n            ? { ...((condition as TriggerComparison).right as any) }\n            : (condition as TriggerComparison).right;\n    const fields: HashMap<FormControl> = {\n        condition_type: new FormControl(type),\n        left: new FormControl({ ...(left || {}) }, [validateCompare]),\n        operator: new FormControl(\n            (condition as TriggerComparison).operator || TriggerConditionOperator.EQ\n        ),\n        right: new FormControl(right || undefined, [validateCompare]),\n        time_type: new FormControl((condition as TriggerTimeCondition).type || 'at'),\n        time: new FormControl(\n            (+(condition as TriggerAtTimeCondition).time || 0) * 1000 || dayjs().valueOf()\n        ),\n        cron: new FormControl((condition as TriggerCronTimeCondition).cron || undefined)\n    };\n    const subscriptions = [];\n    return {\n        form: new FormGroup(fields),\n        subscriptions\n    };\n}\n\n/**\n * Validate form control storing a list of emails\n * @param control Form control to valid\n */\nexport function validateEmailList(control: AbstractControl) {\n    if (control.value && control.value instanceof Array) {\n        const value: string[] = control.value;\n        return value.reduce(\n            (valid, email) => valid && !Validators.email({ value: email } as any),\n            true\n        )\n            ? null\n            : { email: true };\n    }\n    return null;\n}\n\n/**\n * Generate form controls for creating a trigger action\n */\nexport function generateTriggerActionForm(action: TriggerFunction | TriggerMailer = {} as any) {\n    const type = action && (action as TriggerMailer).emails ? 'email' : 'function';\n    const fields: HashMap<FormControl> = {\n        action_type: new FormControl(type),\n        emails: new FormControl((action as TriggerMailer).emails || [], [\n            Validators.min(1),\n            Validators.required,\n            validateEmailList\n        ]),\n        content: new FormControl((action as TriggerMailer).emails || '', [Validators.required]),\n        method_call: new FormControl((action as TriggerFunction) || null, [])\n    };\n    const subscriptions = [];\n    return {\n        form: new FormGroup(fields),\n        subscriptions\n    };\n}\n","import { FormControl, FormGroup, Validators, AbstractControl } from '@angular/forms';\nimport { EngineUser } from '@placeos/ts-client';\n\nimport { FormDetails } from './systems.utilities';\nimport { HashMap } from '../types.utilities';\n\nexport function validateMatch(name: string) {\n    return (control: AbstractControl) => {\n        const group = control.parent;\n        if (group) {\n            const value = group.controls[name] ? group.controls[name].value : '';\n            return value !== control.value ? { match: true } : null;\n        }\n        return null;\n    }\n}\n\nexport function generateUserFormFields(user: EngineUser): FormDetails {\n    if (!user) {\n        throw Error('No User passed to generate form fields');\n    }\n    const fields: HashMap<FormControl> = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [Validators.email, Validators.required]),\n        staff_id: new FormControl(user.staff_id || ''),\n        support: new FormControl(user.support || false),\n        sys_admin: new FormControl(user.sys_admin || false),\n        password: new FormControl('', !user.id ? [Validators.required] : undefined),\n        confirm_password: new FormControl('', [validateMatch('password')]),\n    };\n    const subscriptions = [];\n    for (const key in fields) {\n        if (fields[key] && key.indexOf('confirm') < 0) {\n            subscriptions.push(\n                fields[key].valueChanges.subscribe(value =>\n                    user.storePendingChange(key as any, value)\n                )\n            );\n        }\n    }\n    subscriptions.push(fields.password.valueChanges.subscribe(() => {\n        fields.confirm_password.updateValueAndValidity();\n    }));\n    return {\n        form: new FormGroup(fields),\n        subscriptions\n    };\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { EngineZone } from '@placeos/ts-client';\n\nimport { FormDetails } from './systems.utilities';\nimport { HashMap } from '../types.utilities';\n\nexport function generateZoneFormFields(zone: EngineZone): FormDetails {\n    if (!zone) {\n        throw Error('No Zone passed to generate form fields');\n    }\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(zone.id),\n        name: new FormControl(zone.name || '', [Validators.required]),\n        tags: new FormControl(zone.tags || []),\n        description: new FormControl(zone.description || ''),\n        parent_zone: new FormControl(null),\n        parent_id: new FormControl(zone.parent_id),\n        location: new FormControl(zone.location),\n        display_name: new FormControl(zone.display_name),\n        code: new FormControl(zone.display_name),\n        type: new FormControl(zone.display_name),\n        count: new FormControl(zone.count),\n        capacity: new FormControl(zone.capacity),\n        map_id: new FormControl(zone.map_id)\n    };\n    const subscriptions = [];\n    for (const key in fields) {\n        if (fields[key] && zone.hasOwnProperty(key) && key.indexOf('settings') < 0) {\n            subscriptions.push(\n                fields[key].valueChanges.subscribe(value =>\n                    {\n                        zone.storePendingChange(key as any, value)}\n                )\n            );\n        }\n    }\n    subscriptions.push(\n        fields.parent_zone.valueChanges.subscribe((zone: EngineZone) =>\n            {\n                console.log('Zone:', zone);\n                fields.parent_id.setValue(zone.id);\n            }\n        )\n    );\n    return {\n        form: new FormGroup(fields),\n        subscriptions\n    };\n}\n","import { HashMap, Point } from './types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport * as merge from 'deepmerge';\nimport * as yaml from 'js-yaml';\n\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys.shift();\n    if (map[key]) {\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\n    }\n    return null;\n}\n\n/**\n * Checks whether the platform is a mobile device.\n */\nexport function isMobileModule(): boolean {\n    const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n    return !!navigator.userAgent.match(r);\n}\n\n/**\n * Checks whether the browser is Mobile Safari.\n */\nexport function isMobileSafari(): boolean {\n    const agent = navigator.userAgent;\n    return !!(\n        agent.match(/iPhone|iPad|iPod/) &&\n        agent.match(/AppleWebKit/) &&\n        !agent.match('CriOS')\n    );\n}\n\n/**\n * Checks whether the browser is Android Chrome.\n */\nexport function isAndroidChrome(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/Android/) && agent.match(/Chrome/));\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Generate string representation of a number with zeros padding the length\n * @param value Number to pad with zeros\n * @param length Length of the resulting string\n */\nexport function padZero(value: number, length: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique(array: any[], key: string = '') {\n    return array.filter(\n        (element, index) =>\n            (key\n                ? array.findIndex((i) => i[key] === element[key])\n                : array.findIndex((item) => item === element)) === index\n    );\n}\n\n/**\n * Convert duration to human readable string\n * @param duration Duration in minutes\n * @param short Whether to use short form of duration words e.g. hours as h\n */\nexport function humaniseDuration(duration: number, short: boolean = false) {\n    if (!duration || duration < 0) {\n        return '';\n    }\n    const h = Math.floor(duration / 60);\n    let d = `${h >= 1 ? h + (short ? 'h' : ' hour' + (h === 1 ? '' : 's')) : ''}`;\n    if (duration % 60 !== 0) {\n        if (d) {\n            d += short ? ' ' : ', ';\n        }\n        const m = duration % 60;\n        d += `${m >= 1 ? m + (short ? 'm' : ' minute' + (m === 1 ? '' : 's')) : ''}`;\n    }\n    return d;\n}\n\n/**\n * Get a filtered list of items\n * @param filter Value to filter on\n * @param items List of results to filter\n * @param fields Fields to check for matches on each item\n */\nexport function filterList<T = HashMap>(\n    filter: string,\n    items?: T[],\n    fields: string[] = ['id']\n): T[] {\n    let results: any[];\n    // Tokenise filter string\n    const filters = (filter || '').toLowerCase().split(' ');\n    const list = {};\n    for (const f of filters) {\n        if (f) {\n            if (!list[f]) {\n                list[f] = 0;\n            }\n            list[f]++;\n        }\n    }\n    // Group similar tokens\n    const parts = [];\n    for (const f in list) {\n        if (list.hasOwnProperty(f)) {\n            parts.push({ word: f, count: list[f], regex: new RegExp(f, 'gi') });\n        }\n    }\n    parts.sort((a, b) => b.word.length - a.word.length || a.word.localeCompare(b.word));\n    const item_list = JSON.parse(JSON.stringify(items || []));\n    if (filter) {\n        results = item_list.filter((item) => {\n            let match_count = 0;\n            item.match_index = 65535;\n            item.match = '';\n            const field_list = {};\n            // Initialise field match variables\n            for (const f of fields) {\n                field_list[f] = {\n                    value: (item[f] || '').toLowerCase(),\n                    index: 65536,\n                    matched: 0,\n                };\n            }\n            // Search for matches with the tokenised filter string\n            for (const i of parts) {\n                if (i.word) {\n                    // Check fields for matches\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        const index = field.value.indexOf(i.word);\n                        field.index = index < field.index ? index : field.index;\n                        field.matches = (field.value.match(i.regex) || []).length;\n                        field.value = field.value.replace(i.regex, ' ');\n                    }\n                    // Update token match count\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        if (field.matches >= i.count) {\n                            match_count++;\n                            // Update field matches\n                            let changed = 0;\n                            const tokens = (item[`match_${f}`] || item[f] || '').split(' ');\n                            for (const k of tokens) {\n                                if (changed >= i.count) {\n                                    break;\n                                }\n                                if (k.toLowerCase().indexOf(i.word) >= 0 && k.indexOf('`') < 0) {\n                                    tokens[tokens.indexOf(k)] = k.replace(i.regex, '`$&`');\n                                    changed++;\n                                }\n                            }\n                            item[`match_${f}`] = tokens.join(' ');\n                            break;\n                        }\n                    }\n                }\n            }\n            // Get field with the most relevent match\n            for (const f of fields) {\n                const field = field_list[f];\n                if (field.index < item.match_index && field.index >= 0) {\n                    item.match_index = field.index;\n                    item.match = f;\n                }\n            }\n            return item.match_index >= 0 && item.match && match_count >= parts.length;\n        });\n    } else {\n        results = item_list;\n    }\n    // Sort by order of relevence then name\n    results.sort((a, b) => {\n        const diff = a.match_index - b.match_index;\n        return diff === 0 ? a.name.localeCompare(b.name) : diff;\n    });\n    return results;\n}\n\n/**\n * Convert a match string from `filterList` to renderable HTML\n * @param str Match string to change\n */\nexport function matchToHighlight(str: string): string {\n    if (str) {\n        str = str.replace(/\\`[a-zA-Z0-9\\@\\.\\_]*\\`/g, '<span class=\"highlight\">$&</span>');\n        str = str.replace(/\\`/g, '');\n    }\n    return str;\n}\n\n/**\n * Convert time string to ms from UTC epoch for today\n * @param time Time string in the format `HH:mm`\n */\nexport function timeToDate(time: string): number {\n    const parts = (time || '').split(':');\n    const date = dayjs()\n        .hour(+parts[0])\n        .minute(+parts[1])\n        .startOf('m');\n    return date.valueOf();\n}\n\n/**\n * Merge two YAML objects together\n * @param dest Destination object to merge\n * @param source Source object to merge\n */\nexport function mergeYAMLSettings(dest: string = '', source: string = ''): string {\n    const dest_obj = yaml.safeLoad(dest) || {};\n    const source_obj = yaml.safeLoad(source) || {};\n    const merged_obj = merge(dest_obj, source_obj);\n    return yaml.safeDump(merged_obj, { indent: 4 });\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm A';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date.toLocaleTimeString();\n    return localeString.indexOf('AM') < 0 && localeString.indexOf('PM') < 0;\n}\n\n/**\n * Calculate the position counter for the given number e.g `1st`, `2nd`, `3rd`, `4th`...\n * @param num Number to caculate position for\n */\nexport function numberToPosition(num: number): string {\n    const mod_ten = num % 10;\n    if (num > 10 && num < 20) {\n        return `${num}th`;\n    } else if (mod_ten === 1) {\n        return `${num}st`;\n    } else if (mod_ten === 2) {\n        return `${num}nd`;\n    } else if (mod_ten === 3) {\n        return `${num}rd`;\n    }\n    return `${num}th`;\n}\n\n/**\n * Copy the given value to the OS Clipboard\n * @param value String to copy to the clipboard\n */\nexport function copyToClipboard(value: string) {\n    const el = document.createElement('textarea'); // Create a <textarea> element\n    el.value = value; // Set its value to the string that you want copied\n    el.setAttribute('readonly', ''); // Make it readonly to be tamper-proof\n    el.style.position = 'absolute';\n    el.style.left = '-9999px'; // Move outside the screen to make it invisible\n    document.body.appendChild(el); // Append the <textarea> element to the HTML document\n    // Check if there is any content selected previously\n    const selected =\n        document.getSelection().rangeCount > 0\n            ? document.getSelection().getRangeAt(0) // Store selection if found\n            : false; // Mark as false to know no selection existed before\n    // Select the <textarea> content\n    el.select();\n    // Copy - only works as a result of a user action (e.g. click events)\n    document.execCommand('copy');\n    document.body.removeChild(el); // Remove the <textarea> element\n    if (selected) {\n        // If a selection existed before copying\n        // Unselect everything on the HTML document\n        document.getSelection().removeAllRanges();\n        // Restore the original selection\n        document.getSelection().addRange(selected);\n    }\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, seperator: string = ',') {\n    const lines = csv.split('\\n');\n    let fields = lines.splice(0, 1)[0].split(seperator);\n    fields = fields.map((v) => v.replace('\\r', ''));\n    const list: any[] = [];\n    for (const line of lines) {\n        let parts = line.split(seperator);\n        parts = parts.map((v) => v.replace('\\r', ''));\n        /* istanbul ignore else */\n        if (parts.length >= fields.length) {\n            const item: any = {};\n            for (let i = 0; i <= parts.length; i++) {\n                let part = null;\n                part = parts[i];\n                /* istanbul ignore else */\n                if (part !== undefined) {\n                    console.log('Part:', fields[i], part);\n                    let value = '';\n                    try { value = JSON.parse(part) }\n                    catch (e) { value = part; }\n                    item[(fields[i] || '').split(' ').join('_').toLowerCase()] = value;\n                }\n            }\n            list.push(item);\n        }\n    }\n\n    return list;\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n * @param use_keys Fields in the objects to use in the CSV output\n * @param seperator Seperator between field values in the CSV data\n */\nexport function jsonToCsv(json: HashMap[], use_keys?: string[], seperator = ',') {\n    /* istanbul ignore else */\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter(\n            (key) => (!use_keys || use_keys.includes(key)) && json[0].hasOwnProperty(key)\n        );\n        console.log('Valid Keys:', valid_keys);\n        return `\\uFEFF${valid_keys.join(seperator)}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) =>\n                        item[key] instanceof Object ? JSON.stringify(item[key]) : item[key]\n                    )\n                    .join(seperator)\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(contents));\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\n/**\n * Grab point details from mouse or touch event\n * @param event Event to grab details from\n */\nexport function eventToPoint(event: MouseEvent | TouchEvent): Point {\n    if (!event) {\n        return { x: -1, y: -1 };\n    }\n    if (event instanceof MouseEvent) {\n        return { x: event.clientX, y: event.clientY };\n    } else {\n        return event.touches && event.touches.length > 0\n            ? { x: event.touches[0].clientX, y: event.touches[0].clientY }\n            : { x: -1, y: -1 };\n    }\n}\n","import { Validators, AbstractControl } from '@angular/forms';\n\nexport const validateIpAddress = (ctrl) =>\n    /^(25[0-5]|2[0-4][0-9]|1?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|1?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|1?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|1?[0-9][0-9]?)$/g.test(\n        ctrl.value || '1.1.1.1'\n    )\n        ? null\n        : { pattern: true };\n\nexport const validateURI = (ctrl) => {\n    if (!ctrl.value) {\n        return null;\n    } else {\n        return /\\w+:(\\/?\\/?)[^\\s]+?/gm.test(ctrl.value) ? null : { pattern: true };\n    }\n}\n\nexport const validateURL = Validators.pattern(\n    /^(?:(http(s)?):\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/g\n);\n\nexport function validateJSONString(control: AbstractControl) {\n    if (!control || !control.value) {\n        return null;\n    }\n    try {\n        const json = JSON.parse(control.value);\n    } catch (e) {\n        return { json: true };\n    }\n    return null;\n}\n","import {\n    Component,\n    OnChanges,\n    Input,\n    ViewChild,\n    ElementRef,\n    SimpleChanges,\n    EventEmitter,\n    Output\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { trigger, transition, style, animate, query, stagger } from '@angular/animations';\nimport {\n    EngineResource,\n    EngineSystem,\n    EngineModule,\n    EngineZone,\n    HashMap\n} from '@placeos/ts-client';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map } from 'rxjs/operators';\nimport { Subject, Observable, of } from 'rxjs';\n\nimport { BaseDirective } from '../../../shared/globals/base.directive';\nimport { ApplicationService } from '../../../services/app.service';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { ItemCreateUpdateModalComponent } from 'src/app/overlays/item-modal/item-modal.component';\n\n@Component({\n    selector: 'global-search',\n    templateUrl: './global-search.template.html',\n    styleUrls: ['./global-search.styles.scss'],\n    animations: [\n        trigger('listAnimation', [\n            transition('* => *', [\n                // each time the binding value changes\n                query(':enter', [\n                    style({ transform: 'translateY(100%)', opacity: 0 }),\n                    stagger(50, [\n                        animate('.2s', style({ transform: 'translateY(0%)', opacity: 1 }))\n                    ])\n                ])\n            ])\n        ])\n    ]\n})\nexport class GlobalSearchComponent extends BaseDirective implements OnChanges {\n    /** Search query string */\n    @Input() public search: string;\n    /** Search query string */\n    @Output() public searchChange = new EventEmitter<string>();\n    /** Minimum number of characters needed to start a server query */\n    @Input('minLength') public min_length = 2;\n    /** Mapping of item types to routes */\n    public route_map: any = {\n        system: 'Systems',\n        device: 'Modules',\n        user: 'Users',\n        trigger: 'Triggers',\n        zone: 'Zones'\n    };\n    /** Whether search data is being loaded */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Observable for the list of items from an API search */\n    public search_results$: Observable<EngineResource<any>[]>;\n    /** List of item */\n    public results: EngineResource<any>[];\n    /** Current page offset to get the next list of items */\n    public offset = 0;\n\n    /** Subject holding the value of the search */\n    private search$ = new Subject<string>();\n\n    @ViewChild('item_list', { static: true }) private list_el: ElementRef;\n\n    /** Whether dark mode is enabled */\n    public get dark_mode(): boolean {\n        return this._service.Users.dark_mode;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query_string => {\n                this.loading = true;\n                this.offset = 20;\n                return !this.min_length || query_string.length >= this.min_length\n                    ? this.queryEndpoints(query_string)\n                    : Promise.resolve([]);\n            }),\n            catchError(() => of([])),\n            map((list: EngineResource<any>[][]) => {\n                this.loading = false;\n                return [].concat.apply([], list);\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => {\n                this.results = list;\n                this.results.forEach((item: HashMap) => (item.type = this.itemType(item as any)));\n            })\n        );\n        this.subscription(\n            'navigate_end',\n            this._router.events.subscribe(event => {\n                if (event instanceof NavigationEnd) {\n                    this.afterNavigate();\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(change: SimpleChanges): void {\n        if (change.search) {\n            this.timeout('search', () => this.search$.next(this.search), 100);\n        }\n    }\n\n    /**\n     * Load the next page of items for each endpoint\n     */\n    public loadMoreItems() {\n        this.loading = true;\n        this.queryEndpoints(this.search, this.offset).then(\n            (results_list: EngineResource<any>[][]) => {\n                for (const list of results_list) {\n                    this.results = unique(this.results.concat(list), 'id');\n                }\n                this.results.forEach((item: HashMap) => (item.type = this.itemType(item as any)));\n                this.offset += 20;\n                this.loading = false;\n                this.timeout('load_more', () => this.atBottom(), 2000);\n            }\n        );\n    }\n\n    /**\n     * Get the type of item\n     * @param item Item the get the type of\n     */\n    public itemType(item: EngineResource<any>): 'systems' | 'modules' | 'zones' {\n        if (item instanceof EngineSystem) return 'systems';\n        if (item instanceof EngineModule) return 'modules';\n        if (item instanceof EngineZone) return 'zones';\n        return 'zones';\n    }\n\n    /**\n     * Open the modal to edit item\n     * @param item Item to edit\n     */\n    public edit(item: EngineResource<any>) {\n        if (item) {\n            this._dialog.open(ItemCreateUpdateModalComponent, {\n                height: 'auto',\n                width: 'auto',\n                maxHeight: 'calc(100vh - 2em)',\n                maxWidth: 'calc(100vw - 2em)',\n                data: {\n                    item,\n                    service: (item as any)._service\n                }\n            });\n        }\n    }\n\n    /**\n     * Handle navigation events while open\n     */\n    public afterNavigate() {\n        this.search = '';\n        this.searchChange.emit(this.search);\n    }\n\n    /**\n     * Query the multiple API endpoints\n     * @param query_str Filter string\n     * @param offset Returned page offset\n     */\n    private queryEndpoints(query_str: string, offset: number = 0) {\n        return Promise.all([\n            this._service.Systems.query({ q: query_str || '', offset, cache: 60 * 1000 }),\n            this._service.Zones.query({ q: query_str || '', offset, cache: 60 * 1000 }),\n            this._service.Modules.query({ q: query_str || '', offset, cache: 60 * 1000 })\n        ]);\n    }\n\n    /**\n     * Check whether the user has scrolled to the bottom of the viewport\n     */\n    public atBottom() {\n        if (!this.list_el) {\n            return this.timeout('bottom', () => this.atBottom());\n        }\n        const el = this.list_el.nativeElement;\n        if (el && el.scrollHeight - el.scrollTop === el.clientHeight) {\n            this.loadMoreItems();\n        }\n    }\n}\n","<div class=\"container\" [class.dark-mode]=\"dark_mode\" #item_list [@listAnimation]=\"results ? results.length : 0\" (scroll)=\"atBottom()\">\n    <ng-container *ngIf=\"!loading\" >\n        <div class=\"item\" #list_item *ngFor=\"let item of (results || [])\" [title]=\"item.name\">\n            <a class=\"name\" [routerLink]=\"['/' + item.type, item.id]\">{{item.name}}</a>\n            <a class=\"details\" [routerLink]=\"['/' + item.type, item.id]\">\n                <div [class]=\"'chip ' + item.type\">{{item.type}}</div>\n                <div class=\"id\">{{item.id}}</div>\n            </a>\n            <div class=\"options\">\n                <button mat-icon-button (touchrelease)=\"edit(item)\">\n                    <app-icon [icon]=\"{ class: 'backoffice-edit' }\"></app-icon>\n                </button>\n                <a mat-icon-button [routerLink]=\"['/' + item.type, item.id]\">\n                    <app-icon [icon]=\"{ class: 'backoffice-eye' }\"></app-icon>\n                </a>\n            </div>\n        </div>\n    </ng-container>\n    <div class=\"info-block\" center *ngIf=\"loading\">\n        <div class=\"icon\">\n            <a-spinner circle-ring color=\"#F44336\"></a-spinner>\n        </div>\n        <div class=\"text\">Searching...</div>\n    </div>\n    <div class=\"info-block\" center *ngIf=\"!loading && (!results || results.length <= 0)\">\n        <div class=\"icon\">\n            <i class=\"backoffice-cross\"></i>\n        </div>\n        <div class=\"text\">No matches found</div>\n    </div>\n    <div class=\"more\" *ngIf=\"loading\">\n        <a-spinner double-circle-ring color=\"#F44336\"></a-spinner>\n    </div>\n</div>\n","\nimport { TopbarHeaderComponent } from './topbar-header/topbar-header.component';\nimport { SidebarMenuComponent } from './sidebar-menu/sidebar-menu.component';\nimport { GlobalSearchComponent } from './global-search/global-search.component';\n\nexport const SHELL_COMPONENTS: any[] = [\n    TopbarHeaderComponent,\n    SidebarMenuComponent,\n    GlobalSearchComponent\n];\n","import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../../../shared/globals/base.directive';\nimport { ApplicationService } from '../../../services/app.service';\nimport { ApplicationInternalLink } from 'src/app/shared/utilities/settings.interfaces';\n\n@Component({\n    selector: 'sidebar-menu',\n    templateUrl: './sidebar-menu.template.html',\n    styleUrls: ['./sidebar-menu.styles.scss']\n})\nexport class SidebarMenuComponent extends BaseDirective implements OnInit {\n    /** Whether the sidebar menu should be shown */\n    @Input() public show: boolean;\n    /** Emitter for changes to the sidebar show state */\n    @Output() public showChange = new EventEmitter<boolean>();\n    /** List of available menu items for the application */\n    public menu_items: ApplicationInternalLink[];\n    /** Route of the shown tooltip */\n    public tooltip: string;\n\n    constructor(\n        private _service: ApplicationService,\n        private _composer: ComposerService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => this.init());\n    }\n\n    public init() {\n        this.menu_items = this._service.setting('app.general.menu');\n        const user = this._service.Users.user.getValue();\n        /** Only allow metrics if a URL has be set */\n        if (!this._composer.auth.authority.metrics) {\n            this.menu_items = this.menu_items.filter(\n                item => item.route && item.route.indexOf('metrics') < 0\n            );\n            if (this._router.url.indexOf('metrics') >= 0) {\n                this._router.navigate([]);\n            }\n        }\n        /** Filter out items with insufficient permissions */\n        this.menu_items = this.menu_items.filter(\n            item => !item.needs_role || !!(user as any)[item.needs_role]\n        );\n        this.subscription(\n            'up',\n            this._service.Hotkeys.listen(['Control', 'Shift', 'ArrowUp'], () => this.changeSelected(-1))\n        );\n        this.subscription(\n            'down',\n            this._service.Hotkeys.listen(['Control', 'Shift', 'ArrowDown'], () => this.changeSelected(1))\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.show) {\n            this.clearTimeout('close');\n        }\n    }\n\n    /**\n     * Delayed close of the sidebar menu. Mobile Only\n     */\n    public close() {\n        this.timeout(\n            'close',\n            () => {\n                this.show = false;\n                this.showChange.emit(this.show);\n            },\n            100\n        );\n    }\n\n    /**\n     * Cancel delayed close\n     */\n    public cancelClose() {\n        this.timeout('cancel_close', () => this.clearTimeout('close'), 10);\n    }\n\n    private changeSelected(offset: number = 1) {\n        const index = this.menu_items.findIndex(item => this._router.url.indexOf(item.route) >= 0);\n        const new_index = index + offset;\n        if (this.menu_items[new_index]) {\n            this._router.navigate([this.menu_items[new_index].route]);\n        }\n    }\n}\n","<div\n    class=\"container\"\n    *ngIf=\"menu_items\"\n    [class.show]=\"show\"\n    (mouseleave)=\"tooltip = 'false'\"\n    (tapped)=\"cancelClose()\"\n    (window:click)=\"close()\"\n>\n    <ng-container *ngFor=\"let item of menu_items\">\n        <div class=\"item\" [title]=\"item.name\" [matTooltip]=\"item.name\" i18n-matTooltip matTooltipPosition=\"right\">\n            <a [routerLink]=\"[item.route]\" routerLinkActive=\"active\">\n                <app-icon [icon]=\"item?.icon\"></app-icon>\n                <div class=\"text\" *ngIf=\"!item?.hide_name\" i18n>\n                    { item.name, select, Systems { Systems } Modules { Modules } Zones { Zones }\n                    Drivers { Drivers } Repos { Repos } Triggers { Triggers } Users { Users }\n                    Domains { Domains } Admin { Admin } other { Other } }\n                </div>\n                <div class=\"bar\"></div>\n            </a>\n        </div>\n    </ng-container>\n</div>\n","import { Component, OnInit, EventEmitter, Output, Input, Type } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EngineSystem, EngineZone, EngineDriver, EngineModule, EngineUser } from '@placeos/ts-client';\n\nimport { BaseDirective } from '../../../shared/globals/base.directive';\nimport { ApplicationService } from '../../../services/app.service';\nimport { ApplicationLink, ApplicationIcon, ApplicationActionLink } from 'src/app/shared/utilities/settings.interfaces';\nimport { ItemCreateUpdateModalComponent } from 'src/app/overlays/item-modal/item-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { BulkItemModalComponent } from 'src/app/overlays/bulk-item-modal/bulk-item-modal.component';\n\n@Component({\n    selector: 'topbar-header',\n    templateUrl: './topbar-header.template.html',\n    styleUrls: ['./topbar-header.styles.scss']\n})\nexport class TopbarHeaderComponent extends BaseDirective implements OnInit {\n    /** Whether the sidebar menu should be shown */\n    @Input('showMenu') public show_menu: boolean;\n    /** Emitter for changes to the sidebar menu show state */\n    @Output('showMenuChange') public show_menu_change = new EventEmitter<boolean>();\n    /** Current global search string */\n    @Input() public filter: string;\n    /** Emitter for changes to the search input */\n    @Output() public filterChange = new EventEmitter();\n    /** List of user actions */\n    public options: ApplicationLink[];\n    /** Whether user tooltip should be shown */\n    public show: boolean;\n    /** Whether the user wishes to bulk add items */\n    public bulk: boolean = false;\n\n    /** Whether dark mode is enabled */\n    public get dark_mode(): boolean {\n        return this._service.Users.dark_mode;\n    }\n    public set dark_mode(state: boolean) {\n        this._service.Users.dark_mode = state;\n    }\n\n    public get title() {\n        return document.title.split(' | ')[0];\n    }\n\n    public get is_fools_day(): boolean {\n        return dayjs().format('D MMM') === '1 Apr' && !localStorage.getItem('I\\'M NO FOOL!!!');\n    }\n\n    /** Application logo */\n    public get logo(): ApplicationIcon {\n        return this._service.setting('app.logo_light');\n    }\n\n    /** Whether global search is enabled */\n    public get has_search(): boolean {\n        return this._service.setting('app.general.global_search');\n    }\n\n    /** Whether global search is enabled */\n    public get languages(): { name: string, locale: string, icon: ApplicationIcon }[] {\n        return this._service.setting('app.languages') || [];\n    }\n\n    /** Active user */\n    public get user(): any {\n        return this._service.Users.user.getValue();\n    }\n\n    /** Current environment of the application */\n    public get env(): string {\n        return this._service.setting('env');\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit() {}\n\n    public notAFool() {\n        localStorage.setItem('I\\'M NO FOOL!!!', 'true');\n    }\n\n    public newSystem() {\n        this.newItem(new EngineSystem(), this._service.Systems, EngineSystem);\n    }\n\n    public newZone() {\n        this.newItem(new EngineZone(), this._service.Zones, EngineZone);\n    }\n\n    public newModule() {\n        this.newItem(new EngineModule(), this._service.Modules, EngineModule);\n    }\n\n    public newDriver() {\n        this.newItem(new EngineDriver(), this._service.Drivers, EngineDriver);\n    }\n\n    public newUser() {\n        this.newItem(new EngineUser(), this._service.Users, EngineUser);\n    }\n\n    /**\n     * Open the modal to create a new engine resource\n     */\n    protected newItem<T = any>(item: any, service: any, constr: Type<T>) {\n        if (this.bulk) {\n            this._dialog.open(BulkItemModalComponent, {\n                height: 'auto',\n                width: 'auto',\n                maxHeight: 'calc(100vh - 2em)',\n                maxWidth: 'calc(100vw - 2em)',\n                data: {\n                    constr,\n                    service\n                }\n            });\n        } else {\n            this._dialog.open(ItemCreateUpdateModalComponent, {\n                height: 'auto',\n                width: 'auto',\n                maxHeight: 'calc(100vh - 2em)',\n                maxWidth: 'calc(100vw - 2em)',\n                data: {\n                    item,\n                    service\n                }\n            });\n        }\n    }\n\n    /** Toggle the show state of the sidebar menu */\n    public toggleMenu() {\n        this.show_menu = !this.show_menu;\n        this.show_menu_change.emit(this.show_menu);\n    }\n\n    /**\n     * Emit changes to the global search filter\n     */\n    public postFilter() {\n        this.filterChange.emit(this.filter);\n    }\n}\n","<div class=\"container\">\n    <div class=\"topbar\">\n        <button mat-icon-button class=\"mobile-only\" (tapped)=\"toggleMenu()\">\n            <app-icon [icon]=\"{ class: 'backoffice-' + (show_menu ? 'cross' : 'menu') }\"></app-icon>\n        </button>\n        <div class=\"block\">\n            <div *ngIf=\"logo\" class=\"logo\">\n                <a [routerLink]=\"['/']\" *ngIf=\"!is_fools_day; else fools_day\">\n                    Place<span>OS</span>\n                </a>\n            </div>\n        </div>\n        <div class=\"uat\" *ngIf=\"env !== 'prod'\">\n            {{ env }}\n        </div>\n        <div class=\"search\">\n            <searchbar\n                *ngIf=\"has_search\"\n                [(filter)]=\"filter\"\n                (filterChange)=\"postFilter()\"\n            ></searchbar>\n        </div>\n        <div class=\"block end\">\n            <button\n                mat-icon-button\n                class=\"more-actions not-mobile\"\n                [matMenuTriggerFor]=\"more_actions\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'more_vert' }\"></app-icon>\n            </button>\n            <!-- TODO Add user details display -->\n            <button mat-icon-button class=\"avatar\" [title]=\"user?.name\" [matMenuTriggerFor]=\"menu\">\n                <div\n                    class=\"img\"\n                    [style.background-image]=\"('url(' + (user?.image || 'https://www.gravatar.com/avatar/' + user?.gravatar_hash) + ')') | safe:'style'\"\n                ></div>\n            </button>\n        </div>\n    </div>\n</div>\n<mat-menu #menu=\"matMenu\">\n    <a mat-menu-item>\n        <div class=\"avatar\" [routerLink]=\"['/profile']\" routerLinkActive=\"active\">\n            <div\n                class=\"img\"\n                [style.background-image]=\"('url(' + (user?.image || 'https://www.gravatar.com/avatar/' + user?.gravatar_hash) + ')') | safe:'style'\"\n            ></div>\n        </div>\n        <div class=\"text\">{{user?.name || 'Guest'}}</div>\n    </a>\n    <a mat-menu-item [routerLink]=\"['/profile']\" routerLinkActive=\"active\">\n        <app-icon [icon]=\"{ class: 'backoffice-user' }\"></app-icon>\n        <div class=\"text\" i18n=\"@@profileAction\">Profile</div>\n    </a>\n    <a mat-menu-item href=\"/logout\">\n        <app-icon [icon]=\"{ class: 'backoffice-log-out' }\"></app-icon>\n        <div class=\"text\" i18n=\"@@logoutAction\">Logout</div>\n    </a>\n    <div class=\"item\" mat-menu-item role=\"menuitemcheckbox\">\n        <app-icon [icon]=\"{ class: 'backoffice-moon' }\"></app-icon>\n        <div class=\"text\" i18n=\"@@darkMode\">Dark Mode</div>\n        <div class=\"toggle\" (click)=\"$event.stopPropagation()\">\n            <mat-slide-toggle [(ngModel)]=\"dark_mode\"></mat-slide-toggle>\n        </div>\n    </div>\n    <button mat-menu-item [matMenuTriggerFor]=\"language_menu\" *ngIf=\"languages.length > 1\">\n        <app-icon [icon]=\"{ class: 'backoffice-globe' }\"></app-icon>\n        <div class=\"text\" i18n=\"@@languageAction\">Language</div>\n    </button>\n    <a mat-menu-item [href]=\"'https://github.com/PlaceOS/backoffice/issues/new?title=Issue on page ' + title\" target=\"_blank\">\n        <app-icon [icon]=\"{ class: 'backoffice-github' }\"></app-icon>\n        <div class=\"text\" i18n=\"@@reportAction\">Report an Issue</div>\n    </a>\n</mat-menu>\n<mat-menu #more_actions=\"matMenu\">\n    <button mat-menu-item [matMenuTriggerFor]=\"type_menu\" (mouseenter)=\"bulk = false\" (click)=\"bulk = false\">\n        <app-icon [icon]=\"{ class: 'backoffice-plus' }\"></app-icon>\n        <div class=\"text\" i18n=\"@@newAction\">New</div>\n    </button>\n    <button mat-menu-item [matMenuTriggerFor]=\"type_menu\" (mouseenter)=\"bulk = true\" (click)=\"bulk = true\">\n        <app-icon [icon]=\"{ class: 'backoffice-plus' }\"></app-icon>\n        <div class=\"text\" i18n=\"@@bulkNewAction\">Bulk New</div>\n    </button>\n</mat-menu>\n<mat-menu #type_menu=\"matMenu\">\n    <button mat-menu-item (tapped)=\"newSystem()\">\n        <app-icon [icon]=\"{ class: 'backoffice-documents' }\"></app-icon>\n        <div class=\"text\" i18n=\"@@newSystemAction\">{ bulk, select, true { Systems } false { System } }</div>\n    </button>\n    <button mat-menu-item (tapped)=\"newZone()\">\n        <app-icon [icon]=\"{ class: 'backoffice-layers' }\"></app-icon>\n        <div class=\"text\" i18n=\"@@newZoneAction\">{ bulk, select, true { Zones } false { Zone } }</div>\n    </button>\n    <button mat-menu-item (tapped)=\"newDriver()\">\n        <app-icon [icon]=\"{ class: 'backoffice-tools' }\"></app-icon>\n        <div class=\"text\" i18n=\"@@newDriverAction\">{ bulk, select, true { Drivers } false { Driver } }</div>\n    </button>\n    <button mat-menu-item (tapped)=\"newModule()\">\n        <app-icon [icon]=\"{ class: 'backoffice-tablet' }\"></app-icon>\n        <div class=\"text\" i18n=\"@@newModuleAction\">{ bulk, select, true { Modules } false { Module } }</div>\n    </button>\n    <button mat-menu-item (tapped)=\"newUser()\">\n        <app-icon [icon]=\"{ class: 'backoffice-users' }\"></app-icon>\n        <div class=\"text\" i18n=\"@@newUserAction\">{ bulk, select, true { Users } false { User } }</div>\n    </button>\n</mat-menu>\n<ng-template #fools_day>\n    <a href=\"http://www.nyan.cat/\" (click)=\"notAFool()\">April <span>Fools</span></a>\n</ng-template>\n<mat-menu #language_menu=\"matMenu\">\n    <a mat-menu-item [href]=\"'/backoffice/' + language.locale\" (tapped)=\"newSystem()\" *ngFor=\"let language of languages\">\n        <app-icon [icon]=\"language.icon\"></app-icon>\n        <div class=\"text\">{{ language.name }}</div>\n    </a>\n</mat-menu>\n","\nimport { AppShellComponent } from './shell.component';\nimport { SHELL_COMPONENTS } from './components';\n\nexport const APP_COMPONENTS: any[] = [\n    AppShellComponent,\n    ...SHELL_COMPONENTS\n];\n\nexport const APP_ENTRY_COMPONENTS: any[] = [\n\n];\n","/**\n * @Author: Alex Sorafumo\n * @Date:   17/10/2016 4:10 PM\n * @Email:  alex@yuion.net\n * @Filename: simple.component.ts\n * @Last modified by:   Alex Sorafumo\n * @Last modified time: 01/02/2017 1:37 PM\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { EngineUser } from '@placeos/ts-client';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationLink } from '../shared/utilities/settings.interfaces';\nimport { ApplicationService } from '../services/app.service';\nimport { BaseDirective } from '../shared/globals/base.directive';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'app-shell',\n    styleUrls: ['./shell.styles.scss'],\n    templateUrl: './shell.template.html'\n})\nexport class AppShellComponent extends BaseDirective implements OnInit {\n    /** Whether the application is loading */\n    public loading: boolean;\n    /** Display string for the current year */\n    public year: string;\n    /** Currently active user */\n    public user: EngineUser;\n    /** Global search filter string */\n    public filter: string;\n    /** Whether sidebar menu should be shown */\n    public show: boolean;\n\n    /** Active environment */\n    public get env(): string {\n        return this._service.setting('env') || '';\n    }\n\n    /** List of core tiles to show on the sidebar menu */\n    public get tiles(): ApplicationLink[] {\n        return this._service.setting('app.tiles') || [];\n    }\n\n    /** Whether dark mode is enabled */\n    public get dark_mode(): boolean {\n        return this._service.Users.dark_mode;\n    }\n\n    public get is_fools_day(): boolean {\n        return dayjs().format('D MMM') === '1 Apr' && !localStorage.getItem('I\\'M NO FOOL!!!');\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.year = dayjs().format('YYYY');\n        this.subscription(\n            'user',\n            this._service.Users.user.subscribe(user => (this.user = user))\n        );\n        this.loading = true;\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => this.init());\n    }\n\n    public init() {\n        this.loading = false;\n        this._service.Users.current().then(user => (this.user = user));\n    }\n\n    /** Navigate to the root page */\n    public home() {\n        this._service.navigate('');\n    }\n}\n","<div class=\"container\" [class.uat]=\"env !== 'prod'\" [class.dark-mode]=\"dark_mode\" [class.joke]=\"is_fools_day\" *ngIf=\"user && !loading\">\n    <div class=\"header\">\n        <topbar-header [(showMenu)]=\"show\" [(filter)]=\"filter\"></topbar-header>\n    </div>\n    <div class=\"body\" [class.filtered]=\"filter\">\n        <div class=\"sidebar-menu\">\n            <sidebar-menu [(show)]=\"show\"></sidebar-menu>\n        </div>\n        <div class=\"content\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n    <div class=\"search-results\" *ngIf=\"filter\">\n        <global-search [(search)]=\"filter\"></global-search>\n    </div>\n    <app-debug-output></app-debug-output>\n</div>\n<div class=\"container loader\" [class.uat]=\"env !== 'prod'\" *ngIf=\"loading\">\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <a-spinner circle-ring color=\"#fff\"></a-spinner>\n        </div>\n        <div class=\"text\" i18n=\"@@rootLoader\">Loading application data...</div>\n    </div>\n</div>\n<div class=\"container login\" [class.uat]=\"env !== 'prod'\" *ngIf=\"!user\">\n    <login-display></login-display>\n</div>\n","export const environment = {\n  production: true\n};\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"b2e352d\",\n    \"hash\": \"b2e352d\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"b2e352d\",\n    \"semverString\": null,\n    \"version\": \"2.0.2\",\n    \"core_version\": \"1.0.0\",\n    \"time\": 1593486325004\n};\n/* tslint:enable */\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}