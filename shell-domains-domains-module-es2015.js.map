{"version":3,"sources":["./src/app/shell/domains/domain-applications/domain-applications.component.ts","./src/app/shell/domains/domain-applications/domain-applications.template.html","./src/app/shell/domains/domain-authentication/domain-authentication.component.ts","./src/app/shell/domains/domain-authentication/domain-authentication.template.html","./src/app/shell/domains/domain-users/domain-users.component.ts","./src/app/shell/domains/domain-users/domain-users.template.html","./src/app/shell/domains/domains.component.ts","./src/app/shell/domains/domains.template.html","./src/app/shell/domains/domains.module.ts","./src/app/shell/domains/domains.routes.ts"],"names":[],"mappings":"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","file":"shell-domains-domains-module-es2015.js","sourcesContent":["import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { EngineDomain, EngineApplication } from '@placeos/ts-client';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from '../../../shared/globals/base.directive';\nimport { ApplicationService } from '../../../services/app.service';\nimport { ItemCreateUpdateModalComponent } from 'src/app/overlays/item-modal/item-modal.component';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { copyToClipboard } from 'src/app/shared/utilities/general.utilities';\n\n@Component({\n    selector: 'domain-applications',\n    templateUrl: './domain-applications.template.html',\n    styleUrls: ['./domain-applications.styles.scss']\n})\nexport class DomainApplicationsComponent extends BaseDirective implements OnChanges, OnInit {\n    /** Active domain */\n    @Input() public item: EngineDomain;\n    /** List of applications associated with the active domain */\n    public application_list: EngineApplication[];\n\n    public show_secret: HashMap<boolean> = {};\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'item',\n            this._service.listen('BACKOFFICE.active_item').subscribe(item => {\n                this.item = item;\n                this.loadApplications();\n            })\n        );\n    }\n\n    public ngOnChanges(changes: any) {\n        if (changes.item) {\n            this.loadApplications();\n        }\n    }\n\n    public copySecret(item: EngineApplication) {\n        this.show_secret[item.id] = false;\n        copyToClipboard(item.secret);\n        this._service.notifyInfo('Copied client secret to clipboard');\n    }\n\n    public loadApplications(offset: number = 0) {\n        if (!this.item) { return; }\n        this._service.Applications.query({ owner_id: this.item.id, offset } as any).then(\n            list => {\n                if (!offset) {\n                    this.application_list = [];\n                }\n                for (const item of list || []) {\n                    let found = false;\n                    for (const i of this.application_list) {\n                        if (i.id === item.id) {\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) {\n                        this.application_list.push(item);\n                    }\n                }\n            },\n            () => null\n        );\n    }\n    /**\n     * Open the modal to create a new system\n     */\n    public newApplication() {\n        const ref = this._dialog.open(ItemCreateUpdateModalComponent, {\n            height: 'auto',\n            width: 'auto',\n            maxHeight: 'calc(100vh - 2em)',\n            maxWidth: 'calc(100vw - 2em)',\n            data: {\n                item: new EngineApplication(),\n                service: this._service.Applications\n            }\n        });\n        this.subscription('item-form', ref.componentInstance.event.subscribe((event) => {\n            if (event.reason === 'done') {\n                this.loadApplications();\n                this._service.set('APP_LIST_CHANGE', dayjs().valueOf());\n            }\n        }));\n    }\n\n    /**\n     * Open the modal to create a new system\n     */\n    public editApplication(item: EngineApplication) {\n        if (this.item) {\n            const ref = this._dialog.open(ItemCreateUpdateModalComponent, {\n                height: 'auto',\n                width: 'auto',\n                maxHeight: 'calc(100vh - 2em)',\n                maxWidth: 'calc(100vw - 2em)',\n                data: {\n                    item,\n                    service: this._service.Applications\n                }\n            });\n            this.subscription('item-form', ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done') {\n                    this.loadApplications();\n                }\n            }));\n        }\n    }\n\n    public deleteApplication(item: EngineApplication) {\n        if (item) {\n            const ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n                ConfirmModalComponent,\n                {\n                    ...CONFIRM_METADATA,\n                    data: {\n                        title: `Delete application`,\n                        content: `<p>Are you sure you want delete the application ${item.name}?</p><p>Configuration will be <strong>immediately</strong> updated</p>`,\n                        icon: { type: 'icon', class: 'backoffice-trash' }\n                    }\n                }\n            );\n            this.subscription(\n                'delete_confirm',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    if (event.reason === 'done') {\n                        ref.componentInstance.loading = 'Deleting application...';\n                        item.delete().then(\n                            () => {\n                                this._service.notifySuccess(\n                                    `Successfully deleted application \"${item.name}\".`\n                                );\n                                this.loadApplications();\n                                ref.close();\n                                this.unsub('delete_confirm');\n                            },\n                            err => {\n                                ref.componentInstance.loading = null;\n                                this._service.notifyError(\n                                    `Error deleting application. Error: ${JSON.stringify(err.response || err.message || err)}`\n                                );\n                            }\n                        );\n                    }\n                })\n            );\n        }\n    }\n}\n","<div class=\"container\" *ngIf=\"item\">\n    <section class=\"select\">\n        <button mat-button (tapped)=\"newApplication()\" i18n=\"@@newAction\">Add new</button>\n    </section>\n    <section>\n        <div class=\"list\" *ngIf=\"application_list && application_list.length > 0\">\n            <table>\n                <thead>\n                    <td class=\"name\" i18n=\"@@applicationTableName\">Name</td>\n                    <td class=\"flex\" i18n=\"@@applicationTableRedirect\">Redirect</td>\n                    <td class=\"flex\" i18n=\"@@applicationTableClientId\">Client ID</td>\n                    <td class=\"flex\" i18n=\"@@applicationTableClientSecret\">Secret</td>\n                    <td class=\"scope\" i18n=\"@@applicationTableScope\">Scope</td>\n                    <td class=\"duo\"></td>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let item of application_list\">\n                        <td class=\"name\" [matTooltip]=\"item.id\">{{item.name}}</td>\n                        <td class=\"flex\">\n                            <a [href]=\"item.redirect_uri\">{{item.redirect_uri}}</a>\n                        </td>\n                        <td class=\"id\">{{item.uid}}</td>\n                        <td\n                            class=\"secret\"\n                            (click)=\"!show_secret[item.id] ? show_secret[item.id] = true : copySecret(item)\"\n                        >\n                            {{show_secret[item.id] ? item.secret : 'Show'}}\n                        </td>\n                        <td class=\"scope\">{{item.scopes}}</td>\n                        <td class=\"duo\">\n                            <button mat-icon-button (tapped)=\"editApplication(item)\">\n                                <app-icon [icon]=\"{ class: 'backoffice-edit' }\"></app-icon>\n                            </button>\n                            <button mat-icon-button (tapped)=\"deleteApplication(item)\">\n                                <app-icon [icon]=\"{ class: 'backoffice-trash' }\"></app-icon>\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"info-block\" *ngIf=\"!application_list || application_list.length <= 0\">\n            <div class=\"text\" i18n=\"@@applicationTableEmpty\">No applications found</div>\n        </div>\n    </section>\n</div>\n","import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { EngineDomain, EngineSAMLSource, EngineLDAPSource } from '@placeos/ts-client';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from '../../../shared/globals/base.directive';\nimport { ApplicationService } from '../../../services/app.service';\nimport { Identity, HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { AuthSourceModalComponent, AuthSourceModalData } from 'src/app/overlays/auth-source-modal/auth-source-modal.component';\n\nexport interface EngineAuthSourceLike extends Identity {\n    authority_id: string;\n    save: () => Promise<EngineAuthSourceLike>;\n    delete: () => Promise<void>;\n}\n\n@Component({\n    selector: 'domain-authentication',\n    templateUrl: './domain-authentication.template.html',\n    styleUrls: ['./domain-authentication.styles.scss']\n})\nexport class DomainAuthenticationComponent extends BaseDirective implements OnChanges, OnInit {\n    /** Active domain item */\n    @Input() public item: EngineDomain;\n    /** List of auth sources associated with the active domain */\n    public auth_sources: EngineAuthSourceLike[] = [];\n    /** Mapping of auth sources to their type */\n    public source_types: HashMap<'oauth' | 'saml' | 'ldap'> = {};\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'item',\n            this._service.listen('BACKOFFICE.active_item').subscribe(item => {\n                this.item = item;\n                this.loadAuthSources();\n            })\n        );\n    }\n\n    public ngOnChanges(changes: any) {\n        if (changes.item) {\n            this.loadAuthSources();\n        }\n    }\n\n    /**\n     * Load auth sources of all types for domain\n     * @param offset Request page offset\n     */\n    public loadAuthSources(offset: number = 0) {\n        if (!this.item) { return; }\n        Promise.all([\n            this._service.OAuthSources.query({ authority_id: this.item.id, offset } as any),\n            this._service.SAMLAuthSources.query({ authority_id: this.item.id, offset } as any),\n            this._service.LDAPAuthSources.query({ authority_id: this.item.id, offset } as any)\n        ]).then(\n            responses => {\n                if (!offset) {\n                    this.auth_sources = [];\n                }\n                for (const list of responses) {\n                    list.forEach(auth_source => this.addAuthSourceToList(auth_source));\n                }\n            },\n            () => null\n        );\n    }\n\n\n    /**\n     * Open modal to create a new  auth source for the domain\n     * @param item Auth source to delete\n     */\n    public newAuthSource(): void {\n        const ref = this._dialog.open<AuthSourceModalComponent, AuthSourceModalData>(\n            AuthSourceModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: {\n                    domain: this.item\n                }\n            }\n        );\n        ref.afterClosed().subscribe(() => this.loadAuthSources());\n    }\n\n    /**\n     * Open modal to edit auth source\n     * @param item Auth source to edit\n     */\n    public editAuthSource(item: EngineAuthSourceLike): void {\n        const ref = this._dialog.open<AuthSourceModalComponent, AuthSourceModalData>(\n            AuthSourceModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: {\n                    domain: this.item,\n                    auth_source: item as any\n                }\n            }\n        );\n        ref.afterClosed().subscribe(() => this.loadAuthSources());\n    }\n\n    /**\n     * Delete the auth source from the domain\n     * @param item Auth source to delete\n     */\n    public deleteAuthSource(item: EngineAuthSourceLike): void {\n        if (item) {\n            const ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n                ConfirmModalComponent,\n                {\n                    ...CONFIRM_METADATA,\n                    data: {\n                        title: `Delete auth source`,\n                        content: `<p>Are you sure you want delete this auth source?</p><p>Deleting this will remove this auth source <strong>immediately</strong></p>`,\n                        icon: { type: 'icon', class: 'backoffice-trash' }\n                    }\n                }\n            );\n            this.subscription(\n                'delete_confirm',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    if (event.reason === 'done') {\n                        ref.componentInstance.loading = 'Deleting auth source...';\n                        item.delete().then(\n                            () => {\n                                this._service.notifySuccess('Successfully deleted auth source.');\n                                ref.close();\n                                this.unsub('delete_confirm');\n                                this.loadAuthSources();\n                            },\n                            err => {\n                                this._service.notifyError(\n                                    `Error deleting auth source. Error ${JSON.stringify(err.response || err.message || err)}`\n                                );\n                                ref.componentInstance.loading = null;\n                            }\n                        );\n                    }\n                })\n            );\n        }\n    }\n\n    /**\n     * Add source the the auth source list. Updated item if it already exists\n     * @param source Source to add the the list\n     */\n    private addAuthSourceToList(source: EngineAuthSourceLike) {\n        this.source_types[source.id] =\n            source instanceof EngineSAMLSource\n                ? 'saml'\n                : source instanceof EngineLDAPSource\n                ? 'ldap'\n                : 'oauth';\n        const index = this.auth_sources.findIndex(a_source => a_source.id === source.id);\n        if (index < 0) {\n            this.auth_sources.push(source);\n        } else {\n            this.auth_sources.splice(index, 1, source);\n        }\n    }\n}\n","<div class=\"container\">\n    <section class=\"select\">\n        <button mat-button (tapped)=\"newAuthSource()\" i18n=\"@@newAction\">Add new</button>\n    </section>\n    <section>\n        <div class=\"list\" *ngIf=\"auth_sources && auth_sources.length > 0; else no_auth_sources\">\n            <table>\n                <thead>\n                    <td class=\"name\" i18n=\"@@authTableName\">Name</td>\n                    <td class=\"flex\" i18n=\"@@authTableType\">Type</td>\n                    <td class=\"duo\"></td>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let item of auth_sources\">\n                        <td class=\"name\" [matTooltip]=\"item.id\">{{item.name}}</td>\n                        <td class=\"flex\">{{source_types[item.id]}}</td>\n                        <td class=\"duo\">\n                            <button mat-icon-button (tapped)=\"editAuthSource(item)\">\n                                <app-icon [icon]=\"{ class: 'backoffice-edit' }\"></app-icon>\n                            </button>\n                            <button mat-icon-button (tapped)=\"deleteAuthSource(item)\">\n                                <app-icon [icon]=\"{ class: 'backoffice-trash' }\"></app-icon>\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </section>\n</div>\n<ng-template #no_auth_sources>\n    <div class=\"info-block\">\n        <div class=\"text\" i18n=\"@@authTableEmpty\">No authentication sources found</div>\n    </div>\n</ng-template>\n","\nimport { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { EngineDomain } from '@placeos/ts-client';\n\nimport { BaseDirective } from '../../../shared/globals/base.directive';\nimport { ApplicationService } from '../../../services/app.service';\n\n@Component({\n    selector: 'domain-users',\n    templateUrl: './domain-users.template.html',\n    styleUrls: ['./domain-users.styles.scss']\n})\nexport class DomainUsersComponent extends BaseDirective implements OnInit, OnChanges {\n    @Input() public item: EngineDomain;\n\n    public model: any = {};\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'item',\n            this._service.listen('BACKOFFICE.active_item').subscribe(item => {\n                this.item = item;\n                this.loadUsers();\n            })\n        );\n        this.loadUsers();\n    }\n\n    public ngOnChanges(changes: any) {\n        if (changes.item) {\n            this.loadUsers();\n        }\n    }\n\n    public loadUsers(offset: number = 0) {\n        if (!this.item) { return; }\n        this._service.Users.query({ authority_id: this.item.id, offset }).then((list) => {\n            if (!offset) { this.model.list = []; }\n            for (const item of (list || [])) {\n                let found = false;\n                for (const i of this.model.list) {\n                    if (i.id === item.id) {\n                        found = true;\n                        break;\n                    }\n                }\n                if (!found) { this.model.list.push(item); }\n            }\n        }, () => null);\n    }\n}\n","<div class=\"container\">\n    <section>\n        <div class=\"list\" *ngIf=\"model.list && model.list.length > 0\">\n            <table>\n                <thead>\n                    <td class=\"name\" i18n=\"@@userTableName\">Name</td>\n                    <td class=\"flex\" i18n=\"@@userTableEmail\">Email</td>\n                    <td class=\"role\" i18n=\"@@userTableRole\">Role</td>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let item of model.list\">\n                        <td class=\"name\" [matTooltip]=\"item.id\">{{item.name}}</td>\n                        <td class=\"flex\">{{item.email}}</td>\n                        <td class=\"role\">{{item.role}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"info-block\" *ngIf=\"!model.list || model.list.length <= 0\">\n            <div class=\"text\" i18n=\"@@userTableEmpty\">No users found</div>\n        </div>\n    </section>\n</div>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EngineDomain } from '@placeos/ts-client';\n\nimport { ApplicationService } from '../../services/app.service';\nimport { BaseRootComponent } from '../../shared/components/base-root.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ItemCreateUpdateModalComponent } from 'src/app/overlays/item-modal/item-modal.component';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'app-domains',\n    templateUrl: './domains.template.html',\n    styleUrls: ['./domains.styles.scss']\n})\nexport class DomainsComponent extends BaseRootComponent<EngineDomain> {\n    /** Number of triggers for the active system */\n    public applications: number;\n    /** Number of triggers for the active system */\n    public auth_sources: number;\n    /** Number of triggers for the active system */\n    public user_count: number;\n\n    constructor(\n        protected _service: ApplicationService,\n        protected _route: ActivatedRoute,\n        protected _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super(_service, _route, _router);\n        this.service = this._service.Domains;\n    }\n\n    public ngOnInit(): void {\n        super.ngOnInit();\n        this._service.set('APP_LIST_CHANGE', dayjs().valueOf());\n        this.subscription('changes',\n        this._service.listen('APP_LIST_CHANGE').subscribe(() => {\n            this.loadValues();\n        }))\n        this._service.title = 'Domains';\n    }\n\n    protected loadValues() {\n        if(!this.item){ return; }\n        let query: any = { offset: 0, limit: 1, owner: this.item.id };\n        // Get application count\n        this._service.Applications.query(query).then(\n            list => (this.applications = this._service.Applications.last_total || list.length || 0)\n        );\n        query = { offset: 0, limit: 1, authority_id: this.item.id };\n        // Get auth source count\n        // this._service.AuthSources.query(query).then(\n        //     () => (this.auth_sources = this._service.AuthSources.last_total)\n        // );\n        // Get users count\n        this._service.Users.query(query).then(\n            list => (this.user_count = this._service.Users.last_total || list.length || 0)\n        );\n    }\n    /**\n     * Open the modal to create a new system\n     */\n    protected newItem(copy: boolean = false) {\n        if (this.modal_ref) { return; }\n        this.modal_ref = this._dialog.open(ItemCreateUpdateModalComponent, {\n            height: 'auto',\n            width: 'auto',\n            maxHeight: 'calc(100vh - 2em)',\n            maxWidth: 'calc(100vw - 2em)',\n            data: {\n                item: copy ? new EngineDomain({ ...this.item, id: '', name: `${this.item.name} (1)` }) : new EngineDomain(),\n                service: this._service.Domains\n            }\n        });\n        this.subscription('modal_events', this.modal_ref.componentInstance.event.subscribe(event => {\n            if (event.reason === 'done') {\n                this._router.navigate(['/domains', event.metadata.item.id]);\n            }\n        }));\n        this.modal_ref.afterClosed().subscribe(() => {\n            this.unsub('modal_events');\n            this.modal_ref = null;\n        });\n    }\n\n    /**\n     * Open the modal to create a new system\n     */\n    protected editItem() {\n        if (this.item && !this.modal_ref) {\n            this.modal_ref = this._dialog.open(ItemCreateUpdateModalComponent, {\n                height: 'auto',\n                width: 'auto',\n                maxHeight: 'calc(100vh - 2em)',\n                maxWidth: 'calc(100vw - 2em)',\n                data: {\n                    item: this.item,\n                    service: this._service.Domains\n                }\n            });\n            this.modal_ref.afterClosed().subscribe(() => {\n                this.unsub('modal_events');\n                this.modal_ref = null;\n            });\n        }\n    }\n\n    protected deleteItem() {\n        if (this.item && !this.modal_ref) {\n            this.modal_ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n                ConfirmModalComponent,\n                {\n                    ...CONFIRM_METADATA,\n                    data: {\n                        title: `Delete domain`,\n                        content: `<p>Are you sure you want delete this domain?</p><p>The domain will be deleted <strong>immediately.</strong></p>`,\n                        icon: { type: 'icon', class: 'backoffice-trash' }\n                    }\n                }\n            );\n            this.subscription(\n                'delete_confirm',\n                this.modal_ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    if (event.reason === 'done') {\n                        this.modal_ref.componentInstance.loading = 'Deleting domain...';\n                        this.item.delete().then(\n                            () => {\n                                this._service.notifySuccess(\n                                    `Successfully deleted domain \"${this.item.name}\".`\n                                );\n                                this._router.navigate(['/users']);\n                                this._service.set('BACKOFFICE.removed', this.item.id);\n                                this.modal_ref.close();\n                            },\n                            err => {\n                                this.modal_ref.componentInstance.loading = null;\n                                this._service.notifyError(`Error deleting domain. Error: ${JSON.stringify(err.response || err.message || err)}`);\n                            }\n                        );\n                    }\n                })\n            );\n            this.modal_ref.afterClosed().subscribe(() => {\n                this.unsub('modal_events');\n                this.modal_ref = null;\n            });\n        }\n    }\n}\n","<div class=\"container\" [class.show]=\"show_sidebar\">\n    <div class=\"sidebar\">\n        <sidebar\n            heading=\"Domains\"\n            [module]=\"module\"\n            [close]=\"show_sidebar\"\n            (event)=\"sidebarEvent($event)\"\n        ></sidebar>\n    </div>\n    <main (touchrelease)=\"show_sidebar = false\">\n        <item-display\n            name=\"domain\"\n            route=\"domains\"\n            [item]=\"item\"\n            [tabs]=\"[\n                {\n                    id: 'applications',\n                    name: 'Applications',\n                    count: applications || 0,\n                    icon: { class: 'backoffice-publish' }\n                },\n                {\n                    id: 'authentication',\n                    name: 'Authentication',\n                    count: auth_sources || 0,\n                    icon: { class: 'backoffice-lock-open' }\n                },\n                { id: 'users', name: 'Users', count: user_count || 0, icon: { class: 'backoffice-users' } }\n            ]\"\n            (event)=\"itemEvent($event)\"\n        >\n        </item-display>\n    </main>\n</div>\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { ROUTES } from './domains.routes';\n\nimport { DomainsComponent } from './domains.component';\nimport { DomainApplicationsComponent } from './domain-applications/domain-applications.component';\nimport { DomainAuthenticationComponent } from './domain-authentication/domain-authentication.component';\nimport { DomainUsersComponent } from './domain-users/domain-users.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n    declarations: [\n        DomainsComponent,\n        DomainApplicationsComponent,\n        DomainAuthenticationComponent,\n        DomainUsersComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule\n    ]\n})\nexport class AppDomainsModule { }\n","\nimport { Routes } from '@angular/router';\nimport { DomainsComponent } from './domains.component';\nimport { DomainApplicationsComponent } from './domain-applications/domain-applications.component';\nimport { DomainAuthenticationComponent } from './domain-authentication/domain-authentication.component';\nimport { DomainUsersComponent } from './domain-users/domain-users.component';\n\nexport const ROUTES: Routes = [\n    {\n        path: ':id', component: DomainsComponent, children: [\n            { path: 'applications', component: DomainApplicationsComponent },\n            { path: 'authentication', component: DomainAuthenticationComponent },\n            { path: 'users', component: DomainUsersComponent },\n            { path: '**', redirectTo: 'applications' },\n        ]\n    },\n    { path: '**',      redirectTo: '-' },\n];\n"],"sourceRoot":"webpack:///"}