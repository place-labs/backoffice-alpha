{"version":3,"sources":["webpack:///node_modules/marked/src/InlineLexer.js","webpack:///node_modules/marked/src/Lexer.js","webpack:///node_modules/marked/src/Parser.js","webpack:///node_modules/marked/src/Renderer.js","webpack:///node_modules/marked/src/Slugger.js","webpack:///node_modules/marked/src/TextRenderer.js","webpack:///node_modules/marked/src/defaults.js","webpack:///node_modules/marked/src/helpers.js","webpack:///node_modules/marked/src/marked.js","webpack:///node_modules/marked/src/rules.js","webpack:///src/app/shell/zones/zone-about/zone-about.component.ts","webpack:///src/app/shell/zones/zone-about/zone-about.template.html","webpack:///src/app/shell/zones/zone-children/zone-children.component.ts","webpack:///src/app/shell/zones/zone-children/zone-children.template.html","webpack:///src/app/shell/zones/zone-metadata/zone-metadata.component.ts","webpack:///src/app/shell/zones/zone-metadata/zone-metadata.template.html","webpack:///src/app/shell/zones/zone-systems/zone-systems.component.ts","webpack:///src/app/shell/zones/zone-systems/zone-systems.template.html","webpack:///src/app/shell/zones/zone-triggers/zone-triggers.component.ts","webpack:///src/app/shell/zones/zone-triggers/zone-triggers.template.html","webpack:///src/app/shell/zones/zones.component.ts","webpack:///src/app/shell/zones/zones.template.html","webpack:///src/app/shell/zones/zones.module.ts","webpack:///src/app/shell/zones/zones.routes.ts"],"names":["Renderer","defaults","inline","findClosingBracket","escape","module","exports","links","options","rules","normal","renderer","Error","pedantic","gfm","breaks","src","out","link","text","href","title","cap","prevCapZero","exec","substring","length","tag","inLink","test","inRawBlock","html","sanitize","sanitizer","lastParenIndex","start","indexOf","linkLen","trim","slice","replace","outputLink","InlineLexer","escapes","reflink","nolink","toLowerCase","charAt","strong","output","em","code","codespan","br","del","autolink","mangle","url","_backpedal","smartypants","charCodeAt","image","l","i","ch","Math","random","toString","_escapes","block","rtrim","splitCells","tokens","Object","create","token","top","next","loose","bull","b","item","listStart","listItems","t","space","isordered","istask","ischecked","newline","push","type","lastToken","trimRight","codeBlockStyle","fences","lang","heading","depth","nptable","header","align","split","cells","hr","blockquote","list","ordered","match","RegExp","bullet","smartLists","join","undefined","task","checked","pre","def","table","lheading","paragraph","lexer","Lexer","lex","Slugger","TextRenderer","merge","unescape","slugger","inlineText","reverse","tok","pop","body","peek","escaped","row","cell","j","tablecell","tablerow","nextToken","checkbox","parseText","listitem","errMsg","silent","console","log","parser","Parser","parse","cleanUrl","infostring","highlight","langPrefix","quote","level","raw","headerIds","headerPrefix","slug","xhtml","startatt","content","flags","baseUrl","seen","value","hasOwnProperty","originalSlug","getDefaults","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","encode","unescapeTest","_","n","String","fromCharCode","parseInt","caret","edit","regex","opt","source","obj","name","val","getRegex","nonWordAndColonTest","originIndependentUrl","base","prot","decodeURIComponent","e","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","relativeBase","noopTest","target","key","arguments","prototype","call","tableRow","count","offset","str","curr","splice","c","invert","suffLen","currChar","substr","checkSanitizeDeprecation","warn","marked","callback","pending","done","err","message","setOptions","inlineLexer","_paragraph","_label","_title","_tag","_comment","_punctuation","_scheme","_email","_attribute","_href","_extended_email","ZoneAboutComponent","_service","subscription","listen","subscribe","ngOnChanges","changes","loadSystems","Systems","query","zone_id","id","limit","then","system_list","get","description","tags","selector","templateUrl","styleUrls","search$","ZoneChildrenComponent","zone_list","search_results$","pipe","loading","Zones","q","parent","error","search","search_str","filter","email","loadChildren","$event","stopPropagation","ZoneMetadataComponent","_dialog","metadata","form_map","edited","name_list","control","loadMetadata","floor","details","generateForms","field","form","open","maxWidth","data","ref","icon","componentInstance","event","reason","deleteMetadata","notifySuccess","prop","notifyError","response","close","markAllAsTouched","valid","updateMetadata","JSON","index","findIndex","stringify","controls","forEach","group","required","validateName","map","valueChanges","listMetadata","keys","ZoneSystemsComponent","module_id","ZoneTriggersComponent","model","loadZoneTriggers","Triggers","triggers","trigger","storePendingChange","save","unsub","height","width","service_name","addTrigger","afterClosed","concat","selectTriggerToAdd","ZonesComponent","_route","_router","service","system_count","last_total","tquery","trigger_count","cquery","child_count","metadata_count","copy","modal_ref","maxHeight","Domains","navigate","set","sidebarEvent","itemEvent","AppZonesModule","forChild","declarations","imports","ROUTES","path","component","children","redirectTo"],"mappings":"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","file":"shell-zones-zones-module-es5.js","sourcesContent":["const Renderer = require('./Renderer.js');\nconst { defaults } = require('./defaults.js');\nconst { inline } = require('./rules.js');\nconst {\n  findClosingBracket,\n  escape\n} = require('./helpers.js');\n\n/**\n * Inline Lexer & Compiler\n */\nmodule.exports = class InlineLexer {\n  constructor(links, options) {\n    this.options = options || defaults;\n    this.links = links;\n    this.rules = inline.normal;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n\n    if (!this.links) {\n      throw new Error('Tokens array requires a `links` property.');\n    }\n\n    if (this.options.pedantic) {\n      this.rules = inline.pedantic;\n    } else if (this.options.gfm) {\n      if (this.options.breaks) {\n        this.rules = inline.breaks;\n      } else {\n        this.rules = inline.gfm;\n      }\n    }\n  }\n\n  /**\n   * Expose Inline Rules\n   */\n  static get rules() {\n    return inline;\n  }\n\n  /**\n   * Static Lexing/Compiling Method\n   */\n  static output(src, links, options) {\n    const inline = new InlineLexer(links, options);\n    return inline.output(src);\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  output(src) {\n    let out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n    while (src) {\n      // escape\n      if (cap = this.rules.escape.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += escape(cap[1]);\n        continue;\n      }\n\n      // tag\n      if (cap = this.rules.tag.exec(src)) {\n        if (!this.inLink && /^<a /i.test(cap[0])) {\n          this.inLink = true;\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.inLink = false;\n        }\n        if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = true;\n        } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = false;\n        }\n\n        src = src.substring(cap[0].length);\n        out += this.renderer.html(this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]);\n        continue;\n      }\n\n      // link\n      if (cap = this.rules.link.exec(src)) {\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n        src = src.substring(cap[0].length);\n        this.inLink = true;\n        href = cap[2];\n        if (this.options.pedantic) {\n          link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          } else {\n            title = '';\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n        href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n        out += this.outputLink(cap, {\n          href: InlineLexer.escapes(href),\n          title: InlineLexer.escapes(title)\n        });\n        this.inLink = false;\n        continue;\n      }\n\n      // reflink, nolink\n      if ((cap = this.rules.reflink.exec(src))\n          || (cap = this.rules.nolink.exec(src))) {\n        src = src.substring(cap[0].length);\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = this.links[link.toLowerCase()];\n        if (!link || !link.href) {\n          out += cap[0].charAt(0);\n          src = cap[0].substring(1) + src;\n          continue;\n        }\n        this.inLink = true;\n        out += this.outputLink(cap, link);\n        this.inLink = false;\n        continue;\n      }\n\n      // strong\n      if (cap = this.rules.strong.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      }\n\n      // em\n      if (cap = this.rules.em.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.codespan(escape(cap[2].trim(), true));\n        continue;\n      }\n\n      // br\n      if (cap = this.rules.br.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.br();\n        continue;\n      }\n\n      // del (gfm)\n      if (cap = this.rules.del.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.del(this.output(cap[1]));\n        continue;\n      }\n\n      // autolink\n      if (cap = this.rules.autolink.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[2] === '@') {\n          text = escape(this.mangle(cap[1]));\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\n        if (cap[2] === '@') {\n          text = escape(cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n          text = escape(cap[0]);\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n        src = src.substring(cap[0].length);\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (this.inRawBlock) {\n          out += this.renderer.text(this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]);\n        } else {\n          out += this.renderer.text(escape(this.smartypants(cap[0])));\n        }\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return out;\n  }\n\n  static escapes(text) {\n    return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n  }\n\n  /**\n   * Compile Link\n   */\n  outputLink(cap, link) {\n    const href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n    return cap[0].charAt(0) !== '!'\n      ? this.renderer.link(href, title, this.output(cap[1]))\n      : this.renderer.image(href, title, escape(cap[1]));\n  }\n\n  /**\n   * Smartypants Transformations\n   */\n  smartypants(text) {\n    if (!this.options.smartypants) return text;\n    return text\n      // em-dashes\n      .replace(/---/g, '\\u2014')\n      // en-dashes\n      .replace(/--/g, '\\u2013')\n      // opening singles\n      .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n      // closing singles & apostrophes\n      .replace(/'/g, '\\u2019')\n      // opening doubles\n      .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n      // closing doubles\n      .replace(/\"/g, '\\u201d')\n      // ellipses\n      .replace(/\\.{3}/g, '\\u2026');\n  }\n\n  /**\n   * Mangle Links\n   */\n  mangle(text) {\n    if (!this.options.mangle) return text;\n    const l = text.length;\n    let out = '',\n      i = 0,\n      ch;\n\n    for (; i < l; i++) {\n      ch = text.charCodeAt(i);\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n};\n","const { defaults } = require('./defaults.js');\nconst { block } = require('./rules.js');\nconst {\n  rtrim,\n  splitCells,\n  escape\n} = require('./helpers.js');\n\n/**\n * Block Lexer\n */\nmodule.exports = class Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.rules = block.normal;\n\n    if (this.options.pedantic) {\n      this.rules = block.pedantic;\n    } else if (this.options.gfm) {\n      this.rules = block.gfm;\n    }\n  }\n\n  /**\n   * Expose Block Rules\n   */\n  static get rules() {\n    return block;\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  };\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n')\n      .replace(/\\t/g, '    ');\n\n    return this.token(src, true);\n  };\n\n  /**\n   * Lexing\n   */\n  token(src, top) {\n    src = src.replace(/^ +$/gm, '');\n    let next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n    while (src) {\n      // newline\n      if (cap = this.rules.newline.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[0].length > 1) {\n          this.tokens.push({\n            type: 'space'\n          });\n        }\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        const lastToken = this.tokens[this.tokens.length - 1];\n        src = src.substring(cap[0].length);\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && lastToken.type === 'paragraph') {\n          lastToken.text += '\\n' + cap[0].trimRight();\n        } else {\n          cap = cap[0].replace(/^ {4}/gm, '');\n          this.tokens.push({\n            type: 'code',\n            codeBlockStyle: 'indented',\n            text: !this.options.pedantic\n              ? rtrim(cap, '\\n')\n              : cap\n          });\n        }\n        continue;\n      }\n\n      // fences\n      if (cap = this.rules.fences.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'code',\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: cap[3] || ''\n        });\n        continue;\n      }\n\n      // heading\n      if (cap = this.rules.heading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[1].length,\n          text: cap[2]\n        });\n        continue;\n      }\n\n      // table no leading pipe (gfm)\n      if (cap = this.rules.nptable.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(item.cells[i], item.header.length);\n          }\n\n          this.tokens.push(item);\n\n          continue;\n        }\n      }\n\n      // hr\n      if (cap = this.rules.hr.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'hr'\n        });\n        continue;\n      }\n\n      // blockquote\n      if (cap = this.rules.blockquote.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        this.tokens.push({\n          type: 'blockquote_start'\n        });\n\n        cap = cap[0].replace(/^ *> ?/gm, '');\n\n        // Pass `top` to keep the current\n        // \"toplevel\" state. This is exactly\n        // how markdown.pl works.\n        this.token(cap, top);\n\n        this.tokens.push({\n          type: 'blockquote_end'\n        });\n\n        continue;\n      }\n\n      // list\n      if (cap = this.rules.list.exec(src)) {\n        src = src.substring(cap[0].length);\n        bull = cap[2];\n        isordered = bull.length > 1;\n\n        listStart = {\n          type: 'list_start',\n          ordered: isordered,\n          start: isordered ? +bull : '',\n          loose: false\n        };\n\n        this.tokens.push(listStart);\n\n        // Get each top-level item.\n        cap = cap[0].match(this.rules.item);\n\n        listItems = [];\n        next = false;\n        l = cap.length;\n        i = 0;\n\n        for (; i < l; i++) {\n          item = cap[i];\n\n          // Remove the list item's bullet\n          // so it is seen as the next token.\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\n\n          // Outdent whatever the\n          // list item contains. Hacky.\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic\n              ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n              : item.replace(/^ {1,4}/gm, '');\n          }\n\n          // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n          if (i !== l - 1) {\n            b = block.bullet.exec(cap[i + 1])[0];\n            if (bull.length > 1 ? b.length === 1\n              : (b.length > 1 || (this.options.smartLists && b !== bull))) {\n              src = cap.slice(i + 1).join('\\n') + src;\n              i = l - 1;\n            }\n          }\n\n          // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            listStart.loose = true;\n          }\n\n          // Check for task list items\n          istask = /^\\[[ xX]\\] /.test(item);\n          ischecked = undefined;\n          if (istask) {\n            ischecked = item[1] !== ' ';\n            item = item.replace(/^\\[[ xX]\\] +/, '');\n          }\n\n          t = {\n            type: 'list_item_start',\n            task: istask,\n            checked: ischecked,\n            loose: loose\n          };\n\n          listItems.push(t);\n          this.tokens.push(t);\n\n          // Recurse.\n          this.token(item, false);\n\n          this.tokens.push({\n            type: 'list_item_end'\n          });\n        }\n\n        if (listStart.loose) {\n          l = listItems.length;\n          i = 0;\n          for (; i < l; i++) {\n            listItems[i].loose = true;\n          }\n        }\n\n        this.tokens.push({\n          type: 'list_end'\n        });\n\n        continue;\n      }\n\n      // html\n      if (cap = this.rules.html.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: this.options.sanitize\n            ? 'paragraph'\n            : 'html',\n          pre: !this.options.sanitizer\n            && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]\n        });\n        continue;\n      }\n\n      // def\n      if (top && (cap = this.rules.def.exec(src))) {\n        src = src.substring(cap[0].length);\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        if (!this.tokens.links[tag]) {\n          this.tokens.links[tag] = {\n            href: cap[2],\n            title: cap[3]\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (cap = this.rules.table.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(\n              item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n              item.header.length);\n          }\n\n          this.tokens.push(item);\n\n          continue;\n        }\n      }\n\n      // lheading\n      if (cap = this.rules.lheading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        });\n        continue;\n      }\n\n      // top-level paragraph\n      if (top && (cap = this.rules.paragraph.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'paragraph',\n          text: cap[1].charAt(cap[1].length - 1) === '\\n'\n            ? cap[1].slice(0, -1)\n            : cap[1]\n        });\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        // Top-level should never reach here.\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'text',\n          text: cap[0]\n        });\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return this.tokens;\n  };\n};\n","const Renderer = require('./Renderer.js');\nconst Slugger = require('./Slugger.js');\nconst InlineLexer = require('./InlineLexer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst { defaults } = require('./defaults.js');\nconst {\n  merge,\n  unescape\n} = require('./helpers.js');\n\n/**\n * Parsing & Compiling\n */\nmodule.exports = class Parser {\n  constructor(options) {\n    this.tokens = [];\n    this.token = null;\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  };\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens) {\n    this.inline = new InlineLexer(tokens.links, this.options);\n    // use an InlineLexer with a TextRenderer to extract pure text\n    this.inlineText = new InlineLexer(\n      tokens.links,\n      merge({}, this.options, { renderer: new TextRenderer() })\n    );\n    this.tokens = tokens.reverse();\n\n    let out = '';\n    while (this.next()) {\n      out += this.tok();\n    }\n\n    return out;\n  };\n\n  /**\n   * Next Token\n   */\n  next() {\n    this.token = this.tokens.pop();\n    return this.token;\n  };\n\n  /**\n   * Preview Next Token\n   */\n  peek() {\n    return this.tokens[this.tokens.length - 1] || 0;\n  };\n\n  /**\n   * Parse Text Tokens\n   */\n  parseText() {\n    let body = this.token.text;\n\n    while (this.peek().type === 'text') {\n      body += '\\n' + this.next().text;\n    }\n\n    return this.inline.output(body);\n  };\n\n  /**\n   * Parse Current Token\n   */\n  tok() {\n    let body = '';\n    switch (this.token.type) {\n      case 'space': {\n        return '';\n      }\n      case 'hr': {\n        return this.renderer.hr();\n      }\n      case 'heading': {\n        return this.renderer.heading(\n          this.inline.output(this.token.text),\n          this.token.depth,\n          unescape(this.inlineText.output(this.token.text)),\n          this.slugger);\n      }\n      case 'code': {\n        return this.renderer.code(this.token.text,\n          this.token.lang,\n          this.token.escaped);\n      }\n      case 'table': {\n        let header = '',\n          i,\n          row,\n          cell,\n          j;\n\n        // header\n        cell = '';\n        for (i = 0; i < this.token.header.length; i++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(this.token.header[i]),\n            { header: true, align: this.token.align[i] }\n          );\n        }\n        header += this.renderer.tablerow(cell);\n\n        for (i = 0; i < this.token.cells.length; i++) {\n          row = this.token.cells[i];\n\n          cell = '';\n          for (j = 0; j < row.length; j++) {\n            cell += this.renderer.tablecell(\n              this.inline.output(row[j]),\n              { header: false, align: this.token.align[j] }\n            );\n          }\n\n          body += this.renderer.tablerow(cell);\n        }\n        return this.renderer.table(header, body);\n      }\n      case 'blockquote_start': {\n        body = '';\n\n        while (this.next().type !== 'blockquote_end') {\n          body += this.tok();\n        }\n\n        return this.renderer.blockquote(body);\n      }\n      case 'list_start': {\n        body = '';\n        const ordered = this.token.ordered,\n          start = this.token.start;\n\n        while (this.next().type !== 'list_end') {\n          body += this.tok();\n        }\n\n        return this.renderer.list(body, ordered, start);\n      }\n      case 'list_item_start': {\n        body = '';\n        const loose = this.token.loose;\n        const checked = this.token.checked;\n        const task = this.token.task;\n\n        if (this.token.task) {\n          if (loose) {\n            if (this.peek().type === 'text') {\n              const nextToken = this.peek();\n              nextToken.text = this.renderer.checkbox(checked) + ' ' + nextToken.text;\n            } else {\n              this.tokens.push({\n                type: 'text',\n                text: this.renderer.checkbox(checked)\n              });\n            }\n          } else {\n            body += this.renderer.checkbox(checked);\n          }\n        }\n\n        while (this.next().type !== 'list_item_end') {\n          body += !loose && this.token.type === 'text'\n            ? this.parseText()\n            : this.tok();\n        }\n        return this.renderer.listitem(body, task, checked);\n      }\n      case 'html': {\n        // TODO parse inline content if parameter markdown=1\n        return this.renderer.html(this.token.text);\n      }\n      case 'paragraph': {\n        return this.renderer.paragraph(this.inline.output(this.token.text));\n      }\n      case 'text': {\n        return this.renderer.paragraph(this.parseText());\n      }\n      default: {\n        const errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n        if (this.options.silent) {\n          console.log(errMsg);\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n  };\n};\n","const { defaults } = require('./defaults.js');\nconst {\n  cleanUrl,\n  escape\n} = require('./helpers.js');\n\n/**\n * Renderer\n */\nmodule.exports = class Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  };\n\n  blockquote(quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  };\n\n  html(html) {\n    return html;\n  };\n\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      return '<h'\n        + level\n        + ' id=\"'\n        + this.options.headerPrefix\n        + slugger.slug(raw)\n        + '\">'\n        + text\n        + '</h'\n        + level\n        + '>\\n';\n    }\n    // ignore IDs\n    return '<h' + level + '>' + text + '</h' + level + '>\\n';\n  };\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  };\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  };\n\n  listitem(text) {\n    return '<li>' + text + '</li>\\n';\n  };\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  };\n\n  paragraph(text) {\n    return '<p>' + text + '</p>\\n';\n  };\n\n  table(header, body) {\n    if (body) body = '<tbody>' + body + '</tbody>';\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  };\n\n  tablerow(content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  };\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? '<' + type + ' align=\"' + flags.align + '\">'\n      : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  };\n\n  // span level renderer\n  strong(text) {\n    return '<strong>' + text + '</strong>';\n  };\n\n  em(text) {\n    return '<em>' + text + '</em>';\n  };\n\n  codespan(text) {\n    return '<code>' + text + '</code>';\n  };\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  };\n\n  del(text) {\n    return '<del>' + text + '</del>';\n  };\n\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  };\n\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  };\n\n  text(text) {\n    return text;\n  };\n};\n","/**\n * Slugger generates header id\n */\nmodule.exports = class Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * Convert string to unique id\n   */\n  slug(value) {\n    let slug = value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n\n    if (this.seen.hasOwnProperty(slug)) {\n      const originalSlug = slug;\n      do {\n        this.seen[originalSlug]++;\n        slug = originalSlug + '-' + this.seen[originalSlug];\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    this.seen[slug] = 0;\n\n    return slug;\n  };\n};\n","/**\n * TextRenderer\n * returns only the textual part of the token\n */\nmodule.exports = class TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n};\n","function getDefaults() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    xhtml: false\n  };\n}\n\nfunction changeDefaults(newDefaults) {\n  module.exports.defaults = newDefaults;\n}\n\nmodule.exports = {\n  defaults: getDefaults(),\n  getDefaults,\n  changeDefaults\n};\n","/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\nmodule.exports = {\n  escape,\n  unescape,\n  edit,\n  cleanUrl,\n  resolveUrl,\n  noopTest,\n  merge,\n  splitCells,\n  rtrim,\n  findClosingBracket,\n  checkSanitizeDeprecation\n};\n","const Lexer = require('./Lexer.js');\nconst Parser = require('./Parser.js');\nconst Renderer = require('./Renderer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst InlineLexer = require('./InlineLexer.js');\nconst Slugger = require('./Slugger.js');\nconst {\n  merge,\n  checkSanitizeDeprecation,\n  escape\n} = require('./helpers.js');\nconst {\n  getDefaults,\n  changeDefaults,\n  defaults\n} = require('./defaults.js');\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    const highlight = opt.highlight;\n    let tokens,\n      pending,\n      i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    const done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      let out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\nmodule.exports = marked;\n","const {\n  noopTest,\n  edit,\n  merge\n} = require('./helpers.js');\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  nptable: noopTest,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' *([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)', // Cells\n  table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' *\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.nptable = edit(block.gfm.nptable)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*<\\[])\\*(?!\\*)|^_([^\\s<][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_<][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s<\"][\\s\\S]*?[^\\s\\*])\\*(?!\\*|[^\\spunctuation])|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n};\n\n// list of punctuation marks from common mark spec\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\ninline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\nmodule.exports = {\n  block,\n  inline\n};\n","\nimport { Component, Input, SimpleChanges, OnInit, OnChanges, SimpleChange } from '@angular/core';\nimport { EngineZone, EngineSystem, EncryptionLevel } from '@placeos/ts-client';\n\nimport { BaseDirective } from '../../../shared/globals/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as marked from 'marked';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'zone-about',\n    templateUrl: './zone-about.template.html',\n    styleUrls: ['./zone-about.styles.scss']\n})\nexport class ZoneAboutComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Item to render */\n    @Input() public item: EngineZone;\n    /** List of systems associated with the zone */\n    public system_list: EngineSystem[];\n    /** Selected system */\n    public active_system: EngineSystem;\n\n    /** Whether application is loading settings for item */\n    public get loading_settings(): boolean {\n        return this._service.get('loading_settings');\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'item',\n            this._service.listen('BACKOFFICE.active_item').subscribe(item => {\n                this.item = item;\n                this.ngOnChanges({ item: new SimpleChange(null, this.item, false) });\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.item && this.item) {\n            this.loadSystems();\n        }\n    }\n\n    public get parsed_description() {\n        if (!this.item) { return ''; }\n        return marked(this.item.description);\n    }\n\n    public loadSystems(offset: number = 0) {\n        this._service.Systems.query({ offset, zone_id: this.item.id, limit: 500 }).then((list) => {\n            this.system_list = list;\n        });\n    }\n\n    /** List of tags associated with the zone */\n    public get tag_list(): string[] {\n        return this.item ? this.item.tags : [];\n    }\n\n}\n","<div class=\"container\" *ngIf=\"item\">\n    <header *ngIf=\"system_list && system_list.length\"  i18n=\"@@execHeader\">Execute Command</header>\n    <section *ngIf=\"system_list && system_list.length\">\n        <mat-form-field appearance=\"outline\">\n            <mat-select [(ngModel)]=\"active_system\" placeholder=\"Select system\">\n                <mat-option *ngFor=\"let system of system_list\" [value]=\"system\">\n                {{system.name}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <system-exec-field *ngIf=\"active_system && active_system.id\" [system]=\"active_system\"></system-exec-field>\n    </section>\n    <section class=\"details\">\n        <div class=\"field\" *ngIf=\"item.location\">\n            <label i18n=\"@@zoneLocationLabel\">Location:</label>\n            <div class=\"value\">{{item.location}}</div>\n        </div>\n        <div class=\"field\" *ngIf=\"item.code\">\n            <label i18n=\"@@zoneCodeLabel\">Code:</label>\n            <div class=\"value\">{{item.code}}</div>\n        </div>\n        <div class=\"field\" *ngIf=\"item.type\">\n            <label i18n=\"@@zoneTypeLabel\">Type:&nbsp;</label>\n            <div class=\"value\">{{item.type}}</div>\n        </div>\n        <div class=\"field\" *ngIf=\"item.count\">\n            <label i18n=\"@@zoneCountLabel\">Count:</label>\n            <div class=\"value\">{{item.count}}</div>\n        </div>\n        <div class=\"field\" *ngIf=\"item.capacity\">\n            <label i18n=\"@@zoneCapacityLabel\">Capacity:</label>\n            <div class=\"value\">{{item.capacity}}</div>\n        </div>\n        <div class=\"field\" *ngIf=\"item.map_id\">\n            <label i18n=\"@@zoneMapLabel\">Map:</label>\n            <div class=\"value\">\n                <a [href]=\"item.map_id\">{{ item.map_id }}</a>\n            </div>\n        </div>\n    </section>\n    <header *ngIf=\"item.description\" i18n=\"@@descriptionLabel\">Description</header>\n    <section class=\"description\" *ngIf=\"item.description\" [innerHTML]=\"parsed_description\"></section>\n    <section class=\"tags\" *ngIf=\"item && tag_list\">\n        <label for=\"tags\" i18n=\"@@zoneTagsLabel\">Tags:</label>\n        <div class=\"value\" *ngIf=\"tag_list && tag_list.length; else empty_tag_state\">\n            <mat-chip-list name=\"tags\">\n                <mat-chip *ngFor=\"let tag of tag_list\">{{ tag }}</mat-chip>\n            </mat-chip-list>\n        </div>\n    </section>\n    <hr />\n    <header class=\"settings\" i18n=\"@@settingsLabel\">Settings</header>\n    <section *ngIf=\"!loading_settings; else load_state\">\n        <a-settings-form [merge]=\"true\" [id]=\"item.id\" [settings]=\"item.settings\"></a-settings-form>\n    </section>\n</div>\n<ng-template #load_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"48\"></mat-spinner>\n        </div>\n        <div class=\"text\" i18n=\"@@zoneLoadingLabel\">Loading zone settings...</div>\n    </div>\n</ng-template>\n<ng-template #empty_tag_state>\n    <div class=\"value padded\" i18n=\"@@zoneTagsEmpty\">&lt;No Tags&gt;</div>\n</ng-template>\n","import { Component, Input, OnChanges, SimpleChange, OnInit } from '@angular/core';\nimport { EngineZone } from '@placeos/ts-client';\nimport { Observable, Subject, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map } from 'rxjs/operators';\n\nimport { BaseDirective } from '../../../shared/globals/base.directive';\nimport { ApplicationService } from '../../../services/app.service';\n\n@Component({\n    selector: 'zone-children',\n    templateUrl: './zone-children.template.html',\n    styleUrls: ['./zone-children.styles.scss']\n})\nexport class ZoneChildrenComponent extends BaseDirective implements OnChanges, OnInit {\n    @Input() public item: EngineZone;\n    /** List of children associated with the zone */\n    public zone_list: EngineZone[] = [];\n    /** Filter string for the children */\n    public search_str: string;\n    /** List of items from an API search */\n    public search_results$: Observable<EngineZone[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** Whether children are being loaded */\n    public loading: boolean;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'item',\n            this._service.listen('BACKOFFICE.active_item').subscribe(item => {\n                this.item = item;\n                this.ngOnChanges({ item: new SimpleChange(null, this.item, false) });\n            })\n        );\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.loading = true;\n                return this._service.Zones.query({\n                    q: query,\n                    parent: this.item.id,\n                    offset: 0\n                });\n            }),\n            catchError(err => {\n                console.error(err);\n                return of([]);\n            }),\n            map((list: EngineZone[]) => {\n                this.loading = false;\n                const search = this.search_str.toLowerCase();\n                return list.filter(\n                    (item: any) =>\n                        item.name.toLowerCase().indexOf(search) >= 0 ||\n                        (item.email || '').toLowerCase().indexOf(search) >= 0\n                );\n            })\n        );\n        this.search$.next('');\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => (this.zone_list = list))\n        );\n    }\n\n    public ngOnChanges(changes: any) {\n        if (changes.item && this.item) {\n            this.loadChildren();\n        }\n    }\n\n    public loadChildren(offset: number = 0) {\n        this._service.Zones.query({ offset, parent: this.item.id, limit: 500 }).then(\n            list => (this.zone_list = list)\n        );\n    }\n}\n","<div class=\"container\" *ngIf=\"item\">\n    <div class=\"btn\">\n        <mat-form-field appearance=\"outline\">\n            <div class=\"prefix\" matPrefix>\n                <app-icon [icon]=\"{ class: 'backoffice-magnifying-glass' }\"></app-icon>\n            </div>\n            <input\n                matInput\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"search$.next($event)\"\n                name=\"search-filter\"\n                placeholder=\"Filter Zones\"\n                i18n-placeholder=\"@@zoneChildrenTableFilter\"\n            />\n        </mat-form-field>\n    </div>\n    <div class=\"list\" *ngIf=\"zone_list && zone_list.length > 0; else empty_state\">\n        <table>\n            <thead>\n                <td class=\"flex\" i18n=\"@@zoneChildrenTableName\">Name</td>\n                <td class=\"description\" i18n=\"@@descriptionLabel\">Description</td>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let item of zone_list\">\n                    <td class=\"flex\">\n                        <a\n                            [routerLink]=\"['/zone', item.id]\"\n                            routerLinkActive=\"router-link-active\"\n                            [matTooltip]=\"item.id\"\n                        >\n                            {{item.name}} (<span class=\"id\">{{item.id}}</span>)\n                        </a>\n                    </td>\n                    <td class=\"description\">{{item.description}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"text\" i18n=\"@@zoneChildrenTableEmpty\">No child zones found</div>\n    </div>\n</ng-template>\n","import { Component, Input, OnChanges, SimpleChange, OnInit } from '@angular/core';\nimport { EngineZone, EngineZoneMetadata } from '@placeos/ts-client';\n\nimport { BaseDirective } from '../../../shared/globals/base.directive';\nimport { ApplicationService } from '../../../services/app.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { validateJSONString } from 'src/app/shared/utilities/validation.utilities';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MetadataDetailsModalComponent } from 'src/app/overlays/metadata-details-modal/metadata-details-modal.component';\nimport {\n    ConfirmModalComponent,\n    CONFIRM_METADATA\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\n\n@Component({\n    selector: 'zone-metadata',\n    templateUrl: './zone-metadata.template.html',\n    styleUrls: ['./zone-metadata.styles.scss']\n})\nexport class ZoneMetadataComponent extends BaseDirective implements OnChanges, OnInit {\n    @Input() public item: EngineZone;\n    /** List of metadata associated with the zone */\n    public metadata: EngineZoneMetadata[] = [];\n    /** Map of form field groups to metadata fields */\n    public form_map: HashMap<FormGroup> = {};\n    /** Map of metadata fields to whether they have been edited */\n    public edited: HashMap<boolean> = {};\n    /** Map of metadata properties to whether they are saving */\n    public loading: HashMap<boolean> = {};\n\n    private validateName(name_list: string[]) {\n        return (control: AbstractControl) => {\n            return name_list.indexOf(control.value) >= 0 ? { name: true } : null;\n        };\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'item',\n            this._service.listen('BACKOFFICE.active_item').subscribe(item => {\n                this.item = item;\n                this.ngOnChanges({ item: new SimpleChange(null, this.item, false) });\n            })\n        );\n    }\n\n    public ngOnChanges(changes: any) {\n        if (changes.item && this.item) {\n            this.loadMetadata();\n        }\n    }\n\n    public newMetadata() {\n        this.metadata.push({\n            name: `new_field_${Math.floor(Math.random() * 999_999_999)}`,\n            description: '',\n            new: true,\n            details: {}\n        } as any);\n        this.generateForms();\n    }\n\n    public editMetadataDetails(field: EngineZoneMetadata) {\n        const form = this.form_map[field.name];\n        this._dialog.open(MetadataDetailsModalComponent, {\n            maxWidth: '95vw',\n            data: {\n                form\n            }\n        });\n    }\n\n    /**\n     * Delete the given metadata field\n     * @param field Name of the field to remove\n     */\n    public deleteMetadata(field: string) {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: `Kill process`,\n                content: `\n                    <p>Are you sure you want delete the metadata property \"${field}\"?</p>\n                `,\n                icon: { type: 'icon', class: 'backoffice-trash' }\n            }\n        });\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe(event => {\n                if (event.reason === 'done') {\n                    this._service.Zones.deleteMetadata(this.item.id, { name: field }).then(\n                        () => {\n                            this._service.notifySuccess(\n                                `Successfully removed \"${field}\" metadata.`\n                            );\n                            this.metadata = this.metadata.filter(prop => prop.name !== field);\n                            this.generateForms();\n                        },\n                        err =>\n                            this._service.notifyError(\n                                `Error removing old \"${field}\" metadata. Error: ${err.response || err.message ||\n                                    err}`\n                            )\n                    );\n                }\n                ref.close();\n            })\n        );\n    }\n\n    public saveMetadata(field: EngineZoneMetadata) {\n        const form = this.form_map[field.name];\n        form.markAllAsTouched();\n        if (form.valid) {\n            const value = form.value;\n            this.loading[field.name] = true;\n            this._service.Zones.updateMetadata(this.item.id, {\n                ...value,\n                details: JSON.parse(value.details)\n            }).then(\n                (item: EngineZoneMetadata) => {\n                    this.loading[field.name] = false;\n                    const index = this.metadata.findIndex(i => i.name === field.name);\n                    this.edited[field.name] = false;\n                    if (field.name !== item.name) {\n                        this._service.Zones.deleteMetadata(this.item.id, field).catch(err =>\n                            this._service.notifyError(\n                                `Error removing old \"${\n                                    field.name\n                                }\" metadata. Error: ${JSON.stringify(err.response || err.message || err)}`\n                            )\n                        );\n                    }\n                    if (index >= 0) {\n                        this.metadata.splice(index, 1, { ...item, new: false } as any);\n                    }\n                    this._service.notifySuccess(`Saved \"${value.name}\" metadata.`);\n                    this.generateForms();\n                },\n                err => {\n                    this.loading[field.name] = false;\n                    this._service.notifyError(\n                        `Error saving \"${value.name}\" metadata. Error: ${JSON.stringify(err.response || err.message || err)}`\n                    );\n                }\n            );\n        } else {\n            this._service.notifyError(`JSON for property \"${form.controls.name.value}\" is invalid`);\n        }\n    }\n\n    private generateForms() {\n        delete this.form_map;\n        this.form_map = {};\n        this.metadata.forEach(group => {\n            this.form_map[group.name] = new FormGroup({\n                name: new FormControl(group.name, [\n                    Validators.required,\n                    this.validateName(\n                        this.metadata.filter(i => i.name !== group.name).map(i => i.name)\n                    )\n                ]),\n                description: new FormControl(group.name),\n                details: new FormControl(JSON.stringify(group.details || {}, undefined, 4), [\n                    Validators.required,\n                    validateJSONString\n                ])\n            });\n            this.subscription(\n                `${group.name}_name`,\n                this.form_map[group.name].controls.name.valueChanges.subscribe(\n                    () => (this.edited[group.name] = true)\n                )\n            );\n            this.subscription(\n                `${group.name}_description`,\n                this.form_map[group.name].controls.description.valueChanges.subscribe(\n                    () => (this.edited[group.name] = true)\n                )\n            );\n            this.subscription(\n                `${group.name}_details`,\n                this.form_map[group.name].controls.details.valueChanges.subscribe(\n                    () => (this.edited[group.name] = true)\n                )\n            );\n        });\n    }\n\n    private loadMetadata() {\n        this._service.Zones.listMetadata(this.item.id).then(map => {\n            this.metadata = Object.keys(map).map(key => map[key]);\n            this.generateForms();\n        });\n    }\n}\n","<div class=\"container\" *ngIf=\"item\">\n    <button mat-button (tapped)=\"newMetadata()\" i18n=\"@@addMetadataAction\">Add new Metadata Field</button>\n    <div class=\"list\" *ngIf=\"metadata && metadata.length > 0; else empty_state\">\n        <mat-accordion>\n            <ng-container *ngFor=\"let item of metadata\">\n                <mat-expansion-panel [class.no-padding]=\"true\" *ngIf=\"form_map[item.name]\" [formGroup]=\"form_map[item.name]\">\n                    <mat-expansion-panel-header>\n                        <mat-panel-title>\n                            <div\n                                class=\"text\"\n                                [matTooltip]=\"form_map[item.name].controls.description.value\"\n                                (click)=\"editMetadataDetails(item); $event.stopPropagation()\"\n                            >\n                                {{ form_map[item.name].controls.name.value }}\n                                <app-icon [icon]=\"{ class: 'backoffice-edit' }\"></app-icon>\n                            </div>\n                            <ng-container *ngIf=\"edited[item.name]\">\n                                <button\n                                    mat-button\n                                    *ngIf=\"!loading[item.name]; else load_state\"\n                                    (click)=\"$event.stopPropagation()\"\n                                    (tapped)=\"saveMetadata(item)\"\n                                    i18n=\"@@saveAction\"\n                                >\n                                    Save\n                                </button>\n                            </ng-container>\n                            <div class=\"contents\" *ngIf=\"!item.new\">\n                                <button mat-icon-button (tapped)=\"deleteMetadata(item.name)\">\n                                    <app-icon [icon]=\"{ class: 'backoffice-trash' }\"></app-icon>\n                                </button>\n                            </div>\n                        </mat-panel-title>\n                    </mat-expansion-panel-header>\n                    <div class=\"settings\">\n                        <settings-form-field\n                            formControlName=\"details\"\n                            lang=\"json\"\n                            [readonly]=\"false\"\n                        ></settings-form-field>\n                    </div>\n                </mat-expansion-panel>\n            </ng-container>\n        </mat-accordion>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"text\" i18n=\"@@zoneMetadataEmpty\">No zone metadata found</div>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <mat-spinner diameter=\"32\"></mat-spinner>\n</ng-template>\n","import { Component, Input, OnChanges, SimpleChange, OnInit } from '@angular/core';\nimport { EngineZone, EngineSystem } from '@placeos/ts-client';\nimport { Observable, Subject, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map } from 'rxjs/operators';\n\nimport { BaseDirective } from '../../../shared/globals/base.directive';\nimport { ApplicationService } from '../../../services/app.service';\n\n@Component({\n    selector: 'zone-systems',\n    templateUrl: './zone-systems.template.html',\n    styleUrls: ['./zone-systems.styles.scss']\n})\nexport class ZoneSystemsComponent extends BaseDirective implements OnChanges, OnInit {\n    @Input() public item: EngineZone;\n    /** List of systems associated with the zone */\n    public system_list: EngineSystem[] = [];\n    /** Filter string for the systems */\n    public search_str: string;\n    /** List of items from an API search */\n    public search_results$: Observable<EngineSystem[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** Whether systems are being loaded */\n    public loading: boolean;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'item',\n            this._service.listen('BACKOFFICE.active_item').subscribe(item => {\n                this.item = item;\n                this.ngOnChanges({ item: new SimpleChange(null, this.item, false) });\n            })\n        );\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.loading = true;\n                return this._service.Systems.query({\n                    q: query,\n                    module_id: this.item.id,\n                    offset: 0\n                });\n            }),\n            catchError(err => {\n                console.error(err);\n                return of([]);\n            }),\n            map((list: EngineSystem[]) => {\n                this.loading = false;\n                const search = this.search_str.toLowerCase();\n                return list.filter(\n                    (item: any) =>\n                        item.name.toLowerCase().indexOf(search) >= 0 ||\n                        (item.email || '').toLowerCase().indexOf(search) >= 0\n                );\n            })\n        );\n        this.search$.next('');\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => (this.system_list = list))\n        );\n    }\n\n    public ngOnChanges(changes: any) {\n        if (changes.item && this.item) {\n            this.loadSystems();\n        }\n    }\n\n    public loadSystems(offset: number = 0) {\n        this._service.Systems.query({ offset, zone_id: this.item.id, limit: 500 }).then(\n            list => (this.system_list = list)\n        );\n    }\n}\n","<div class=\"container\" *ngIf=\"item\">\n    <div class=\"btn\">\n        <mat-form-field appearance=\"outline\">\n            <div class=\"prefix\" matPrefix>\n                <app-icon [icon]=\"{ class: 'backoffice-magnifying-glass' }\"></app-icon>\n            </div>\n            <input\n                matInput\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"search$.next($event)\"\n                name=\"search-filter\"\n                placeholder=\"Filter Systems\"\n            />\n        </mat-form-field>\n    </div>\n    <div class=\"list\" *ngIf=\"system_list && system_list.length > 0; else empty_state\">\n        <table>\n            <thead>\n                <td class=\"flex\" i18n=\"@@systemTableName\">Name</td>\n                <td class=\"devices\" i18n=\"@@systemTablePanelCount\">No. Modules</td>\n                <td class=\"created\" i18n=\"@@systemTableCreated\">Created</td>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let item of system_list\">\n                    <td class=\"flex\">\n                        <a\n                            [routerLink]=\"['/systems', item.id]\"\n                            routerLinkActive=\"router-link-active\"\n                            [matTooltip]=\"item.id\"\n                        >\n                            {{item.name}}\n                        </a>\n                    </td>\n                    <td class=\"devices align-right\">{{item.installed_ui_devices}}</td>\n                    <td class=\"created\">{{item.display?.created}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"text\" i18n=\"@@systemTableEmpty\">No systems found</div>\n    </div>\n</ng-template>\n","import { Component, Input, OnChanges, SimpleChange, OnInit } from '@angular/core';\nimport { EngineZone, EngineTrigger } from '@placeos/ts-client';\n\nimport { ApplicationService } from '../../../services/app.service';\nimport { BaseDirective } from 'src/app/shared/globals/base.directive';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport {\n    SelectItemModalComponent,\n    SelectItemModalData\n} from 'src/app/overlays/select-item-modal/select-item-modal.component';\n\n@Component({\n    selector: 'zone-triggers',\n    templateUrl: './zone-triggers.template.html',\n    styleUrls: ['./zone-triggers.styles.scss']\n})\nexport class ZoneTriggersComponent extends BaseDirective implements OnChanges, OnInit {\n    @Input() public item: EngineZone;\n\n    public model: any = {};\n    /** Filter string for zone list */\n    public search_str: string;\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'item',\n            this._service.listen('BACKOFFICE.active_item').subscribe(item => {\n                this.item = item;\n                this.ngOnChanges({ item: new SimpleChange(null, this.item, false) });\n            })\n        );\n    }\n\n    public ngOnChanges(changes: any) {\n        if (changes.item && this.item) {\n            this.loadZoneTriggers();\n        }\n    }\n\n    public loadZoneTriggers(offset: number = 0) {\n        this._service.Triggers.query({ zone_id: this.item.id, offset } as any).then(\n            list => {\n                this.model.triggers = list;\n            },\n            () => null\n        );\n    }\n\n    /**\n     * Remove a trigger from the active system\n     * @param trigger Trigger to remove\n     */\n    public deleteTrigger(trigger: EngineTrigger) {\n        if (this.item && trigger) {\n            const index = this.item.triggers.indexOf(trigger.id);\n            if (index < 0) {\n                return;\n            }\n            const ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n                ConfirmModalComponent,\n                {\n                    ...CONFIRM_METADATA,\n                    data: {\n                        title: `Remove trigger`,\n                        content: `<p>Are you sure you want remove trigger \"${trigger.name}\"?</p><p>Configuration will be updated <strong>immediately</strong>.</p>`,\n                        icon: { type: 'icon', class: 'backoffice-trash' }\n                    }\n                }\n            );\n            this.subscription(\n                'delete_confirm',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    if (event.reason === 'done') {\n                        ref.componentInstance.loading = 'Removing trigger...';\n                        const triggers = [...this.item.triggers];\n                        triggers.splice(index, 1);\n                        this.item.storePendingChange('triggers', triggers);\n                        this.item.save().then(\n                            () => this._service.notifySuccess('Sucessfully removed trigger'),\n                            err =>\n                                this._service.notifyError(\n                                    `Error removing trigger. Error: ${JSON.stringify(err.response || err.message || err)}`\n                                )\n                        );\n                        ref.close();\n                        this.unsub('delete_confirm');\n                    }\n                })\n            );\n        }\n    }\n\n    /**\n     * Open modal to select a trigger to add\n     */\n    public selectTriggerToAdd(): void {\n        const ref = this._dialog.open<SelectItemModalComponent, SelectItemModalData>(\n            SelectItemModalComponent,\n            {\n                height: 'auto',\n                width: 'auto',\n                data: {\n                    service_name: 'Triggers'\n                }\n            }\n        );\n        this.subscription(\n            'dialog_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                const item = ref.componentInstance.item;\n                if (event.reason === 'action' && item) {\n                    this.addTrigger(item);\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('dialog_events'));\n    }\n\n    /**\n     * Add the selected trigger to the active system\n     * @param trigger Trigger to add to system\n     */\n    private addTrigger(trigger: EngineTrigger): void {\n        const triggers = unique(this.item.triggers.concat(trigger.id));\n        this.item.storePendingChange('triggers', triggers);\n        this.item.save().then(\n            () => this._service.notifySuccess('Sucessfully added trigger'),\n            err => this._service.notifyError(`Error adding trigger. Error: ${JSON.stringify(err.response || err.message || err)}`)\n        );\n    }\n}\n","<div class=\"container\">\n    <div class=\"settings\">\n        <section class=\"select\">\n            <div class=\"dropdown\">\n                <button mat-button (tapped)=\"selectTriggerToAdd()\" i18n=\"@@addTriggerAction\">\n                    Add trigger\n                </button>\n            </div>\n            <mat-form-field appearance=\"outline\">\n                <div class=\"prefix\" matPrefix>\n                    <app-icon [icon]=\"{ class: 'backoffice-magnifying-glass' }\"></app-icon>\n                </div>\n                <input\n                    matInput\n                    [(ngModel)]=\"search_str\"\n                    name=\"search-filter\"\n                    placeholder=\"Filter Triggers\"\n                    i18n-placeholder=\"@@triggerTableFilter\"\n                />\n            </mat-form-field>\n        </section>\n        <section class=\"list\">\n            <table *ngIf=\"model.triggers && model.triggers.length > 0\">\n                <thead>\n                    <td class=\"name\" i18n=\"@@triggerTableName\">Name</td>\n                    <td class=\"flex\" i18n=\"@@descriptionLabel\">Description</td>\n                    <td class=\"small\"></td>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let trigger of model.triggers\">\n                        <td class=\"name\">\n                            <a [routerLink]=\"['/triggers', trigger.id]\" [matTooltip]=\"trigger.id\"\n                                >{{trigger.name}}</a\n                            >\n                        </td>\n                        <td class=\"flex description\">{{trigger.description}}</td>\n                        <td class=\"small\">\n                            <button mat-icon-button (tapped)=\"deleteTrigger(trigger)\">\n                                <app-icon [icon]=\"{ class: 'backoffice-trash' }\"></app-icon>\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <div class=\"info-block\" *ngIf=\"!model.triggers || model.triggers.length <= 0\">\n                <div class=\"text\" i18n=\"@@zoneTriggerTableEmpty\">No triggers for zone</div>\n            </div>\n        </section>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EngineZone } from '@placeos/ts-client';\n\nimport { ApplicationService } from '../../services/app.service';\nimport { BaseRootComponent } from '../../shared/components/base-root.component';\nimport { ItemCreateUpdateModalComponent } from 'src/app/overlays/item-modal/item-modal.component';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'app-zones',\n    templateUrl: './zones.template.html',\n    styleUrls: ['./zones.styles.scss']\n})\nexport class ZonesComponent extends BaseRootComponent<EngineZone> {\n    /** Number of systems associated with the active zone */\n    public system_count: number;\n    /** Number of triggers associated with the active zone */\n    public trigger_count: number;\n    /** Number of zones associated with the active zone */\n    public child_count: number;\n    /** Number of metadata properties associated with the active zone */\n    public metadata_count: number;\n\n    constructor(\n        protected _service: ApplicationService,\n        protected _route: ActivatedRoute,\n        protected _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super(_service, _route, _router);\n        this.service = this._service.Zones;\n    }\n\n    public ngOnInit(): void {\n        super.ngOnInit();\n        this._service.title = 'Zones';\n    }\n\n    protected async loadValues() {\n        // Get system count\n        const query: any = { offset: 0, limit: 1, zone_id: this.item.id };\n        let list: any[] = await this._service.Systems.query(query);\n        this.system_count = this._service.Systems.last_total || list.length || 0;\n        // Get trigger count\n        const tquery: any = { offset: 0, limit: 1, zone_id: this.item.id };\n        list = await this._service.Triggers.query(tquery);\n        console.log('Triggers:', this._service.Triggers.last_total);\n        this.trigger_count = this._service.Triggers.last_total || list.length || 0;\n        // Get child zone count\n        const cquery: any = { offset: 0, limit: 1, parent: this.item.id };\n        list = await this._service.Zones.query(cquery);\n        this.child_count = this._service.Zones.last_total || list.length || 0;\n        // Get metadata\n        const map = await this._service.Zones.listMetadata(this.item.id);\n        this.metadata_count = Object.keys(map).length;\n    }\n\n    /**\n     * Open the modal to create a new system\n     */\n    protected newItem(copy: boolean = false) {\n        if (this.modal_ref) { return; }\n        this.modal_ref = this._dialog.open(ItemCreateUpdateModalComponent, {\n            height: 'auto',\n            width: 'auto',\n            maxHeight: 'calc(100vh - 2em)',\n            maxWidth: 'calc(100vw - 2em)',\n            data: {\n                item: copy ? new EngineZone({ ...this.item, id: '', name: `${this.item.name} (1)` }) : new EngineZone(),\n                service: this._service.Domains\n            }\n        });\n        this.subscription('modal_events', this.modal_ref.componentInstance.event.subscribe(event => {\n            if (event.reason === 'done') {\n                this._router.navigate(['/zones', event.metadata.item.id]);\n            }\n        }));\n        this.modal_ref.afterClosed().subscribe(() => {\n            this.unsub('modal_events');\n            this.modal_ref = null;\n        });\n    }\n\n    /**\n     * Open the modal to create a new system\n     */\n    protected editItem() {\n        if (this.item && !this.modal_ref) {\n            this.modal_ref = this._dialog.open(ItemCreateUpdateModalComponent, {\n                height: 'auto',\n                width: 'auto',\n                maxHeight: 'calc(100vh - 2em)',\n                maxWidth: 'calc(100vw - 2em)',\n                data: {\n                    item: this.item,\n                    service: this._service.Zones\n                }\n            });\n            this.modal_ref.afterClosed().subscribe(() => {\n                this.unsub('modal_events');\n                this.modal_ref = null;\n            });\n        }\n    }\n\n    protected deleteItem() {\n        if (this.item && !this.modal_ref) {\n            this.modal_ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n                ConfirmModalComponent,\n                {\n                    ...CONFIRM_METADATA,\n                    data: {\n                        title: `Delete zone`,\n                        content: `<p>Are you sure you want delete this zone?</p><p>Deleting this zone will <strong>immediately</strong> remove systems without another zone</p>`,\n                        icon: { type: 'icon', class: 'backoffice-trash' }\n                    }\n                }\n            );\n            this.subscription(\n                'modal_events',\n                this.modal_ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    if (event.reason === 'done') {\n                        this.modal_ref.componentInstance.loading = 'Deleting zone...';\n                        this.item.delete().then(\n                            () => {\n                                this._service.notifySuccess(\n                                    `Successfully deleted zone \"${this.item.name}\".`\n                                );\n                                this._router.navigate(['/zones']);\n                                this._service.set('BACKOFFICE.removed', this.item.id);\n                                this.modal_ref.close();\n                            },\n                            err => {\n                                this.modal_ref.componentInstance.loading = null;\n                                this._service.notifyError(`Error deleting zone. Error: ${JSON.stringify(err.response || err.message || err)}`);\n                            }\n                        );\n                    }\n                })\n            );\n            this.modal_ref.afterClosed().subscribe(() => {\n                this.unsub('modal_events');\n                this.modal_ref = null;\n            });\n        }\n    }\n}\n","<div class=\"container\" [class.show]=\"show_sidebar\">\n    <div class=\"sidebar\">\n        <sidebar\n            heading=\"Zones\"\n            [module]=\"module\"\n            [close]=\"show_sidebar\"\n            (event)=\"sidebarEvent($event)\"\n        ></sidebar>\n    </div>\n    <main (touchrelease)=\"show_sidebar = false\">\n        <item-display\n            name=\"zone\"\n            route=\"zones\"\n            [item]=\"item\"\n            [tabs]=\"[\n                { id: 'about', name: 'About', icon: { class: 'backoffice-info-with-circle' } },\n                {\n                    id: 'systems',\n                    name: 'Systems',\n                    count: system_count,\n                    icon: { class: 'backoffice-documents' }\n                },\n                { id: 'triggers', name: 'Triggers', count: trigger_count, icon: { class: 'backoffice-stopwatch' } },\n                { id: 'metadata', name: 'Metadata', count: metadata_count, icon: { class: 'backoffice-gist' } },\n                { id: 'children', name: 'Children', count: child_count, icon: { class: 'backoffice-flow-tree' } }\n            ]\"\n            (event)=\"itemEvent($event)\"\n        >\n        </item-display>\n    </main>\n</div>\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { ROUTES } from './zones.routes';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\n\nimport { ZonesComponent } from './zones.component';\nimport { ZoneAboutComponent } from './zone-about/zone-about.component';\nimport { ZoneSystemsComponent } from './zone-systems/zone-systems.component';\nimport { ZoneTriggersComponent } from './zone-triggers/zone-triggers.component';\nimport { ZoneChildrenComponent } from './zone-children/zone-children.component';\nimport { ZoneMetadataComponent } from './zone-metadata/zone-metadata.component';\n\n\n@NgModule({\n    declarations: [\n        ZonesComponent,\n        ZoneAboutComponent,\n        ZoneSystemsComponent,\n        ZoneTriggersComponent,\n        ZoneChildrenComponent,\n        ZoneMetadataComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule\n    ]\n})\nexport class AppZonesModule { }\n","import { Routes } from '@angular/router';\n\nimport { ZonesComponent } from './zones.component';\nimport { ZoneAboutComponent } from './zone-about/zone-about.component';\nimport { ZoneSystemsComponent } from './zone-systems/zone-systems.component';\nimport { ZoneTriggersComponent } from './zone-triggers/zone-triggers.component';\nimport { ZoneChildrenComponent } from './zone-children/zone-children.component';\nimport { ZoneMetadataComponent } from './zone-metadata/zone-metadata.component';\n\nexport const ROUTES: Routes = [\n    {\n        path: ':id',\n        component: ZonesComponent,\n        children: [\n            { path: 'about', component: ZoneAboutComponent },\n            { path: 'systems', component: ZoneSystemsComponent },\n            { path: 'triggers', component: ZoneTriggersComponent },\n            { path: 'children', component: ZoneChildrenComponent },\n            { path: 'metadata', component: ZoneMetadataComponent },\n            { path: '**', redirectTo: 'about' }\n        ]\n    },\n    { path: '**', redirectTo: '-' }\n];\n"]}